

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Aug 19 12:09:43 2020

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  002124                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for SetupTime@F4496
    49  002124  53                 	db	83
    50  002125  65                 	db	101
    51  002126  74                 	db	116
    52  002127  20                 	db	32
    53  002128  74                 	db	116
    54  002129  69                 	db	105
    55  00212A  6D                 	db	109
    56  00212B  65                 	db	101
    57  00212C  20                 	db	32
    58  00212D  68                 	db	104
    59  00212E  68                 	db	104
    60  00212F  6D                 	db	109
    61  002130  6D                 	db	109
    62  002131  73                 	db	115
    63  002132  73                 	db	115
    64  002133  3A                 	db	58
    65  002134  20                 	db	32
    66  002135  20                 	db	32
    67  002136  20                 	db	32
    68  002137  20                 	db	32
    69  002138  00                 	db	0
    70                           
    71                           	psect	idataBANK0
    72  002139                     __pidataBANK0:
    73                           	opt stack 0
    74                           
    75                           ;initializer for SetupAlarmTime@F4507
    76  002139  43                 	db	67
    77  00213A  68                 	db	104
    78  00213B  6F                 	db	111
    79  00213C  6F                 	db	111
    80  00213D  73                 	db	115
    81  00213E  65                 	db	101
    82  00213F  20                 	db	32
    83  002140  43                 	db	67
    84  002141  6F                 	db	111
    85  002142  6D                 	db	109
    86  002143  20                 	db	32
    87  002144  46                 	db	70
    88  002145  2C                 	db	44
    89  002146  45                 	db	69
    90  002147  20                 	db	32
    91  002148  6F                 	db	111
    92  002149  72                 	db	114
    93  00214A  20                 	db	32
    94  00214B  44                 	db	68
    95  00214C  3A                 	db	58
    96  00214D  00                 	db	0
    97                           
    98                           	psect	idataBANK1
    99  001B7C                     __pidataBANK1:
   100                           	opt stack 0
   101                           
   102                           ;initializer for CompartDtime@F4528
   103  001B7C  53                 	db	83
   104  001B7D  65                 	db	101
   105  001B7E  74                 	db	116
   106  001B7F  20                 	db	32
   107  001B80  43                 	db	67
   108  001B81  6F                 	db	111
   109  001B82  6D                 	db	109
   110  001B83  20                 	db	32
   111  001B84  44                 	db	68
   112  001B85  20                 	db	32
   113  001B86  74                 	db	116
   114  001B87  69                 	db	105
   115  001B88  6D                 	db	109
   116  001B89  65                 	db	101
   117  001B8A  20                 	db	32
   118  001B8B  68                 	db	104
   119  001B8C  68                 	db	104
   120  001B8D  6D                 	db	109
   121  001B8E  6D                 	db	109
   122  001B8F  3A                 	db	58
   123  001B90  00                 	db	0
   124                           
   125                           ;initializer for CompartEtime@F4520
   126  001B91  53                 	db	83
   127  001B92  65                 	db	101
   128  001B93  74                 	db	116
   129  001B94  20                 	db	32
   130  001B95  43                 	db	67
   131  001B96  6F                 	db	111
   132  001B97  6D                 	db	109
   133  001B98  20                 	db	32
   134  001B99  45                 	db	69
   135  001B9A  20                 	db	32
   136  001B9B  74                 	db	116
   137  001B9C  69                 	db	105
   138  001B9D  6D                 	db	109
   139  001B9E  65                 	db	101
   140  001B9F  20                 	db	32
   141  001BA0  68                 	db	104
   142  001BA1  68                 	db	104
   143  001BA2  6D                 	db	109
   144  001BA3  6D                 	db	109
   145  001BA4  3A                 	db	58
   146  001BA5  00                 	db	0
   147                           
   148                           ;initializer for CompartFtime@F4513
   149  001BA6  53                 	db	83
   150  001BA7  65                 	db	101
   151  001BA8  74                 	db	116
   152  001BA9  20                 	db	32
   153  001BAA  43                 	db	67
   154  001BAB  6F                 	db	111
   155  001BAC  6D                 	db	109
   156  001BAD  20                 	db	32
   157  001BAE  46                 	db	70
   158  001BAF  20                 	db	32
   159  001BB0  74                 	db	116
   160  001BB1  69                 	db	105
   161  001BB2  6D                 	db	109
   162  001BB3  65                 	db	101
   163  001BB4  20                 	db	32
   164  001BB5  68                 	db	104
   165  001BB6  68                 	db	104
   166  001BB7  6D                 	db	109
   167  001BB8  6D                 	db	109
   168  001BB9  3A                 	db	58
   169  001BBA  00                 	db	0
   170                           
   171                           ;initializer for displayAlarmOff@F4541
   172  001BBB  41                 	db	65
   173  001BBC  6C                 	db	108
   174  001BBD  61                 	db	97
   175  001BBE  72                 	db	114
   176  001BBF  6D                 	db	109
   177  001BC0  20                 	db	32
   178  001BC1  4F                 	db	79
   179  001BC2  66                 	db	102
   180  001BC3  66                 	db	102
   181  001BC4  20                 	db	32
   182  001BC5  20                 	db	32
   183  001BC6  20                 	db	32
   184  001BC7  20                 	db	32
   185  001BC8  20                 	db	32
   186  001BC9  20                 	db	32
   187  001BCA  20                 	db	32
   188  001BCB  20                 	db	32
   189  001BCC  20                 	db	32
   190  001BCD  20                 	db	32
   191  001BCE  20                 	db	32
   192  001BCF  00                 	db	0
   193                           
   194                           ;initializer for displayDlarmOn@F4536
   195  001BD0  41                 	db	65
   196  001BD1  6C                 	db	108
   197  001BD2  61                 	db	97
   198  001BD3  72                 	db	114
   199  001BD4  6D                 	db	109
   200  001BD5  20                 	db	32
   201  001BD6  4F                 	db	79
   202  001BD7  6E                 	db	110
   203  001BD8  20                 	db	32
   204  001BD9  20                 	db	32
   205  001BDA  20                 	db	32
   206  001BDB  20                 	db	32
   207  001BDC  20                 	db	32
   208  001BDD  20                 	db	32
   209  001BDE  20                 	db	32
   210  001BDF  20                 	db	32
   211  001BE0  20                 	db	32
   212  001BE1  20                 	db	32
   213  001BE2  20                 	db	32
   214  001BE3  20                 	db	32
   215  001BE4  00                 	db	0
   216                           
   217                           ;initializer for main@F4550
   218  001BE5  53                 	db	83
   219  001BE6  74                 	db	116
   220  001BE7  61                 	db	97
   221  001BE8  72                 	db	114
   222  001BE9  74                 	db	116
   223  001BEA  20                 	db	32
   224  001BEB  74                 	db	116
   225  001BEC  69                 	db	105
   226  001BED  6D                 	db	109
   227  001BEE  65                 	db	101
   228  001BEF  72                 	db	114
   229  001BF0  3F                 	db	63
   230  001BF1  20                 	db	32
   231  001BF2  50                 	db	80
   232  001BF3  72                 	db	114
   233  001BF4  65                 	db	101
   234  001BF5  73                 	db	115
   235  001BF6  73                 	db	115
   236  001BF7  20                 	db	32
   237  001BF8  41                 	db	65
   238  001BF9  00                 	db	0
   239                           
   240                           ;initializer for main@F4552
   241  001BFA  41                 	db	65
   242  001BFB  64                 	db	100
   243  001BFC  64                 	db	100
   244  001BFD  20                 	db	32
   245  001BFE  74                 	db	116
   246  001BFF  69                 	db	105
   247  001C00  6D                 	db	109
   248  001C01  65                 	db	101
   249  001C02  72                 	db	114
   250  001C03  3F                 	db	63
   251  001C04  20                 	db	32
   252  001C05  50                 	db	80
   253  001C06  72                 	db	114
   254  001C07  65                 	db	101
   255  001C08  73                 	db	115
   256  001C09  73                 	db	115
   257  001C0A  20                 	db	32
   258  001C0B  61                 	db	97
   259  001C0C  6E                 	db	110
   260  001C0D  79                 	db	121
   261  001C0E  00                 	db	0
   262                           
   263                           	psect	smallconst
   264  00101A                     __psmallconst:
   265                           	opt stack 0
   266  00101A  00                 	db	0
   267  00101B                     getkey@F4444:
   268                           	opt stack 0
   269  00101B  31                 	db	49
   270  00101C  32                 	db	50
   271  00101D  33                 	db	51
   272  00101E  46                 	db	70
   273  00101F  34                 	db	52
   274  001020  35                 	db	53
   275  001021  36                 	db	54
   276  001022  45                 	db	69
   277  001023  37                 	db	55
   278  001024  38                 	db	56
   279  001025  39                 	db	57
   280  001026  44                 	db	68
   281  001027  41                 	db	65
   282  001028  30                 	db	48
   283  001029  42                 	db	66
   284  00102A  43                 	db	67
   285  00102B  20                 	db	32
   286  00102C  00                 	db	0
   287  00102D                     __end_ofgetkey@F4444:
   288                           	opt stack 0
   289  0000                     _ADCON1	set	4033
   290  0000                     _ADCON1bits	set	4033
   291  0000                     _INTCONbits	set	4082
   292  0000                     _PORTAbits	set	3968
   293  0000                     _PORTB	set	3969
   294  0000                     _PORTBbits	set	3969
   295  0000                     _PORTCbits	set	3970
   296  0000                     _PORTD	set	3971
   297  0000                     _PORTDbits	set	3971
   298  0000                     _T0CON	set	4053
   299  0000                     _TMR0H	set	4055
   300  0000                     _TMR0L	set	4054
   301  0000                     _TRISA	set	3986
   302  0000                     _TRISC	set	3988
   303  0000                     _TRISD	set	3989
   304  00102D  00                 	db	0	; dummy byte at the end
   305  0000                     
   306                           ; #config settings
   307                           
   308                           	psect	cinit
   309  001C10                     __pcinit:
   310                           	opt stack 0
   311  001C10                     start_initialization:
   312                           	opt stack 0
   313  001C10                     __initialization:
   314                           	opt stack 0
   315                           
   316                           ; Clear objects allocated to BANK0 (27 bytes)
   317  001C10  EE00  F098         	lfsr	0,__pbssBANK0
   318  001C14  0E1B               	movlw	27
   319  001C16                     clear_0:
   320  001C16  6AEE               	clrf	postinc0,c
   321  001C18  06E8               	decf	wreg,f,c
   322  001C1A  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to COMRAM (10 bytes)
   325  001C1C  EE00  F038         	lfsr	0,__pbssCOMRAM
   326  001C20  0E0A               	movlw	10
   327  001C22                     clear_1:
   328  001C22  6AEE               	clrf	postinc0,c
   329  001C24  06E8               	decf	wreg,f,c
   330  001C26  E1FD               	bnz	clear_1
   331                           
   332                           ; Initialize objects allocated to BANK1 (147 bytes)
   333                           ; load TBLPTR registers with __pidataBANK1
   334  001C28  0E7C               	movlw	low __pidataBANK1
   335  001C2A  6EF6               	movwf	tblptrl,c
   336  001C2C  0E1B               	movlw	high __pidataBANK1
   337  001C2E  6EF7               	movwf	tblptrh,c
   338  001C30  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   339  001C32  6EF8               	movwf	tblptru,c
   340  001C34  EE01  F000         	lfsr	0,__pdataBANK1
   341  001C38  EE10 F093          	lfsr	1,147
   342  001C3C                     copy_data0:
   343  001C3C  0009               	tblrd		*+
   344  001C3E  CFF5 FFEE          	movff	tablat,postinc0
   345  001C42  50E5               	movf	postdec1,w,c
   346  001C44  50E1               	movf	fsr1l,w,c
   347  001C46  E1FA               	bnz	copy_data0
   348                           
   349                           ; Initialize objects allocated to BANK0 (21 bytes)
   350                           ; load TBLPTR registers with __pidataBANK0
   351  001C48  0E39               	movlw	low __pidataBANK0
   352  001C4A  6EF6               	movwf	tblptrl,c
   353  001C4C  0E21               	movlw	high __pidataBANK0
   354  001C4E  6EF7               	movwf	tblptrh,c
   355  001C50  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   356  001C52  6EF8               	movwf	tblptru,c
   357  001C54  EE00  F0B3         	lfsr	0,__pdataBANK0
   358  001C58  EE10 F015          	lfsr	1,21
   359  001C5C                     copy_data1:
   360  001C5C  0009               	tblrd		*+
   361  001C5E  CFF5 FFEE          	movff	tablat,postinc0
   362  001C62  50E5               	movf	postdec1,w,c
   363  001C64  50E1               	movf	fsr1l,w,c
   364  001C66  E1FA               	bnz	copy_data1
   365                           
   366                           ; Initialize objects allocated to COMRAM (21 bytes)
   367                           ; load TBLPTR registers with __pidataCOMRAM
   368  001C68  0E24               	movlw	low __pidataCOMRAM
   369  001C6A  6EF6               	movwf	tblptrl,c
   370  001C6C  0E21               	movlw	high __pidataCOMRAM
   371  001C6E  6EF7               	movwf	tblptrh,c
   372  001C70  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   373  001C72  6EF8               	movwf	tblptru,c
   374  001C74  EE00  F023         	lfsr	0,__pdataCOMRAM
   375  001C78  EE10 F015          	lfsr	1,21
   376  001C7C                     copy_data2:
   377  001C7C  0009               	tblrd		*+
   378  001C7E  CFF5 FFEE          	movff	tablat,postinc0
   379  001C82  50E5               	movf	postdec1,w,c
   380  001C84  50E1               	movf	fsr1l,w,c
   381  001C86  E1FA               	bnz	copy_data2
   382  001C88                     end_of_initialization:
   383                           	opt stack 0
   384  001C88                     __end_of__initialization:
   385                           	opt stack 0
   386  001C88  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   387  001C8A  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   388  001C8C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   389  001C8E  6EF8               	movwf	tblptru,c
   390  001C90  0100               	movlb	0
   391  001C92  EF17  F008         	goto	_main	;jump to C main() function
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	bssCOMRAM
   402  000038                     __pbssCOMRAM:
   403                           	opt stack 0
   404  000038                     _hour:
   405                           	opt stack 0
   406  000038                     	ds	2
   407  00003A                     _hourA:
   408                           	opt stack 0
   409  00003A                     	ds	2
   410  00003C                     _minute:
   411                           	opt stack 0
   412  00003C                     	ds	2
   413  00003E                     _minuteA:
   414                           	opt stack 0
   415  00003E                     	ds	2
   416  000040                     _second:
   417                           	opt stack 0
   418  000040                     	ds	2
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	dataCOMRAM
   429  000023                     __pdataCOMRAM:
   430                           	opt stack 0
   431  000023                     SetupTime@F4496:
   432                           	opt stack 0
   433  000023                     	ds	21
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	bssBANK0
   444  000098                     __pbssBANK0:
   445                           	opt stack 0
   446  000098                     _fArr:
   447                           	opt stack 0
   448  000098                     	ds	8
   449  0000A0                     _hourD:
   450                           	opt stack 0
   451  0000A0                     	ds	2
   452  0000A2                     _hourE:
   453                           	opt stack 0
   454  0000A2                     	ds	2
   455  0000A4                     _hourF:
   456                           	opt stack 0
   457  0000A4                     	ds	2
   458  0000A6                     _minuteD:
   459                           	opt stack 0
   460  0000A6                     	ds	2
   461  0000A8                     _minuteE:
   462                           	opt stack 0
   463  0000A8                     	ds	2
   464  0000AA                     _minuteF:
   465                           	opt stack 0
   466  0000AA                     	ds	2
   467  0000AC                     _snooze_D:
   468                           	opt stack 0
   469  0000AC                     	ds	2
   470  0000AE                     _snooze_E:
   471                           	opt stack 0
   472  0000AE                     	ds	2
   473  0000B0                     _snooze_F:
   474                           	opt stack 0
   475  0000B0                     	ds	2
   476  0000B2                     _ComOpt:
   477                           	opt stack 0
   478  0000B2                     	ds	1
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           postdec1	equ	0xFE5
   486                           fsr1l	equ	0xFE1
   487                           
   488                           	psect	dataBANK0
   489  0000B3                     __pdataBANK0:
   490                           	opt stack 0
   491  0000B3                     SetupAlarmTime@F4507:
   492                           	opt stack 0
   493  0000B3                     	ds	21
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           	psect	dataBANK1
   504  000100                     __pdataBANK1:
   505                           	opt stack 0
   506  000100                     CompartDtime@F4528:
   507                           	opt stack 0
   508  000100                     	ds	21
   509  000115                     CompartEtime@F4520:
   510                           	opt stack 0
   511  000115                     	ds	21
   512  00012A                     CompartFtime@F4513:
   513                           	opt stack 0
   514  00012A                     	ds	21
   515  00013F                     displayAlarmOff@F4541:
   516                           	opt stack 0
   517  00013F                     	ds	21
   518  000154                     displayDlarmOn@F4536:
   519                           	opt stack 0
   520  000154                     	ds	21
   521  000169                     main@F4550:
   522                           	opt stack 0
   523  000169                     	ds	21
   524  00017E                     main@F4552:
   525                           	opt stack 0
   526  00017E                     	ds	21
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           postinc0	equ	0xFEE
   532                           wreg	equ	0xFE8
   533                           postdec1	equ	0xFE5
   534                           fsr1l	equ	0xFE1
   535                           
   536                           	psect	cstackBANK1
   537  000193                     __pcstackBANK1:
   538                           	opt stack 0
   539  000193                     main@Message:
   540                           	opt stack 0
   541                           
   542                           ; 21 bytes @ 0x0
   543  000193                     	ds	21
   544  0001A8                     main@Message1:
   545                           	opt stack 0
   546                           
   547                           ; 21 bytes @ 0x15
   548  0001A8                     	ds	21
   549  0001BD                     main@setup:
   550                           	opt stack 0
   551                           
   552                           ; 12 bytes @ 0x2A
   553  0001BD                     	ds	12
   554  0001C9                     main@displayUpdated:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x36
   558  0001C9                     	ds	1
   559  0001CA                     main@ctemp:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x37
   563  0001CA                     	ds	1
   564  0001CB                     main@outchar:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x38
   568  0001CB                     	ds	1
   569  0001CC                     main@msgindex:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x39
   573  0001CC                     	ds	1
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           tblptrl	equ	0xFF6
   577                           tablat	equ	0xFF5
   578                           postinc0	equ	0xFEE
   579                           wreg	equ	0xFE8
   580                           postdec1	equ	0xFE5
   581                           fsr1l	equ	0xFE1
   582                           
   583                           	psect	cstackBANK0
   584  000060                     __pcstackBANK0:
   585                           	opt stack 0
   586  000060                     ??_lcd_strobe:
   587  000060                     ?___wmul:
   588                           	opt stack 0
   589  000060                     char_2_int@char1:
   590                           	opt stack 0
   591  000060                     delay_ms@i:
   592                           	opt stack 0
   593  000060                     ___wmul@multiplier:
   594                           	opt stack 0
   595  000060                     getkey@lookup:
   596                           	opt stack 0
   597                           
   598                           ; 18 bytes @ 0x0
   599  000060                     	ds	1
   600  000061                     ??_lcd_write_cmd:
   601  000061                     ??_lcd_write_data:
   602  000061                     char_2_int@int1:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x1
   606  000061                     	ds	1
   607  000062                     ??_delay_ms:
   608  000062                     lcd_write_cmd@cmd:
   609                           	opt stack 0
   610  000062                     lcd_write_data@data:
   611                           	opt stack 0
   612  000062                     ___wmul@multiplicand:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x2
   616  000062                     	ds	1
   617  000063                     lcd_write_cmd@temp2:
   618                           	opt stack 0
   619  000063                     lcd_write_data@temp1:
   620                           	opt stack 0
   621  000063                     delay_ms@j:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x3
   625  000063                     	ds	1
   626  000064                     ??_lcd_init:
   627  000064                     ___wmul@product:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x4
   631  000064                     	ds	1
   632  000065                     lcd_init@i:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x5
   636  000065                     	ds	13
   637  000072                     getkey@keycode:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0x12
   641  000072                     	ds	1
   642  000073                     ??_CompartFtime:
   643  000073                     ??_CompartEtime:
   644  000073                     ??_CompartDtime:
   645  000073                     SetupTime@setuptime:
   646                           	opt stack 0
   647  000073                     SetupAlarmTime@Message:
   648                           	opt stack 0
   649                           
   650                           ; 21 bytes @ 0x13
   651  000073                     	ds	2
   652  000075                     ??_SetupTime:
   653  000075                     CompartFtime@Message:
   654                           	opt stack 0
   655  000075                     CompartEtime@Message:
   656                           	opt stack 0
   657  000075                     CompartDtime@Message:
   658                           	opt stack 0
   659                           
   660                           ; 21 bytes @ 0x15
   661  000075                     	ds	2
   662  000077                     SetupTime@Message:
   663                           	opt stack 0
   664                           
   665                           ; 21 bytes @ 0x17
   666  000077                     	ds	17
   667  000088                     SetupAlarmTime@outchar:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x28
   671  000088                     	ds	1
   672  000089                     SetupAlarmTime@ctemp:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x29
   676  000089                     	ds	1
   677  00008A                     SetupAlarmTime@msgindex:
   678                           	opt stack 0
   679  00008A                     CompartFtime@outchar:
   680                           	opt stack 0
   681  00008A                     CompartEtime@eArr:
   682                           	opt stack 0
   683  00008A                     CompartDtime@dArr:
   684                           	opt stack 0
   685                           
   686                           ; 8 bytes @ 0x2A
   687  00008A                     	ds	1
   688  00008B                     CompartFtime@ctemp:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x2B
   692  00008B                     	ds	1
   693  00008C                     SetupTime@outchar:
   694                           	opt stack 0
   695  00008C                     CompartFtime@i:
   696                           	opt stack 0
   697                           
   698                           ; 2 bytes @ 0x2C
   699  00008C                     	ds	1
   700  00008D                     SetupTime@ctemp:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x2D
   704  00008D                     	ds	1
   705  00008E                     CompartFtime@msgindex:
   706                           	opt stack 0
   707  00008E                     SetupTime@i:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x2E
   711  00008E                     	ds	2
   712  000090                     SetupTime@msgindex:
   713                           	opt stack 0
   714                           
   715                           ; 1 bytes @ 0x30
   716  000090                     	ds	2
   717  000092                     CompartEtime@outchar:
   718                           	opt stack 0
   719  000092                     CompartDtime@outchar:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x32
   723  000092                     	ds	1
   724  000093                     CompartEtime@ctemp:
   725                           	opt stack 0
   726  000093                     CompartDtime@ctemp:
   727                           	opt stack 0
   728                           
   729                           ; 1 bytes @ 0x33
   730  000093                     	ds	1
   731  000094                     CompartEtime@i:
   732                           	opt stack 0
   733  000094                     CompartDtime@i:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x34
   737  000094                     	ds	2
   738  000096                     CompartEtime@msgindex:
   739                           	opt stack 0
   740  000096                     CompartDtime@msgindex:
   741                           	opt stack 0
   742                           
   743                           ; 1 bytes @ 0x36
   744  000096                     	ds	1
   745  000097                     ??_main:
   746                           
   747                           ; 0 bytes @ 0x37
   748  000097                     	ds	1
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           postinc0	equ	0xFEE
   754                           wreg	equ	0xFE8
   755                           postdec1	equ	0xFE5
   756                           fsr1l	equ	0xFE1
   757                           
   758                           	psect	cstackCOMRAM
   759  000001                     __pcstackCOMRAM:
   760                           	opt stack 0
   761  000001                     ??i2_lcd_strobe:
   762  000001                     ?___awdiv:
   763                           	opt stack 0
   764  000001                     ?i2___wmul:
   765                           	opt stack 0
   766  000001                     int_2_char@int1:
   767                           	opt stack 0
   768  000001                     ___awdiv@dividend:
   769                           	opt stack 0
   770  000001                     i2___wmul@multiplier:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x0
   774  000001                     	ds	1
   775  000002                     ??i2_lcd_write_cmd:
   776  000002                     ??i2_lcd_write_data:
   777  000002                     int_2_char@char1:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x1
   781  000002                     	ds	1
   782  000003                     i2lcd_write_cmd@cmd:
   783                           	opt stack 0
   784  000003                     i2lcd_write_data@data:
   785                           	opt stack 0
   786  000003                     ___awdiv@divisor:
   787                           	opt stack 0
   788  000003                     i2___wmul@multiplicand:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x2
   792  000003                     	ds	1
   793  000004                     i2lcd_write_cmd@temp2:
   794                           	opt stack 0
   795  000004                     i2lcd_write_data@temp1:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x3
   799  000004                     	ds	1
   800  000005                     ___awdiv@counter:
   801                           	opt stack 0
   802  000005                     i2___wmul@product:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0x4
   806  000005                     	ds	1
   807  000006                     ___awdiv@sign:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x5
   811  000006                     	ds	1
   812  000007                     ___awdiv@quotient:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x6
   816  000007                     	ds	2
   817  000009                     ??_ISR_Timer0_Int:
   818                           
   819                           ; 0 bytes @ 0x8
   820  000009                     	ds	14
   821  000017                     ISR_Timer0_Int@hour1:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x16
   825  000017                     	ds	2
   826  000019                     ISR_Timer0_Int@minute1:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x18
   830  000019                     	ds	2
   831  00001B                     ISR_Timer0_Int@second1:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x1A
   835  00001B                     	ds	2
   836  00001D                     ISR_Timer0_Int@hour10:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x1C
   840  00001D                     	ds	2
   841  00001F                     ISR_Timer0_Int@minute10:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x1E
   845  00001F                     	ds	2
   846  000021                     ISR_Timer0_Int@second10:
   847                           	opt stack 0
   848                           
   849                           ; 2 bytes @ 0x20
   850  000021                     	ds	2
   851                           tblptru	equ	0xFF8
   852                           tblptrh	equ	0xFF7
   853                           tblptrl	equ	0xFF6
   854                           tablat	equ	0xFF5
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           postdec1	equ	0xFE5
   858                           fsr1l	equ	0xFE1
   859                           
   860 ;;
   861 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   862 ;;
   863 ;; *************** function _main *****************
   864 ;; Defined at:
   865 ;;		line 300 in file "Test2.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  Message1       21   21[BANK1 ] unsigned char [21]
   870 ;;  Message        21    0[BANK1 ] unsigned char [21]
   871 ;;  setup          12   42[BANK1 ] int [6]
   872 ;;  msgindex        1   57[BANK1 ] unsigned char 
   873 ;;  outchar         1   56[BANK1 ] unsigned char 
   874 ;;  ctemp           1   55[BANK1 ] unsigned char 
   875 ;;  displayUpdat    1   54[BANK1 ] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;		None               void
   878 ;; Registers used:
   879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         0       0       0       0       0       0       0       0       0
   886 ;;      Locals:         0       0      58       0       0       0       0       0       0
   887 ;;      Temps:          0       1       0       0       0       0       0       0       0
   888 ;;      Totals:         0       1      58       0       0       0       0       0       0
   889 ;;Total ram usage:       59 bytes
   890 ;; Hardware stack levels required when called:    6
   891 ;; This function calls:
   892 ;;		_CompartDtime
   893 ;;		_CompartEtime
   894 ;;		_CompartFtime
   895 ;;		_SetupAlarmTime
   896 ;;		_SetupTime
   897 ;;		_getkey
   898 ;;		_lcd_init
   899 ;;		_lcd_write_cmd
   900 ;;		_lcd_write_data
   901 ;; This function is called by:
   902 ;;		Startup code after reset
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text0
   907  00102E                     __ptext0:
   908                           	opt stack 0
   909  00102E                     _main:
   910                           	opt stack 25
   911                           
   912                           ;Test2.c: 302: unsigned char displayUpdated;
   913                           ;Test2.c: 303: unsigned char msgindex, outchar, ctemp;
   914                           ;Test2.c: 304: displayUpdated = 1;
   915                           
   916                           ;incstack = 0
   917  00102E  0E01               	movlw	1
   918  001030  0101               	movlb	1	; () banked
   919  001032  6FC9               	movwf	main@displayUpdated& (0+255),b
   920                           
   921                           ;Test2.c: 305: ADCON1 = 0x0F;
   922  001034  0E0F               	movlw	15
   923  001036  6EC1               	movwf	4033,c	;volatile
   924                           
   925                           ; BSR set to: 1
   926                           ;Test2.c: 306: ADCON1bits.VCFG1 = 0;
   927  001038  9AC1               	bcf	4033,5,c	;volatile
   928                           
   929                           ; BSR set to: 1
   930                           ;Test2.c: 307: ADCON1bits.VCFG0 = 0;
   931  00103A  98C1               	bcf	4033,4,c	;volatile
   932                           
   933                           ;Test2.c: 309: TRISA = 0b00000000;
   934  00103C  0E00               	movlw	0
   935  00103E  6E92               	movwf	3986,c	;volatile
   936                           
   937                           ;Test2.c: 310: TRISC = 0b00000111;
   938  001040  0E07               	movlw	7
   939  001042  6E94               	movwf	3988,c	;volatile
   940                           
   941                           ; BSR set to: 1
   942                           ;Test2.c: 312: PORTAbits.RA0 = 0;
   943  001044  9080               	bcf	3968,0,c	;volatile
   944                           
   945                           ; BSR set to: 1
   946                           ;Test2.c: 313: PORTAbits.RA1 = 0;
   947  001046  9280               	bcf	3968,1,c	;volatile
   948                           
   949                           ; BSR set to: 1
   950                           ;Test2.c: 314: PORTAbits.RA2 = 0;
   951  001048  9480               	bcf	3968,2,c	;volatile
   952                           
   953                           ; BSR set to: 1
   954                           ;Test2.c: 315: PORTAbits.RA3 = 0;
   955  00104A  9680               	bcf	3968,3,c	;volatile
   956                           
   957                           ; BSR set to: 1
   958                           ;Test2.c: 317: lcd_init();
   959  00104C  ECCF  F00E         	call	_lcd_init	;wreg free
   960                           
   961                           ;Test2.c: 318: int setup[6];
   962                           ;Test2.c: 322: SetupTime(setup);
   963  001050  0EBD               	movlw	low main@setup
   964  001052  0100               	movlb	0	; () banked
   965  001054  6F73               	movwf	SetupTime@setuptime& (0+255),b
   966  001056  0E01               	movlw	high main@setup
   967  001058  0100               	movlb	0	; () banked
   968  00105A  6F74               	movwf	(SetupTime@setuptime+1)& (0+255),b
   969  00105C  EC84  F00A         	call	_SetupTime	;wreg free
   970                           
   971                           ;Test2.c: 324: ctemp = '0';
   972  001060  0E30               	movlw	48
   973  001062  0101               	movlb	1	; () banked
   974  001064  6FCA               	movwf	main@ctemp& (0+255),b
   975                           
   976                           ;Test2.c: 325: while(ctemp != 'A'){
   977  001066  D06C               	goto	l2718
   978  001068                     l2666:
   979                           
   980                           ; BSR set to: 1
   981                           ;Test2.c: 326: SetupAlarmTime();
   982  001068  EC0F  F00F         	call	_SetupAlarmTime	;wreg free
   983                           
   984                           ;Test2.c: 327: switch(ComOpt){
   985  00106C  D009               	goto	l2676
   986  00106E                     l2668:
   987  00106E  EC5F  F00B         	call	_CompartFtime	;wreg free
   988  001072  D011               	goto	l2678
   989  001074                     l2670:
   990  001074  ECF4  F00B         	call	_CompartEtime	;wreg free
   991  001078  D00E               	goto	l2678
   992  00107A                     l2672:
   993  00107A  EC89  F00C         	call	_CompartDtime	;wreg free
   994                           
   995                           ;Test2.c: 334: }
   996  00107E  D00B               	goto	l2678
   997  001080                     l2676:
   998  001080  0100               	movlb	0	; () banked
   999  001082  51B2               	movf	_ComOpt& (0+255),w,b
  1000                           
  1001                           ; Switch size 1, requested type "space"
  1002                           ; Number of cases is 3, Range of values is 68 to 70
  1003                           ; switch strategies available:
  1004                           ; Name         Instructions Cycles
  1005                           ; simple_byte           10     6 (average)
  1006                           ;	Chosen strategy is simple_byte
  1007  001084  0A44               	xorlw	68	; case 68
  1008  001086  B4D8               	btfsc	status,2,c
  1009  001088  D7F8               	goto	l2672
  1010  00108A  0A01               	xorlw	1	; case 69
  1011  00108C  B4D8               	btfsc	status,2,c
  1012  00108E  D7F2               	goto	l2670
  1013  001090  0A03               	xorlw	3	; case 70
  1014  001092  B4D8               	btfsc	status,2,c
  1015  001094  D7EC               	goto	l2668
  1016  001096                     l2678:
  1017                           
  1018                           ;Test2.c: 338: char Message[ ] = "Start timer? Press A";
  1019  001096  EE21  F069         	lfsr	2,main@F4550
  1020  00109A  EE11  F093         	lfsr	1,main@Message
  1021  00109E  0E14               	movlw	20
  1022  0010A0                     u1831:
  1023  0010A0  CFDB FFE3          	movff	plusw2,plusw1
  1024  0010A4  06E8               	decf	wreg,f,c
  1025  0010A6  E2FC               	bc	u1831
  1026                           
  1027                           ;Test2.c: 340: lcd_write_cmd(0x80);
  1028  0010A8  0E80               	movlw	128
  1029  0010AA  EC4B  F00E         	call	_lcd_write_cmd
  1030                           
  1031                           ;Test2.c: 341: for (msgindex = 0; msgindex < 20; msgindex++)
  1032  0010AE  0E00               	movlw	0
  1033  0010B0  0101               	movlb	1	; () banked
  1034  0010B2  6FCC               	movwf	main@msgindex& (0+255),b
  1035  0010B4                     l2684:
  1036                           
  1037                           ; BSR set to: 1
  1038  0010B4  0E13               	movlw	19
  1039  0010B6  0101               	movlb	1	; () banked
  1040  0010B8  65CC               	cpfsgt	main@msgindex& (0+255),b
  1041  0010BA  D001               	goto	l2688
  1042  0010BC  D013               	goto	l2696
  1043  0010BE                     l2688:
  1044                           
  1045                           ; BSR set to: 1
  1046                           ;Test2.c: 342: {
  1047                           ;Test2.c: 343: outchar = Message[msgindex];
  1048  0010BE  0101               	movlb	1	; () banked
  1049  0010C0  51CC               	movf	main@msgindex& (0+255),w,b
  1050  0010C2  0D01               	mullw	1
  1051  0010C4  0E93               	movlw	low main@Message
  1052  0010C6  24F3               	addwf	prodl,w,c
  1053  0010C8  6ED9               	movwf	fsr2l,c
  1054  0010CA  0E01               	movlw	high main@Message
  1055  0010CC  20F4               	addwfc	prodh,w,c
  1056  0010CE  6EDA               	movwf	fsr2h,c
  1057  0010D0  50DF               	movf	indf2,w,c
  1058  0010D2  0101               	movlb	1	; () banked
  1059  0010D4  6FCB               	movwf	main@outchar& (0+255),b
  1060                           
  1061                           ; BSR set to: 1
  1062                           ;Test2.c: 344: lcd_write_data(outchar);
  1063  0010D6  0101               	movlb	1	; () banked
  1064  0010D8  51CB               	movf	main@outchar& (0+255),w,b
  1065  0010DA  EC1E  F00D         	call	_lcd_write_data
  1066  0010DE  0101               	movlb	1	; () banked
  1067  0010E0  2BCC               	incf	main@msgindex& (0+255),f,b
  1068  0010E2  D7E8               	goto	l2684
  1069  0010E4                     l2696:
  1070                           
  1071                           ; BSR set to: 1
  1072                           ;Test2.c: 345: }
  1073                           ;Test2.c: 347: char Message1[ ] = "Add timer? Press any";
  1074  0010E4  EE21  F07E         	lfsr	2,main@F4552
  1075  0010E8  EE11  F0A8         	lfsr	1,main@Message1
  1076  0010EC  0E14               	movlw	20
  1077  0010EE                     u1861:
  1078  0010EE  CFDB FFE3          	movff	plusw2,plusw1
  1079  0010F2  06E8               	decf	wreg,f,c
  1080  0010F4  E2FC               	bc	u1861
  1081                           
  1082                           ; BSR set to: 1
  1083                           ;Test2.c: 348: lcd_write_cmd(0xC0);
  1084  0010F6  0EC0               	movlw	192
  1085  0010F8  EC4B  F00E         	call	_lcd_write_cmd
  1086                           
  1087                           ;Test2.c: 349: for (msgindex = 0; msgindex < 20; msgindex++)
  1088  0010FC  0E00               	movlw	0
  1089  0010FE  0101               	movlb	1	; () banked
  1090  001100  6FCC               	movwf	main@msgindex& (0+255),b
  1091  001102                     l2702:
  1092                           
  1093                           ; BSR set to: 1
  1094  001102  0E13               	movlw	19
  1095  001104  0101               	movlb	1	; () banked
  1096  001106  65CC               	cpfsgt	main@msgindex& (0+255),b
  1097  001108  D001               	goto	l2706
  1098  00110A  D013               	goto	l2714
  1099  00110C                     l2706:
  1100                           
  1101                           ; BSR set to: 1
  1102                           ;Test2.c: 350: {
  1103                           ;Test2.c: 351: outchar = Message1[msgindex];
  1104  00110C  0101               	movlb	1	; () banked
  1105  00110E  51CC               	movf	main@msgindex& (0+255),w,b
  1106  001110  0D01               	mullw	1
  1107  001112  0EA8               	movlw	low main@Message1
  1108  001114  24F3               	addwf	prodl,w,c
  1109  001116  6ED9               	movwf	fsr2l,c
  1110  001118  0E01               	movlw	high main@Message1
  1111  00111A  20F4               	addwfc	prodh,w,c
  1112  00111C  6EDA               	movwf	fsr2h,c
  1113  00111E  50DF               	movf	indf2,w,c
  1114  001120  0101               	movlb	1	; () banked
  1115  001122  6FCB               	movwf	main@outchar& (0+255),b
  1116                           
  1117                           ; BSR set to: 1
  1118                           ;Test2.c: 352: lcd_write_data(outchar);
  1119  001124  0101               	movlb	1	; () banked
  1120  001126  51CB               	movf	main@outchar& (0+255),w,b
  1121  001128  EC1E  F00D         	call	_lcd_write_data
  1122  00112C  0101               	movlb	1	; () banked
  1123  00112E  2BCC               	incf	main@msgindex& (0+255),f,b
  1124  001130  D7E8               	goto	l2702
  1125  001132                     l2714:
  1126                           
  1127                           ; BSR set to: 1
  1128                           ;Test2.c: 353: }
  1129                           ;Test2.c: 355: ctemp=getkey();
  1130  001132  EC21  F010         	call	_getkey	;wreg free
  1131  001136  0101               	movlb	1	; () banked
  1132  001138  6FCA               	movwf	main@ctemp& (0+255),b
  1133                           
  1134                           ; BSR set to: 1
  1135                           ;Test2.c: 356: lcd_write_cmd(0x01);
  1136  00113A  0E01               	movlw	1
  1137  00113C  EC4B  F00E         	call	_lcd_write_cmd
  1138  001140                     l2718:
  1139  001140  0E41               	movlw	65
  1140  001142  0101               	movlb	1	; () banked
  1141  001144  19CA               	xorwf	main@ctemp& (0+255),w,b
  1142  001146  A4D8               	btfss	status,2,c
  1143  001148  D78F               	goto	l2666
  1144                           
  1145                           ; BSR set to: 1
  1146                           ;Test2.c: 358: }
  1147                           ;Test2.c: 361: T0CON = 0b10000111;
  1148                           
  1149                           ; BSR set to: 1
  1150  00114A  0E87               	movlw	135
  1151  00114C  6ED5               	movwf	4053,c	;volatile
  1152                           
  1153                           ; BSR set to: 1
  1154                           ;Test2.c: 362: INTCONbits.GIE = 1;
  1155  00114E  8EF2               	bsf	intcon,7,c	;volatile
  1156                           
  1157                           ; BSR set to: 1
  1158                           ;Test2.c: 363: INTCONbits.TMR0IE = 1;
  1159  001150  8AF2               	bsf	intcon,5,c	;volatile
  1160                           
  1161                           ;Test2.c: 366: TMR0H = 0x6D;
  1162  001152  0E6D               	movlw	109
  1163  001154  6ED7               	movwf	4055,c	;volatile
  1164                           
  1165                           ;Test2.c: 367: TMR0L = 0x84;
  1166  001156  0E84               	movlw	132
  1167  001158  6ED6               	movwf	4054,c	;volatile
  1168  00115A                     l2726:
  1169                           
  1170                           ;Test2.c: 372: {
  1171                           ;Test2.c: 374: if(((hour == hourF && minute >= minuteF) || (hour > hourF)) && snooze_F =
      +                          = 0){
  1172  00115A  0100               	movlb	0	; () banked
  1173  00115C  51A4               	movf	_hourF& (0+255),w,b
  1174  00115E  1838               	xorwf	_hour,w,c
  1175  001160  E113               	bnz	l2730
  1176  001162  0100               	movlb	0	; () banked
  1177  001164  51A5               	movf	(_hourF+1)& (0+255),w,b
  1178  001166  1839               	xorwf	_hour+1,w,c
  1179  001168  A4D8               	btfss	status,2,c
  1180  00116A  D00E               	goto	l2730
  1181                           
  1182                           ; BSR set to: 0
  1183  00116C  0100               	movlb	0	; () banked
  1184  00116E  51AA               	movf	_minuteF& (0+255),w,b
  1185  001170  5C3C               	subwf	_minute,w,c
  1186  001172  503D               	movf	_minute+1,w,c
  1187  001174  0A80               	xorlw	128
  1188  001176  0100               	movlb	0	; () banked
  1189  001178  6F97               	movwf	??_main& (0+255),b
  1190  00117A  0100               	movlb	0	; () banked
  1191  00117C  51AB               	movf	(_minuteF+1)& (0+255),w,b
  1192  00117E  0A80               	xorlw	128
  1193  001180  0100               	movlb	0	; () banked
  1194  001182  5997               	subwfb	??_main& (0+255),w,b
  1195  001184  B0D8               	btfsc	status,0,c
  1196  001186  D00E               	goto	l2732
  1197  001188                     l2730:
  1198                           
  1199                           ; BSR set to: 0
  1200  001188  5038               	movf	_hour,w,c
  1201  00118A  0100               	movlb	0	; () banked
  1202  00118C  5DA4               	subwf	_hourF& (0+255),w,b
  1203  00118E  0100               	movlb	0	; () banked
  1204  001190  51A5               	movf	(_hourF+1)& (0+255),w,b
  1205  001192  0A80               	xorlw	128
  1206  001194  0100               	movlb	0	; () banked
  1207  001196  6F97               	movwf	??_main& (0+255),b
  1208  001198  5039               	movf	_hour+1,w,c
  1209  00119A  0A80               	xorlw	128
  1210  00119C  0100               	movlb	0	; () banked
  1211  00119E  5997               	subwfb	??_main& (0+255),w,b
  1212  0011A0  B0D8               	btfsc	status,0,c
  1213  0011A2  D019               	goto	l2738
  1214  0011A4                     l2732:
  1215                           
  1216                           ; BSR set to: 0
  1217  0011A4  0100               	movlb	0	; () banked
  1218  0011A6  51B0               	movf	_snooze_F& (0+255),w,b
  1219  0011A8  0100               	movlb	0	; () banked
  1220  0011AA  11B1               	iorwf	(_snooze_F+1)& (0+255),w,b
  1221  0011AC  A4D8               	btfss	status,2,c
  1222  0011AE  D013               	goto	l2738
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;Test2.c: 375: PORTAbits.RA3 = ~PORTAbits.RA3;
  1226  0011B0  A680               	btfss	3968,3,c	;volatile
  1227  0011B2  D002               	goto	u1940
  1228  0011B4  0E01               	movlw	1
  1229  0011B6  D001               	goto	u1946
  1230  0011B8                     u1940:
  1231  0011B8  0E00               	movlw	0
  1232  0011BA                     u1946:
  1233  0011BA  0AFF               	xorlw	255
  1234  0011BC  0100               	movlb	0	; () banked
  1235  0011BE  6F97               	movwf	??_main& (0+255),b
  1236  0011C0  0100               	movlb	0	; () banked
  1237  0011C2  4797               	rlncf	??_main& (0+255),f,b
  1238  0011C4  4797               	rlncf	??_main& (0+255),f,b
  1239  0011C6  4797               	rlncf	??_main& (0+255),f,b
  1240  0011C8  5080               	movf	3968,w,c	;volatile
  1241  0011CA  0100               	movlb	0	; () banked
  1242  0011CC  1997               	xorwf	??_main& (0+255),w,b
  1243  0011CE  0BF7               	andlw	-9
  1244  0011D0  1997               	xorwf	??_main& (0+255),w,b
  1245  0011D2  6E80               	movwf	3968,c	;volatile
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;Test2.c: 376: PORTAbits.RA0 = 1;
  1249  0011D4  8080               	bsf	3968,0,c	;volatile
  1250  0011D6                     l2738:
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;Test2.c: 378: }
  1254                           ;Test2.c: 379: if(PORTCbits.RC0 == 1){
  1255  0011D6  A082               	btfss	3970,0,c	;volatile
  1256  0011D8  D007               	goto	l2746
  1257                           
  1258                           ; BSR set to: 0
  1259                           ;Test2.c: 380: snooze_F = 1;
  1260  0011DA  0E00               	movlw	0
  1261  0011DC  0100               	movlb	0	; () banked
  1262  0011DE  6FB1               	movwf	(_snooze_F+1)& (0+255),b
  1263  0011E0  0E01               	movlw	1
  1264  0011E2  6FB0               	movwf	_snooze_F& (0+255),b
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;Test2.c: 381: PORTAbits.RA3 = 0;
  1268  0011E4  9680               	bcf	3968,3,c	;volatile
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;Test2.c: 382: PORTAbits.RA0 = 0;
  1272  0011E6  9080               	bcf	3968,0,c	;volatile
  1273  0011E8                     l2746:
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;Test2.c: 383: }
  1277                           ;Test2.c: 385: if(((hour == hourF && minute >= minuteF) || (hour > hourF)) && snooze_E =
      +                          = 0){
  1278  0011E8  0100               	movlb	0	; () banked
  1279  0011EA  51A4               	movf	_hourF& (0+255),w,b
  1280  0011EC  1838               	xorwf	_hour,w,c
  1281  0011EE  E113               	bnz	l2750
  1282  0011F0  0100               	movlb	0	; () banked
  1283  0011F2  51A5               	movf	(_hourF+1)& (0+255),w,b
  1284  0011F4  1839               	xorwf	_hour+1,w,c
  1285  0011F6  A4D8               	btfss	status,2,c
  1286  0011F8  D00E               	goto	l2750
  1287                           
  1288                           ; BSR set to: 0
  1289  0011FA  0100               	movlb	0	; () banked
  1290  0011FC  51AA               	movf	_minuteF& (0+255),w,b
  1291  0011FE  5C3C               	subwf	_minute,w,c
  1292  001200  503D               	movf	_minute+1,w,c
  1293  001202  0A80               	xorlw	128
  1294  001204  0100               	movlb	0	; () banked
  1295  001206  6F97               	movwf	??_main& (0+255),b
  1296  001208  0100               	movlb	0	; () banked
  1297  00120A  51AB               	movf	(_minuteF+1)& (0+255),w,b
  1298  00120C  0A80               	xorlw	128
  1299  00120E  0100               	movlb	0	; () banked
  1300  001210  5997               	subwfb	??_main& (0+255),w,b
  1301  001212  B0D8               	btfsc	status,0,c
  1302  001214  D00E               	goto	l2752
  1303  001216                     l2750:
  1304                           
  1305                           ; BSR set to: 0
  1306  001216  5038               	movf	_hour,w,c
  1307  001218  0100               	movlb	0	; () banked
  1308  00121A  5DA4               	subwf	_hourF& (0+255),w,b
  1309  00121C  0100               	movlb	0	; () banked
  1310  00121E  51A5               	movf	(_hourF+1)& (0+255),w,b
  1311  001220  0A80               	xorlw	128
  1312  001222  0100               	movlb	0	; () banked
  1313  001224  6F97               	movwf	??_main& (0+255),b
  1314  001226  5039               	movf	_hour+1,w,c
  1315  001228  0A80               	xorlw	128
  1316  00122A  0100               	movlb	0	; () banked
  1317  00122C  5997               	subwfb	??_main& (0+255),w,b
  1318  00122E  B0D8               	btfsc	status,0,c
  1319  001230  D019               	goto	l2758
  1320  001232                     l2752:
  1321                           
  1322                           ; BSR set to: 0
  1323  001232  0100               	movlb	0	; () banked
  1324  001234  51AE               	movf	_snooze_E& (0+255),w,b
  1325  001236  0100               	movlb	0	; () banked
  1326  001238  11AF               	iorwf	(_snooze_E+1)& (0+255),w,b
  1327  00123A  A4D8               	btfss	status,2,c
  1328  00123C  D013               	goto	l2758
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;Test2.c: 386: PORTAbits.RA3 = ~PORTAbits.RA3;
  1332  00123E  A680               	btfss	3968,3,c	;volatile
  1333  001240  D002               	goto	u2000
  1334  001242  0E01               	movlw	1
  1335  001244  D001               	goto	u2006
  1336  001246                     u2000:
  1337  001246  0E00               	movlw	0
  1338  001248                     u2006:
  1339  001248  0AFF               	xorlw	255
  1340  00124A  0100               	movlb	0	; () banked
  1341  00124C  6F97               	movwf	??_main& (0+255),b
  1342  00124E  0100               	movlb	0	; () banked
  1343  001250  4797               	rlncf	??_main& (0+255),f,b
  1344  001252  4797               	rlncf	??_main& (0+255),f,b
  1345  001254  4797               	rlncf	??_main& (0+255),f,b
  1346  001256  5080               	movf	3968,w,c	;volatile
  1347  001258  0100               	movlb	0	; () banked
  1348  00125A  1997               	xorwf	??_main& (0+255),w,b
  1349  00125C  0BF7               	andlw	-9
  1350  00125E  1997               	xorwf	??_main& (0+255),w,b
  1351  001260  6E80               	movwf	3968,c	;volatile
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;Test2.c: 387: PORTAbits.RA1 = 1;
  1355  001262  8280               	bsf	3968,1,c	;volatile
  1356  001264                     l2758:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;Test2.c: 389: }
  1360                           ;Test2.c: 390: if(PORTCbits.RC1 == 1){
  1361  001264  A282               	btfss	3970,1,c	;volatile
  1362  001266  D007               	goto	l2766
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;Test2.c: 391: snooze_E = 1;
  1366  001268  0E00               	movlw	0
  1367  00126A  0100               	movlb	0	; () banked
  1368  00126C  6FAF               	movwf	(_snooze_E+1)& (0+255),b
  1369  00126E  0E01               	movlw	1
  1370  001270  6FAE               	movwf	_snooze_E& (0+255),b
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;Test2.c: 392: PORTAbits.RA3 = 0;
  1374  001272  9680               	bcf	3968,3,c	;volatile
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;Test2.c: 393: PORTAbits.RA1 = 0;
  1378  001274  9280               	bcf	3968,1,c	;volatile
  1379  001276                     l2766:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;Test2.c: 394: }
  1383                           ;Test2.c: 396: if(((hour == hourF && minute >= minuteF) || (hour > hourF)) && snooze_D =
      +                          = 0){
  1384  001276  0100               	movlb	0	; () banked
  1385  001278  51A4               	movf	_hourF& (0+255),w,b
  1386  00127A  1838               	xorwf	_hour,w,c
  1387  00127C  E113               	bnz	l2770
  1388  00127E  0100               	movlb	0	; () banked
  1389  001280  51A5               	movf	(_hourF+1)& (0+255),w,b
  1390  001282  1839               	xorwf	_hour+1,w,c
  1391  001284  A4D8               	btfss	status,2,c
  1392  001286  D00E               	goto	l2770
  1393                           
  1394                           ; BSR set to: 0
  1395  001288  0100               	movlb	0	; () banked
  1396  00128A  51AA               	movf	_minuteF& (0+255),w,b
  1397  00128C  5C3C               	subwf	_minute,w,c
  1398  00128E  503D               	movf	_minute+1,w,c
  1399  001290  0A80               	xorlw	128
  1400  001292  0100               	movlb	0	; () banked
  1401  001294  6F97               	movwf	??_main& (0+255),b
  1402  001296  0100               	movlb	0	; () banked
  1403  001298  51AB               	movf	(_minuteF+1)& (0+255),w,b
  1404  00129A  0A80               	xorlw	128
  1405  00129C  0100               	movlb	0	; () banked
  1406  00129E  5997               	subwfb	??_main& (0+255),w,b
  1407  0012A0  B0D8               	btfsc	status,0,c
  1408  0012A2  D00E               	goto	l2772
  1409  0012A4                     l2770:
  1410                           
  1411                           ; BSR set to: 0
  1412  0012A4  5038               	movf	_hour,w,c
  1413  0012A6  0100               	movlb	0	; () banked
  1414  0012A8  5DA4               	subwf	_hourF& (0+255),w,b
  1415  0012AA  0100               	movlb	0	; () banked
  1416  0012AC  51A5               	movf	(_hourF+1)& (0+255),w,b
  1417  0012AE  0A80               	xorlw	128
  1418  0012B0  0100               	movlb	0	; () banked
  1419  0012B2  6F97               	movwf	??_main& (0+255),b
  1420  0012B4  5039               	movf	_hour+1,w,c
  1421  0012B6  0A80               	xorlw	128
  1422  0012B8  0100               	movlb	0	; () banked
  1423  0012BA  5997               	subwfb	??_main& (0+255),w,b
  1424  0012BC  B0D8               	btfsc	status,0,c
  1425  0012BE  D019               	goto	l2778
  1426  0012C0                     l2772:
  1427                           
  1428                           ; BSR set to: 0
  1429  0012C0  0100               	movlb	0	; () banked
  1430  0012C2  51AC               	movf	_snooze_D& (0+255),w,b
  1431  0012C4  0100               	movlb	0	; () banked
  1432  0012C6  11AD               	iorwf	(_snooze_D+1)& (0+255),w,b
  1433  0012C8  A4D8               	btfss	status,2,c
  1434  0012CA  D013               	goto	l2778
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;Test2.c: 397: PORTAbits.RA3 = ~PORTAbits.RA3;
  1438  0012CC  A680               	btfss	3968,3,c	;volatile
  1439  0012CE  D002               	goto	u2060
  1440  0012D0  0E01               	movlw	1
  1441  0012D2  D001               	goto	u2066
  1442  0012D4                     u2060:
  1443  0012D4  0E00               	movlw	0
  1444  0012D6                     u2066:
  1445  0012D6  0AFF               	xorlw	255
  1446  0012D8  0100               	movlb	0	; () banked
  1447  0012DA  6F97               	movwf	??_main& (0+255),b
  1448  0012DC  0100               	movlb	0	; () banked
  1449  0012DE  4797               	rlncf	??_main& (0+255),f,b
  1450  0012E0  4797               	rlncf	??_main& (0+255),f,b
  1451  0012E2  4797               	rlncf	??_main& (0+255),f,b
  1452  0012E4  5080               	movf	3968,w,c	;volatile
  1453  0012E6  0100               	movlb	0	; () banked
  1454  0012E8  1997               	xorwf	??_main& (0+255),w,b
  1455  0012EA  0BF7               	andlw	-9
  1456  0012EC  1997               	xorwf	??_main& (0+255),w,b
  1457  0012EE  6E80               	movwf	3968,c	;volatile
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;Test2.c: 398: PORTAbits.RA2 = 1;
  1461  0012F0  8480               	bsf	3968,2,c	;volatile
  1462  0012F2                     l2778:
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;Test2.c: 400: }
  1466                           ;Test2.c: 401: if(PORTCbits.RC2 == 1){
  1467  0012F2  A482               	btfss	3970,2,c	;volatile
  1468  0012F4  D732               	goto	l2726
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;Test2.c: 402: snooze_D = 1;
  1472  0012F6  0E00               	movlw	0
  1473  0012F8  0100               	movlb	0	; () banked
  1474  0012FA  6FAD               	movwf	(_snooze_D+1)& (0+255),b
  1475  0012FC  0E01               	movlw	1
  1476  0012FE  6FAC               	movwf	_snooze_D& (0+255),b
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;Test2.c: 403: PORTAbits.RA3 = 0;
  1480  001300  9680               	bcf	3968,3,c	;volatile
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;Test2.c: 404: PORTAbits.RA2 = 0;
  1484  001302  9480               	bcf	3968,2,c	;volatile
  1485                           
  1486                           ; BSR set to: 0
  1487                           
  1488                           ; BSR set to: 0
  1489  001304  D72A               	goto	l2726
  1490  001306                     __end_of_main:
  1491                           	opt stack 0
  1492                           tblptru	equ	0xFF8
  1493                           tblptrh	equ	0xFF7
  1494                           tblptrl	equ	0xFF6
  1495                           tablat	equ	0xFF5
  1496                           prodh	equ	0xFF4
  1497                           prodl	equ	0xFF3
  1498                           intcon	equ	0xFF2
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           postdec1	equ	0xFE5
  1502                           plusw1	equ	0xFE3
  1503                           fsr1l	equ	0xFE1
  1504                           indf2	equ	0xFDF
  1505                           plusw2	equ	0xFDB
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _lcd_init *****************
  1511 ;; Defined at:
  1512 ;;		line 83 in file "lcd_utilities.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  i               2    5[BANK0 ] int 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;		None               void
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0
  1527 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1528 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1529 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1530 ;;Total ram usage:        3 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    5
  1533 ;; This function calls:
  1534 ;;		_lcd_write_cmd
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text1
  1541  001D9E                     __ptext1:
  1542                           	opt stack 0
  1543  001D9E                     _lcd_init:
  1544                           	opt stack 25
  1545                           
  1546                           ;lcd_utilities.c: 85: int i;
  1547                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;incstack = 0
  1551  001D9E  0E00               	movlw	0
  1552  001DA0  6E95               	movwf	3989,c	;volatile
  1553                           
  1554                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1555  001DA2  0E00               	movlw	0
  1556  001DA4  6E83               	movwf	3971,c	;volatile
  1557                           
  1558                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1559  001DA6  9883               	bcf	3971,4,c	;volatile
  1560                           
  1561                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1562  001DA8  9C83               	bcf	3971,6,c	;volatile
  1563                           
  1564                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1565  001DAA  9A83               	bcf	3971,5,c	;volatile
  1566                           
  1567                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1568  001DAC  0E00               	movlw	0
  1569  001DAE  0100               	movlb	0	; () banked
  1570  001DB0  6F66               	movwf	(lcd_init@i+1)& (0+255),b
  1571  001DB2  0E00               	movlw	0
  1572  001DB4  6F65               	movwf	lcd_init@i& (0+255),b
  1573  001DB6                     l2400:
  1574                           
  1575                           ; BSR set to: 0
  1576  001DB6  0100               	movlb	0	; () banked
  1577  001DB8  BF66               	btfsc	(lcd_init@i+1)& (0+255),7,b
  1578  001DBA  D008               	goto	l2404
  1579  001DBC  0100               	movlb	0	; () banked
  1580  001DBE  5166               	movf	(lcd_init@i+1)& (0+255),w,b
  1581  001DC0  E112               	bnz	l2408
  1582  001DC2  0E64               	movlw	100
  1583  001DC4  0100               	movlb	0	; () banked
  1584  001DC6  5D65               	subwf	lcd_init@i& (0+255),w,b
  1585  001DC8  B0D8               	btfsc	status,0,c
  1586  001DCA  D00D               	goto	l2408
  1587  001DCC                     l2404:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1591  001DCC  0E9C               	movlw	156
  1592  001DCE  0100               	movlb	0	; () banked
  1593  001DD0  6F64               	movwf	??_lcd_init& (0+255),b
  1594  001DD2  0ED7               	movlw	215
  1595  001DD4                     u2087:
  1596  001DD4  2EE8               	decfsz	wreg,f,c
  1597  001DD6  D7FE               	goto	u2087
  1598  001DD8  2F64               	decfsz	??_lcd_init& (0+255),f,b
  1599  001DDA  D7FC               	goto	u2087
  1600  001DDC  F000               	nop	
  1601  001DDE  0100               	movlb	0	; () banked
  1602  001DE0  4B65               	infsnz	lcd_init@i& (0+255),f,b
  1603  001DE2  2B66               	incf	(lcd_init@i+1)& (0+255),f,b
  1604  001DE4  D7E8               	goto	l2400
  1605  001DE6                     l2408:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1609  001DE6  0E33               	movlw	51
  1610  001DE8  EC4B  F00E         	call	_lcd_write_cmd
  1611                           
  1612                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1613  001DEC  0E32               	movlw	50
  1614  001DEE  EC4B  F00E         	call	_lcd_write_cmd
  1615                           
  1616                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1617  001DF2  0E28               	movlw	40
  1618  001DF4  EC4B  F00E         	call	_lcd_write_cmd
  1619                           
  1620                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1621  001DF8  0E0E               	movlw	14
  1622  001DFA  EC4B  F00E         	call	_lcd_write_cmd
  1623                           
  1624                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1625  001DFE  0E06               	movlw	6
  1626  001E00  EC4B  F00E         	call	_lcd_write_cmd
  1627                           
  1628                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1629  001E04  0E01               	movlw	1
  1630  001E06  EC4B  F00E         	call	_lcd_write_cmd
  1631                           
  1632                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1633  001E0A  0E9C               	movlw	156
  1634  001E0C  0100               	movlb	0	; () banked
  1635  001E0E  6F64               	movwf	??_lcd_init& (0+255),b
  1636  001E10  0ED7               	movlw	215
  1637  001E12                     u2097:
  1638  001E12  2EE8               	decfsz	wreg,f,c
  1639  001E14  D7FE               	goto	u2097
  1640  001E16  2F64               	decfsz	??_lcd_init& (0+255),f,b
  1641  001E18  D7FC               	goto	u2097
  1642  001E1A  F000               	nop	
  1643  001E1C  0012               	return		;funcret
  1644  001E1E                     __end_of_lcd_init:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           prodh	equ	0xFF4
  1651                           prodl	equ	0xFF3
  1652                           intcon	equ	0xFF2
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           plusw1	equ	0xFE3
  1657                           fsr1l	equ	0xFE1
  1658                           indf2	equ	0xFDF
  1659                           plusw2	equ	0xFDB
  1660                           fsr2h	equ	0xFDA
  1661                           fsr2l	equ	0xFD9
  1662                           status	equ	0xFD8
  1663                           
  1664 ;; *************** function _SetupTime *****************
  1665 ;; Defined at:
  1666 ;;		line 118 in file "Test2.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  setuptime       2   19[BANK0 ] PTR int 
  1669 ;;		 -> main@setup(12), 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  i               2   46[BANK0 ] int 
  1672 ;;  Message        21   23[BANK0 ] unsigned char [21]
  1673 ;;  second1         2    0        int 
  1674 ;;  second10        2    0        int 
  1675 ;;  minute1         2    0        int 
  1676 ;;  minute10        2    0        int 
  1677 ;;  hour1           2    0        int 
  1678 ;;  hour10          2    0        int 
  1679 ;;  msgindex        1   48[BANK0 ] unsigned char 
  1680 ;;  ctemp           1   45[BANK0 ] unsigned char 
  1681 ;;  outchar         1   44[BANK0 ] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;		None               void
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         0       2       0       0       0       0       0       0       0
  1692 ;;      Locals:         0      26       0       0       0       0       0       0       0
  1693 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1694 ;;      Totals:         0      30       0       0       0       0       0       0       0
  1695 ;;Total ram usage:       30 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    5
  1698 ;; This function calls:
  1699 ;;		___wmul
  1700 ;;		_char_2_int
  1701 ;;		_delay_ms
  1702 ;;		_getkey
  1703 ;;		_lcd_write_cmd
  1704 ;;		_lcd_write_data
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text2
  1711  001508                     __ptext2:
  1712                           	opt stack 0
  1713  001508                     _SetupTime:
  1714                           	opt stack 25
  1715                           
  1716                           ;Test2.c: 121: unsigned char msgindex, outchar, ctemp;
  1717                           ;Test2.c: 122: int hour10, hour1, minute10, minute1, second10, second1;
  1718                           ;Test2.c: 123: char Message[ ] = "Set time hhmmss:    ";
  1719                           
  1720                           ;incstack = 0
  1721  001508  EE20  F023         	lfsr	2,SetupTime@F4496
  1722  00150C  EE10  F077         	lfsr	1,SetupTime@Message
  1723  001510  0E14               	movlw	20
  1724  001512                     u1541:
  1725  001512  CFDB FFE3          	movff	plusw2,plusw1
  1726  001516  06E8               	decf	wreg,f,c
  1727  001518  E2FC               	bc	u1541
  1728                           
  1729                           ;Test2.c: 125: lcd_write_cmd(0x80);
  1730  00151A  0E80               	movlw	128
  1731  00151C  EC4B  F00E         	call	_lcd_write_cmd
  1732                           
  1733                           ;Test2.c: 127: for (msgindex = 0; msgindex < 20; msgindex++)
  1734  001520  0E00               	movlw	0
  1735  001522  0100               	movlb	0	; () banked
  1736  001524  6F90               	movwf	SetupTime@msgindex& (0+255),b
  1737  001526                     l2418:
  1738                           
  1739                           ; BSR set to: 0
  1740  001526  0E13               	movlw	19
  1741  001528  0100               	movlb	0	; () banked
  1742  00152A  6590               	cpfsgt	SetupTime@msgindex& (0+255),b
  1743  00152C  D001               	goto	l2422
  1744  00152E  D013               	goto	l2430
  1745  001530                     l2422:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;Test2.c: 128: {
  1749                           ;Test2.c: 129: outchar = Message[msgindex];
  1750  001530  0100               	movlb	0	; () banked
  1751  001532  5190               	movf	SetupTime@msgindex& (0+255),w,b
  1752  001534  0D01               	mullw	1
  1753  001536  0E77               	movlw	low SetupTime@Message
  1754  001538  24F3               	addwf	prodl,w,c
  1755  00153A  6ED9               	movwf	fsr2l,c
  1756  00153C  0E00               	movlw	high SetupTime@Message
  1757  00153E  20F4               	addwfc	prodh,w,c
  1758  001540  6EDA               	movwf	fsr2h,c
  1759  001542  50DF               	movf	indf2,w,c
  1760  001544  0100               	movlb	0	; () banked
  1761  001546  6F8C               	movwf	SetupTime@outchar& (0+255),b
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;Test2.c: 130: lcd_write_data(outchar);
  1765  001548  0100               	movlb	0	; () banked
  1766  00154A  518C               	movf	SetupTime@outchar& (0+255),w,b
  1767  00154C  EC1E  F00D         	call	_lcd_write_data
  1768  001550  0100               	movlb	0	; () banked
  1769  001552  2B90               	incf	SetupTime@msgindex& (0+255),f,b
  1770  001554  D7E8               	goto	l2418
  1771  001556                     l2430:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;Test2.c: 131: }
  1775                           ;Test2.c: 133: lcd_write_cmd(0xC0);
  1776  001556  0EC0               	movlw	192
  1777  001558  EC4B  F00E         	call	_lcd_write_cmd
  1778                           
  1779                           ;Test2.c: 135: for(int i = 0; i <6 ;i++){
  1780  00155C  0E00               	movlw	0
  1781  00155E  0100               	movlb	0	; () banked
  1782  001560  6F8F               	movwf	(SetupTime@i+1)& (0+255),b
  1783  001562  0E00               	movlw	0
  1784  001564  6F8E               	movwf	SetupTime@i& (0+255),b
  1785  001566                     l2434:
  1786                           
  1787                           ; BSR set to: 0
  1788  001566  0100               	movlb	0	; () banked
  1789  001568  BF8F               	btfsc	(SetupTime@i+1)& (0+255),7,b
  1790  00156A  D008               	goto	l2438
  1791  00156C  0100               	movlb	0	; () banked
  1792  00156E  518F               	movf	(SetupTime@i+1)& (0+255),w,b
  1793  001570  E129               	bnz	l2448
  1794  001572  0E06               	movlw	6
  1795  001574  0100               	movlb	0	; () banked
  1796  001576  5D8E               	subwf	SetupTime@i& (0+255),w,b
  1797  001578  B0D8               	btfsc	status,0,c
  1798  00157A  D024               	goto	l2448
  1799  00157C                     l2438:
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;Test2.c: 137: ctemp=getkey();
  1803  00157C  EC21  F010         	call	_getkey	;wreg free
  1804  001580  0100               	movlb	0	; () banked
  1805  001582  6F8D               	movwf	SetupTime@ctemp& (0+255),b
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;Test2.c: 138: lcd_write_data(ctemp);
  1809  001584  0100               	movlb	0	; () banked
  1810  001586  518D               	movf	SetupTime@ctemp& (0+255),w,b
  1811  001588  EC1E  F00D         	call	_lcd_write_data
  1812                           
  1813                           ;Test2.c: 139: setuptime[i] = char_2_int (ctemp);
  1814  00158C  0100               	movlb	0	; () banked
  1815  00158E  518D               	movf	SetupTime@ctemp& (0+255),w,b
  1816  001590  EC4E  F00F         	call	_char_2_int
  1817  001594  0100               	movlb	0	; () banked
  1818  001596  6F75               	movwf	??_SetupTime& (0+255),b
  1819  001598  6B76               	clrf	(??_SetupTime+1)& (0+255),b
  1820  00159A  90D8               	bcf	status,0,c
  1821  00159C  0100               	movlb	0	; () banked
  1822  00159E  358E               	rlcf	SetupTime@i& (0+255),w,b
  1823  0015A0  6ED9               	movwf	fsr2l,c
  1824  0015A2  0100               	movlb	0	; () banked
  1825  0015A4  358F               	rlcf	(SetupTime@i+1)& (0+255),w,b
  1826  0015A6  6EDA               	movwf	fsr2h,c
  1827  0015A8  0100               	movlb	0	; () banked
  1828  0015AA  5173               	movf	SetupTime@setuptime& (0+255),w,b
  1829  0015AC  26D9               	addwf	fsr2l,f,c
  1830  0015AE  0100               	movlb	0	; () banked
  1831  0015B0  5174               	movf	(SetupTime@setuptime+1)& (0+255),w,b
  1832  0015B2  22DA               	addwfc	fsr2h,f,c
  1833  0015B4  C075  FFDE         	movff	??_SetupTime,postinc2
  1834  0015B8  C076  FFDD         	movff	??_SetupTime+1,postdec2
  1835                           
  1836                           ; BSR set to: 0
  1837  0015BC  0100               	movlb	0	; () banked
  1838  0015BE  4B8E               	infsnz	SetupTime@i& (0+255),f,b
  1839  0015C0  2B8F               	incf	(SetupTime@i+1)& (0+255),f,b
  1840  0015C2  D7D1               	goto	l2434
  1841  0015C4                     l2448:
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;Test2.c: 141: }
  1845                           ;Test2.c: 143: hour = setuptime[0] * 10 + setuptime[1];
  1846  0015C4  0100               	movlb	0	; () banked
  1847  0015C6  EE20 F002          	lfsr	2,2
  1848  0015CA  5173               	movf	SetupTime@setuptime& (0+255),w,b
  1849  0015CC  26D9               	addwf	fsr2l,f,c
  1850  0015CE  5174               	movf	(SetupTime@setuptime+1)& (0+255),w,b
  1851  0015D0  22DA               	addwfc	fsr2h,f,c
  1852  0015D2  CFDE F075          	movff	postinc2,??_SetupTime
  1853  0015D6  CFDD F076          	movff	postdec2,??_SetupTime+1
  1854  0015DA  C073  FFD9         	movff	SetupTime@setuptime,fsr2l
  1855  0015DE  C074  FFDA         	movff	SetupTime@setuptime+1,fsr2h
  1856  0015E2  CFDE F060          	movff	postinc2,___wmul@multiplier
  1857  0015E6  CFDD F061          	movff	postdec2,___wmul@multiplier+1
  1858  0015EA  0E00               	movlw	0
  1859  0015EC  0100               	movlb	0	; () banked
  1860  0015EE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1861  0015F0  0E0A               	movlw	10
  1862  0015F2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1863  0015F4  EC40  F010         	call	___wmul	;wreg free
  1864  0015F8  0100               	movlb	0	; () banked
  1865  0015FA  5175               	movf	??_SetupTime& (0+255),w,b
  1866  0015FC  0100               	movlb	0	; () banked
  1867  0015FE  2560               	addwf	?___wmul& (0+255),w,b
  1868  001600  6E38               	movwf	_hour,c
  1869  001602  0100               	movlb	0	; () banked
  1870  001604  5176               	movf	(??_SetupTime+1)& (0+255),w,b
  1871  001606  0100               	movlb	0	; () banked
  1872  001608  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1873  00160A  6E39               	movwf	_hour+1,c
  1874                           
  1875                           ;Test2.c: 144: minute = setuptime[2] * 10 + setuptime[3];
  1876  00160C  0100               	movlb	0	; () banked
  1877  00160E  EE20 F006          	lfsr	2,6
  1878  001612  5173               	movf	SetupTime@setuptime& (0+255),w,b
  1879  001614  26D9               	addwf	fsr2l,f,c
  1880  001616  5174               	movf	(SetupTime@setuptime+1)& (0+255),w,b
  1881  001618  22DA               	addwfc	fsr2h,f,c
  1882  00161A  CFDE F075          	movff	postinc2,??_SetupTime
  1883  00161E  CFDD F076          	movff	postdec2,??_SetupTime+1
  1884  001622  0100               	movlb	0	; () banked
  1885  001624  EE20 F004          	lfsr	2,4
  1886  001628  5173               	movf	SetupTime@setuptime& (0+255),w,b
  1887  00162A  26D9               	addwf	fsr2l,f,c
  1888  00162C  5174               	movf	(SetupTime@setuptime+1)& (0+255),w,b
  1889  00162E  22DA               	addwfc	fsr2h,f,c
  1890  001630  CFDE F060          	movff	postinc2,___wmul@multiplier
  1891  001634  CFDD F061          	movff	postdec2,___wmul@multiplier+1
  1892  001638  0E00               	movlw	0
  1893  00163A  0100               	movlb	0	; () banked
  1894  00163C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1895  00163E  0E0A               	movlw	10
  1896  001640  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1897  001642  EC40  F010         	call	___wmul	;wreg free
  1898  001646  0100               	movlb	0	; () banked
  1899  001648  5175               	movf	??_SetupTime& (0+255),w,b
  1900  00164A  0100               	movlb	0	; () banked
  1901  00164C  2560               	addwf	?___wmul& (0+255),w,b
  1902  00164E  6E3C               	movwf	_minute,c
  1903  001650  0100               	movlb	0	; () banked
  1904  001652  5176               	movf	(??_SetupTime+1)& (0+255),w,b
  1905  001654  0100               	movlb	0	; () banked
  1906  001656  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1907  001658  6E3D               	movwf	_minute+1,c
  1908                           
  1909                           ;Test2.c: 145: second = setuptime[4] * 10 + setuptime[5];
  1910  00165A  0100               	movlb	0	; () banked
  1911  00165C  EE20 F00A          	lfsr	2,10
  1912  001660  5173               	movf	SetupTime@setuptime& (0+255),w,b
  1913  001662  26D9               	addwf	fsr2l,f,c
  1914  001664  5174               	movf	(SetupTime@setuptime+1)& (0+255),w,b
  1915  001666  22DA               	addwfc	fsr2h,f,c
  1916  001668  CFDE F075          	movff	postinc2,??_SetupTime
  1917  00166C  CFDD F076          	movff	postdec2,??_SetupTime+1
  1918  001670  0100               	movlb	0	; () banked
  1919  001672  EE20 F008          	lfsr	2,8
  1920  001676  5173               	movf	SetupTime@setuptime& (0+255),w,b
  1921  001678  26D9               	addwf	fsr2l,f,c
  1922  00167A  5174               	movf	(SetupTime@setuptime+1)& (0+255),w,b
  1923  00167C  22DA               	addwfc	fsr2h,f,c
  1924  00167E  CFDE F060          	movff	postinc2,___wmul@multiplier
  1925  001682  CFDD F061          	movff	postdec2,___wmul@multiplier+1
  1926  001686  0E00               	movlw	0
  1927  001688  0100               	movlb	0	; () banked
  1928  00168A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1929  00168C  0E0A               	movlw	10
  1930  00168E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1931  001690  EC40  F010         	call	___wmul	;wreg free
  1932  001694  0100               	movlb	0	; () banked
  1933  001696  5175               	movf	??_SetupTime& (0+255),w,b
  1934  001698  0100               	movlb	0	; () banked
  1935  00169A  2560               	addwf	?___wmul& (0+255),w,b
  1936  00169C  6E40               	movwf	_second,c
  1937  00169E  0100               	movlb	0	; () banked
  1938  0016A0  5176               	movf	(??_SetupTime+1)& (0+255),w,b
  1939  0016A2  0100               	movlb	0	; () banked
  1940  0016A4  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1941  0016A6  6E41               	movwf	_second+1,c
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;Test2.c: 147: delay_ms(500);
  1945  0016A8  0E01               	movlw	1
  1946  0016AA  0100               	movlb	0	; () banked
  1947  0016AC  6F61               	movwf	(delay_ms@i+1)& (0+255),b
  1948  0016AE  0EF4               	movlw	244
  1949  0016B0  6F60               	movwf	delay_ms@i& (0+255),b
  1950  0016B2  ECFE  F00F         	call	_delay_ms	;wreg free
  1951                           
  1952                           ;Test2.c: 148: lcd_write_cmd(0x01);
  1953  0016B6  0E01               	movlw	1
  1954  0016B8  EC4B  F00E         	call	_lcd_write_cmd
  1955  0016BC  0012               	return		;funcret
  1956  0016BE                     __end_of_SetupTime:
  1957                           	opt stack 0
  1958                           tblptru	equ	0xFF8
  1959                           tblptrh	equ	0xFF7
  1960                           tblptrl	equ	0xFF6
  1961                           tablat	equ	0xFF5
  1962                           prodh	equ	0xFF4
  1963                           prodl	equ	0xFF3
  1964                           intcon	equ	0xFF2
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           postdec1	equ	0xFE5
  1968                           plusw1	equ	0xFE3
  1969                           fsr1l	equ	0xFE1
  1970                           indf2	equ	0xFDF
  1971                           postinc2	equ	0xFDE
  1972                           postdec2	equ	0xFDD
  1973                           plusw2	equ	0xFDB
  1974                           fsr2h	equ	0xFDA
  1975                           fsr2l	equ	0xFD9
  1976                           status	equ	0xFD8
  1977                           
  1978 ;; *************** function _SetupAlarmTime *****************
  1979 ;; Defined at:
  1980 ;;		line 151 in file "Test2.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  Message        21   19[BANK0 ] unsigned char [21]
  1985 ;;  msgindex        1   42[BANK0 ] unsigned char 
  1986 ;;  ctemp           1   41[BANK0 ] unsigned char 
  1987 ;;  outchar         1   40[BANK0 ] unsigned char 
  1988 ;;  minute1         1    0        unsigned char 
  1989 ;;  minute10        1    0        unsigned char 
  1990 ;;  hour1           1    0        unsigned char 
  1991 ;;  hour10          1    0        unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;		None               void
  1994 ;; Registers used:
  1995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0
  2002 ;;      Locals:         0      24       0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2004 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2005 ;;Total ram usage:       24 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    5
  2008 ;; This function calls:
  2009 ;;		_delay_ms
  2010 ;;		_getkey
  2011 ;;		_lcd_write_cmd
  2012 ;;		_lcd_write_data
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text3
  2019  001E1E                     __ptext3:
  2020                           	opt stack 0
  2021  001E1E                     _SetupAlarmTime:
  2022                           	opt stack 25
  2023                           
  2024                           ;Test2.c: 153: unsigned char msgindex, outchar, ctemp;
  2025                           ;Test2.c: 154: unsigned char hour10, hour1, minute10, minute1;
  2026                           ;Test2.c: 155: char Message[ ] = "Choose Com F,E or D:";
  2027                           
  2028                           ;incstack = 0
  2029  001E1E  EE20  F0B3         	lfsr	2,SetupAlarmTime@F4507
  2030  001E22  EE10  F073         	lfsr	1,SetupAlarmTime@Message
  2031  001E26  0E14               	movlw	20
  2032  001E28                     u1591:
  2033  001E28  CFDB FFE3          	movff	plusw2,plusw1
  2034  001E2C  06E8               	decf	wreg,f,c
  2035  001E2E  E2FC               	bc	u1591
  2036                           
  2037                           ;Test2.c: 158: lcd_write_cmd(0x80);
  2038  001E30  0E80               	movlw	128
  2039  001E32  EC4B  F00E         	call	_lcd_write_cmd
  2040                           
  2041                           ;Test2.c: 160: for (msgindex = 0; msgindex < 20; msgindex++)
  2042  001E36  0E00               	movlw	0
  2043  001E38  0100               	movlb	0	; () banked
  2044  001E3A  6F8A               	movwf	SetupAlarmTime@msgindex& (0+255),b
  2045  001E3C                     l2460:
  2046                           
  2047                           ; BSR set to: 0
  2048  001E3C  0E13               	movlw	19
  2049  001E3E  0100               	movlb	0	; () banked
  2050  001E40  658A               	cpfsgt	SetupAlarmTime@msgindex& (0+255),b
  2051  001E42  D001               	goto	l2464
  2052  001E44  D013               	goto	l2472
  2053  001E46                     l2464:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;Test2.c: 161: {
  2057                           ;Test2.c: 162: outchar = Message[msgindex];
  2058  001E46  0100               	movlb	0	; () banked
  2059  001E48  518A               	movf	SetupAlarmTime@msgindex& (0+255),w,b
  2060  001E4A  0D01               	mullw	1
  2061  001E4C  0E73               	movlw	low SetupAlarmTime@Message
  2062  001E4E  24F3               	addwf	prodl,w,c
  2063  001E50  6ED9               	movwf	fsr2l,c
  2064  001E52  0E00               	movlw	high SetupAlarmTime@Message
  2065  001E54  20F4               	addwfc	prodh,w,c
  2066  001E56  6EDA               	movwf	fsr2h,c
  2067  001E58  50DF               	movf	indf2,w,c
  2068  001E5A  0100               	movlb	0	; () banked
  2069  001E5C  6F88               	movwf	SetupAlarmTime@outchar& (0+255),b
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;Test2.c: 163: lcd_write_data(outchar);
  2073  001E5E  0100               	movlb	0	; () banked
  2074  001E60  5188               	movf	SetupAlarmTime@outchar& (0+255),w,b
  2075  001E62  EC1E  F00D         	call	_lcd_write_data
  2076  001E66  0100               	movlb	0	; () banked
  2077  001E68  2B8A               	incf	SetupAlarmTime@msgindex& (0+255),f,b
  2078  001E6A  D7E8               	goto	l2460
  2079  001E6C                     l2472:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;Test2.c: 164: }
  2083                           ;Test2.c: 166: lcd_write_cmd(0xC0);
  2084  001E6C  0EC0               	movlw	192
  2085  001E6E  EC4B  F00E         	call	_lcd_write_cmd
  2086                           
  2087                           ;Test2.c: 170: ctemp=getkey();
  2088  001E72  EC21  F010         	call	_getkey	;wreg free
  2089  001E76  0100               	movlb	0	; () banked
  2090  001E78  6F89               	movwf	SetupAlarmTime@ctemp& (0+255),b
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;Test2.c: 171: lcd_write_data(ctemp);
  2094  001E7A  0100               	movlb	0	; () banked
  2095  001E7C  5189               	movf	SetupAlarmTime@ctemp& (0+255),w,b
  2096  001E7E  EC1E  F00D         	call	_lcd_write_data
  2097                           
  2098                           ;Test2.c: 172: ComOpt = ctemp;
  2099  001E82  C089  F0B2         	movff	SetupAlarmTime@ctemp,_ComOpt
  2100                           
  2101                           ;Test2.c: 175: delay_ms(500);
  2102  001E86  0E01               	movlw	1
  2103  001E88  0100               	movlb	0	; () banked
  2104  001E8A  6F61               	movwf	(delay_ms@i+1)& (0+255),b
  2105  001E8C  0EF4               	movlw	244
  2106  001E8E  6F60               	movwf	delay_ms@i& (0+255),b
  2107  001E90  ECFE  F00F         	call	_delay_ms	;wreg free
  2108                           
  2109                           ;Test2.c: 176: lcd_write_cmd(0x01);
  2110  001E94  0E01               	movlw	1
  2111  001E96  EC4B  F00E         	call	_lcd_write_cmd
  2112  001E9A  0012               	return		;funcret
  2113  001E9C                     __end_of_SetupAlarmTime:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           prodh	equ	0xFF4
  2120                           prodl	equ	0xFF3
  2121                           intcon	equ	0xFF2
  2122                           postinc0	equ	0xFEE
  2123                           wreg	equ	0xFE8
  2124                           postdec1	equ	0xFE5
  2125                           plusw1	equ	0xFE3
  2126                           fsr1l	equ	0xFE1
  2127                           indf2	equ	0xFDF
  2128                           postinc2	equ	0xFDE
  2129                           postdec2	equ	0xFDD
  2130                           plusw2	equ	0xFDB
  2131                           fsr2h	equ	0xFDA
  2132                           fsr2l	equ	0xFD9
  2133                           status	equ	0xFD8
  2134                           
  2135 ;; *************** function _CompartFtime *****************
  2136 ;; Defined at:
  2137 ;;		line 179 in file "Test2.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  i               2   44[BANK0 ] int 
  2142 ;;  Message        21   21[BANK0 ] unsigned char [21]
  2143 ;;  msgindex        1   46[BANK0 ] unsigned char 
  2144 ;;  ctemp           1   43[BANK0 ] unsigned char 
  2145 ;;  outchar         1   42[BANK0 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;		None               void
  2148 ;; Registers used:
  2149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0
  2156 ;;      Locals:         0      26       0       0       0       0       0       0       0
  2157 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2158 ;;      Totals:         0      28       0       0       0       0       0       0       0
  2159 ;;Total ram usage:       28 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    5
  2162 ;; This function calls:
  2163 ;;		___wmul
  2164 ;;		_char_2_int
  2165 ;;		_delay_ms
  2166 ;;		_getkey
  2167 ;;		_lcd_write_cmd
  2168 ;;		_lcd_write_data
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text4
  2175  0016BE                     __ptext4:
  2176                           	opt stack 0
  2177  0016BE                     _CompartFtime:
  2178                           	opt stack 25
  2179                           
  2180                           ;Test2.c: 181: unsigned char msgindex, outchar, ctemp;
  2181                           ;Test2.c: 182: char Message[ ] = "Set Com F time hhmm:";
  2182                           
  2183                           ;incstack = 0
  2184  0016BE  EE21  F02A         	lfsr	2,CompartFtime@F4513
  2185  0016C2  EE10  F075         	lfsr	1,CompartFtime@Message
  2186  0016C6  0E14               	movlw	20
  2187  0016C8                     u1621:
  2188  0016C8  CFDB FFE3          	movff	plusw2,plusw1
  2189  0016CC  06E8               	decf	wreg,f,c
  2190  0016CE  E2FC               	bc	u1621
  2191                           
  2192                           ;Test2.c: 184: lcd_write_cmd(0x80);
  2193  0016D0  0E80               	movlw	128
  2194  0016D2  EC4B  F00E         	call	_lcd_write_cmd
  2195                           
  2196                           ;Test2.c: 186: for (msgindex = 0; msgindex < 20; msgindex++)
  2197  0016D6  0E00               	movlw	0
  2198  0016D8  0100               	movlb	0	; () banked
  2199  0016DA  6F8E               	movwf	CompartFtime@msgindex& (0+255),b
  2200  0016DC                     l2490:
  2201                           
  2202                           ; BSR set to: 0
  2203  0016DC  0E13               	movlw	19
  2204  0016DE  0100               	movlb	0	; () banked
  2205  0016E0  658E               	cpfsgt	CompartFtime@msgindex& (0+255),b
  2206  0016E2  D001               	goto	l2494
  2207  0016E4  D013               	goto	l2502
  2208  0016E6                     l2494:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;Test2.c: 187: {
  2212                           ;Test2.c: 188: outchar = Message[msgindex];
  2213  0016E6  0100               	movlb	0	; () banked
  2214  0016E8  518E               	movf	CompartFtime@msgindex& (0+255),w,b
  2215  0016EA  0D01               	mullw	1
  2216  0016EC  0E75               	movlw	low CompartFtime@Message
  2217  0016EE  24F3               	addwf	prodl,w,c
  2218  0016F0  6ED9               	movwf	fsr2l,c
  2219  0016F2  0E00               	movlw	high CompartFtime@Message
  2220  0016F4  20F4               	addwfc	prodh,w,c
  2221  0016F6  6EDA               	movwf	fsr2h,c
  2222  0016F8  50DF               	movf	indf2,w,c
  2223  0016FA  0100               	movlb	0	; () banked
  2224  0016FC  6F8A               	movwf	CompartFtime@outchar& (0+255),b
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;Test2.c: 189: lcd_write_data(outchar);
  2228  0016FE  0100               	movlb	0	; () banked
  2229  001700  518A               	movf	CompartFtime@outchar& (0+255),w,b
  2230  001702  EC1E  F00D         	call	_lcd_write_data
  2231  001706  0100               	movlb	0	; () banked
  2232  001708  2B8E               	incf	CompartFtime@msgindex& (0+255),f,b
  2233  00170A  D7E8               	goto	l2490
  2234  00170C                     l2502:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;Test2.c: 190: }
  2238                           ;Test2.c: 192: lcd_write_cmd(0xC0);
  2239  00170C  0EC0               	movlw	192
  2240  00170E  EC4B  F00E         	call	_lcd_write_cmd
  2241                           
  2242                           ;Test2.c: 194: for(int i = 0; i <4 ;i++){
  2243  001712  0E00               	movlw	0
  2244  001714  0100               	movlb	0	; () banked
  2245  001716  6F8D               	movwf	(CompartFtime@i+1)& (0+255),b
  2246  001718  0E00               	movlw	0
  2247  00171A  6F8C               	movwf	CompartFtime@i& (0+255),b
  2248  00171C                     l2506:
  2249                           
  2250                           ; BSR set to: 0
  2251  00171C  0100               	movlb	0	; () banked
  2252  00171E  BF8D               	btfsc	(CompartFtime@i+1)& (0+255),7,b
  2253  001720  D008               	goto	l2510
  2254  001722  0100               	movlb	0	; () banked
  2255  001724  518D               	movf	(CompartFtime@i+1)& (0+255),w,b
  2256  001726  E127               	bnz	l2520
  2257  001728  0E04               	movlw	4
  2258  00172A  0100               	movlb	0	; () banked
  2259  00172C  5D8C               	subwf	CompartFtime@i& (0+255),w,b
  2260  00172E  B0D8               	btfsc	status,0,c
  2261  001730  D022               	goto	l2520
  2262  001732                     l2510:
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;Test2.c: 196: ctemp=getkey();
  2266  001732  EC21  F010         	call	_getkey	;wreg free
  2267  001736  0100               	movlb	0	; () banked
  2268  001738  6F8B               	movwf	CompartFtime@ctemp& (0+255),b
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;Test2.c: 197: lcd_write_data(ctemp);
  2272  00173A  0100               	movlb	0	; () banked
  2273  00173C  518B               	movf	CompartFtime@ctemp& (0+255),w,b
  2274  00173E  EC1E  F00D         	call	_lcd_write_data
  2275                           
  2276                           ;Test2.c: 198: fArr[i] = char_2_int (ctemp);
  2277  001742  0100               	movlb	0	; () banked
  2278  001744  518B               	movf	CompartFtime@ctemp& (0+255),w,b
  2279  001746  EC4E  F00F         	call	_char_2_int
  2280  00174A  0100               	movlb	0	; () banked
  2281  00174C  6F73               	movwf	??_CompartFtime& (0+255),b
  2282  00174E  6B74               	clrf	(??_CompartFtime+1)& (0+255),b
  2283  001750  90D8               	bcf	status,0,c
  2284  001752  0100               	movlb	0	; () banked
  2285  001754  358C               	rlcf	CompartFtime@i& (0+255),w,b
  2286  001756  6ED9               	movwf	fsr2l,c
  2287  001758  0100               	movlb	0	; () banked
  2288  00175A  358D               	rlcf	(CompartFtime@i+1)& (0+255),w,b
  2289  00175C  6EDA               	movwf	fsr2h,c
  2290  00175E  0E98               	movlw	low _fArr
  2291  001760  26D9               	addwf	fsr2l,f,c
  2292  001762  0E00               	movlw	high _fArr
  2293  001764  22DA               	addwfc	fsr2h,f,c
  2294  001766  C073  FFDE         	movff	??_CompartFtime,postinc2
  2295  00176A  C074  FFDD         	movff	??_CompartFtime+1,postdec2
  2296                           
  2297                           ; BSR set to: 0
  2298  00176E  0100               	movlb	0	; () banked
  2299  001770  4B8C               	infsnz	CompartFtime@i& (0+255),f,b
  2300  001772  2B8D               	incf	(CompartFtime@i+1)& (0+255),f,b
  2301  001774  D7D3               	goto	l2506
  2302  001776                     l2520:
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;Test2.c: 200: }
  2306                           ;Test2.c: 202: hourF = fArr[0] * 10 + fArr[1];
  2307  001776  C098  F060         	movff	_fArr,___wmul@multiplier
  2308  00177A  C099  F061         	movff	_fArr+1,___wmul@multiplier+1
  2309  00177E  0E00               	movlw	0
  2310  001780  0100               	movlb	0	; () banked
  2311  001782  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2312  001784  0E0A               	movlw	10
  2313  001786  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2314  001788  EC40  F010         	call	___wmul	;wreg free
  2315  00178C  0100               	movlb	0	; () banked
  2316  00178E  519A               	movf	(_fArr+2)& (0+255),w,b
  2317  001790  0100               	movlb	0	; () banked
  2318  001792  2560               	addwf	?___wmul& (0+255),w,b
  2319  001794  0100               	movlb	0	; () banked
  2320  001796  6FA4               	movwf	_hourF& (0+255),b
  2321  001798  0100               	movlb	0	; () banked
  2322  00179A  519B               	movf	(_fArr+3)& (0+255),w,b
  2323  00179C  0100               	movlb	0	; () banked
  2324  00179E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2325  0017A0  0100               	movlb	0	; () banked
  2326  0017A2  6FA5               	movwf	(_hourF+1)& (0+255),b
  2327                           
  2328                           ;Test2.c: 203: minuteF = fArr[2] * 10 + fArr[3];
  2329  0017A4  C09C  F060         	movff	_fArr+4,___wmul@multiplier
  2330  0017A8  C09D  F061         	movff	_fArr+5,___wmul@multiplier+1
  2331  0017AC  0E00               	movlw	0
  2332  0017AE  0100               	movlb	0	; () banked
  2333  0017B0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2334  0017B2  0E0A               	movlw	10
  2335  0017B4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2336  0017B6  EC40  F010         	call	___wmul	;wreg free
  2337  0017BA  0100               	movlb	0	; () banked
  2338  0017BC  519E               	movf	(_fArr+6)& (0+255),w,b
  2339  0017BE  0100               	movlb	0	; () banked
  2340  0017C0  2560               	addwf	?___wmul& (0+255),w,b
  2341  0017C2  0100               	movlb	0	; () banked
  2342  0017C4  6FAA               	movwf	_minuteF& (0+255),b
  2343  0017C6  0100               	movlb	0	; () banked
  2344  0017C8  519F               	movf	(_fArr+7)& (0+255),w,b
  2345  0017CA  0100               	movlb	0	; () banked
  2346  0017CC  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2347  0017CE  0100               	movlb	0	; () banked
  2348  0017D0  6FAB               	movwf	(_minuteF+1)& (0+255),b
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;Test2.c: 205: delay_ms(500);
  2352  0017D2  0E01               	movlw	1
  2353  0017D4  0100               	movlb	0	; () banked
  2354  0017D6  6F61               	movwf	(delay_ms@i+1)& (0+255),b
  2355  0017D8  0EF4               	movlw	244
  2356  0017DA  6F60               	movwf	delay_ms@i& (0+255),b
  2357  0017DC  ECFE  F00F         	call	_delay_ms	;wreg free
  2358                           
  2359                           ;Test2.c: 206: lcd_write_cmd(0x01);
  2360  0017E0  0E01               	movlw	1
  2361  0017E2  EC4B  F00E         	call	_lcd_write_cmd
  2362  0017E6  0012               	return		;funcret
  2363  0017E8                     __end_of_CompartFtime:
  2364                           	opt stack 0
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           intcon	equ	0xFF2
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           postdec1	equ	0xFE5
  2375                           plusw1	equ	0xFE3
  2376                           fsr1l	equ	0xFE1
  2377                           indf2	equ	0xFDF
  2378                           postinc2	equ	0xFDE
  2379                           postdec2	equ	0xFDD
  2380                           plusw2	equ	0xFDB
  2381                           fsr2h	equ	0xFDA
  2382                           fsr2l	equ	0xFD9
  2383                           status	equ	0xFD8
  2384                           
  2385 ;; *************** function _CompartEtime *****************
  2386 ;; Defined at:
  2387 ;;		line 209 in file "Test2.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;		None
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  i               2   52[BANK0 ] int 
  2392 ;;  Message        21   21[BANK0 ] unsigned char [21]
  2393 ;;  eArr            8   42[BANK0 ] int [4]
  2394 ;;  msgindex        1   54[BANK0 ] unsigned char 
  2395 ;;  ctemp           1   51[BANK0 ] unsigned char 
  2396 ;;  outchar         1   50[BANK0 ] unsigned char 
  2397 ;; Return value:  Size  Location     Type
  2398 ;;		None               void
  2399 ;; Registers used:
  2400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0
  2407 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2408 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2409 ;;      Totals:         0      36       0       0       0       0       0       0       0
  2410 ;;Total ram usage:       36 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:    5
  2413 ;; This function calls:
  2414 ;;		___wmul
  2415 ;;		_char_2_int
  2416 ;;		_delay_ms
  2417 ;;		_getkey
  2418 ;;		_lcd_write_cmd
  2419 ;;		_lcd_write_data
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text5
  2426  0017E8                     __ptext5:
  2427                           	opt stack 0
  2428  0017E8                     _CompartEtime:
  2429                           	opt stack 25
  2430                           
  2431                           ;Test2.c: 211: unsigned char msgindex, outchar, ctemp;
  2432                           ;Test2.c: 212: char Message[ ] = "Set Com E time hhmm:";
  2433                           
  2434                           ;incstack = 0
  2435  0017E8  EE21  F015         	lfsr	2,CompartEtime@F4520
  2436  0017EC  EE10  F075         	lfsr	1,CompartEtime@Message
  2437  0017F0  0E14               	movlw	20
  2438  0017F2                     u1671:
  2439  0017F2  CFDB FFE3          	movff	plusw2,plusw1
  2440  0017F6  06E8               	decf	wreg,f,c
  2441  0017F8  E2FC               	bc	u1671
  2442                           
  2443                           ;Test2.c: 213: int eArr[4];
  2444                           ;Test2.c: 215: lcd_write_cmd(0x80);
  2445  0017FA  0E80               	movlw	128
  2446  0017FC  EC4B  F00E         	call	_lcd_write_cmd
  2447                           
  2448                           ;Test2.c: 217: for (msgindex = 0; msgindex < 20; msgindex++)
  2449  001800  0E00               	movlw	0
  2450  001802  0100               	movlb	0	; () banked
  2451  001804  6F96               	movwf	CompartEtime@msgindex& (0+255),b
  2452  001806                     l2532:
  2453                           
  2454                           ; BSR set to: 0
  2455  001806  0E13               	movlw	19
  2456  001808  0100               	movlb	0	; () banked
  2457  00180A  6596               	cpfsgt	CompartEtime@msgindex& (0+255),b
  2458  00180C  D001               	goto	l2536
  2459  00180E  D013               	goto	l2544
  2460  001810                     l2536:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;Test2.c: 218: {
  2464                           ;Test2.c: 219: outchar = Message[msgindex];
  2465  001810  0100               	movlb	0	; () banked
  2466  001812  5196               	movf	CompartEtime@msgindex& (0+255),w,b
  2467  001814  0D01               	mullw	1
  2468  001816  0E75               	movlw	low CompartEtime@Message
  2469  001818  24F3               	addwf	prodl,w,c
  2470  00181A  6ED9               	movwf	fsr2l,c
  2471  00181C  0E00               	movlw	high CompartEtime@Message
  2472  00181E  20F4               	addwfc	prodh,w,c
  2473  001820  6EDA               	movwf	fsr2h,c
  2474  001822  50DF               	movf	indf2,w,c
  2475  001824  0100               	movlb	0	; () banked
  2476  001826  6F92               	movwf	CompartEtime@outchar& (0+255),b
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;Test2.c: 220: lcd_write_data(outchar);
  2480  001828  0100               	movlb	0	; () banked
  2481  00182A  5192               	movf	CompartEtime@outchar& (0+255),w,b
  2482  00182C  EC1E  F00D         	call	_lcd_write_data
  2483  001830  0100               	movlb	0	; () banked
  2484  001832  2B96               	incf	CompartEtime@msgindex& (0+255),f,b
  2485  001834  D7E8               	goto	l2532
  2486  001836                     l2544:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;Test2.c: 221: }
  2490                           ;Test2.c: 223: lcd_write_cmd(0xC0);
  2491  001836  0EC0               	movlw	192
  2492  001838  EC4B  F00E         	call	_lcd_write_cmd
  2493                           
  2494                           ;Test2.c: 225: for(int i = 0; i <4 ;i++){
  2495  00183C  0E00               	movlw	0
  2496  00183E  0100               	movlb	0	; () banked
  2497  001840  6F95               	movwf	(CompartEtime@i+1)& (0+255),b
  2498  001842  0E00               	movlw	0
  2499  001844  6F94               	movwf	CompartEtime@i& (0+255),b
  2500  001846                     l2548:
  2501                           
  2502                           ; BSR set to: 0
  2503  001846  0100               	movlb	0	; () banked
  2504  001848  BF95               	btfsc	(CompartEtime@i+1)& (0+255),7,b
  2505  00184A  D008               	goto	l2552
  2506  00184C  0100               	movlb	0	; () banked
  2507  00184E  5195               	movf	(CompartEtime@i+1)& (0+255),w,b
  2508  001850  E127               	bnz	l2562
  2509  001852  0E04               	movlw	4
  2510  001854  0100               	movlb	0	; () banked
  2511  001856  5D94               	subwf	CompartEtime@i& (0+255),w,b
  2512  001858  B0D8               	btfsc	status,0,c
  2513  00185A  D022               	goto	l2562
  2514  00185C                     l2552:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;Test2.c: 227: ctemp=getkey();
  2518  00185C  EC21  F010         	call	_getkey	;wreg free
  2519  001860  0100               	movlb	0	; () banked
  2520  001862  6F93               	movwf	CompartEtime@ctemp& (0+255),b
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;Test2.c: 228: lcd_write_data(ctemp);
  2524  001864  0100               	movlb	0	; () banked
  2525  001866  5193               	movf	CompartEtime@ctemp& (0+255),w,b
  2526  001868  EC1E  F00D         	call	_lcd_write_data
  2527                           
  2528                           ;Test2.c: 229: eArr[i] = char_2_int (ctemp);
  2529  00186C  0100               	movlb	0	; () banked
  2530  00186E  5193               	movf	CompartEtime@ctemp& (0+255),w,b
  2531  001870  EC4E  F00F         	call	_char_2_int
  2532  001874  0100               	movlb	0	; () banked
  2533  001876  6F73               	movwf	??_CompartEtime& (0+255),b
  2534  001878  6B74               	clrf	(??_CompartEtime+1)& (0+255),b
  2535  00187A  90D8               	bcf	status,0,c
  2536  00187C  0100               	movlb	0	; () banked
  2537  00187E  3594               	rlcf	CompartEtime@i& (0+255),w,b
  2538  001880  6ED9               	movwf	fsr2l,c
  2539  001882  0100               	movlb	0	; () banked
  2540  001884  3595               	rlcf	(CompartEtime@i+1)& (0+255),w,b
  2541  001886  6EDA               	movwf	fsr2h,c
  2542  001888  0E8A               	movlw	low CompartEtime@eArr
  2543  00188A  26D9               	addwf	fsr2l,f,c
  2544  00188C  0E00               	movlw	high CompartEtime@eArr
  2545  00188E  22DA               	addwfc	fsr2h,f,c
  2546  001890  C073  FFDE         	movff	??_CompartEtime,postinc2
  2547  001894  C074  FFDD         	movff	??_CompartEtime+1,postdec2
  2548                           
  2549                           ; BSR set to: 0
  2550  001898  0100               	movlb	0	; () banked
  2551  00189A  4B94               	infsnz	CompartEtime@i& (0+255),f,b
  2552  00189C  2B95               	incf	(CompartEtime@i+1)& (0+255),f,b
  2553  00189E  D7D3               	goto	l2548
  2554  0018A0                     l2562:
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;Test2.c: 231: }
  2558                           ;Test2.c: 233: hourE = eArr[0] * 10 + eArr[1];
  2559  0018A0  C08A  F060         	movff	CompartEtime@eArr,___wmul@multiplier
  2560  0018A4  C08B  F061         	movff	CompartEtime@eArr+1,___wmul@multiplier+1
  2561  0018A8  0E00               	movlw	0
  2562  0018AA  0100               	movlb	0	; () banked
  2563  0018AC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2564  0018AE  0E0A               	movlw	10
  2565  0018B0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2566  0018B2  EC40  F010         	call	___wmul	;wreg free
  2567  0018B6  0100               	movlb	0	; () banked
  2568  0018B8  518C               	movf	(CompartEtime@eArr+2)& (0+255),w,b
  2569  0018BA  0100               	movlb	0	; () banked
  2570  0018BC  2560               	addwf	?___wmul& (0+255),w,b
  2571  0018BE  0100               	movlb	0	; () banked
  2572  0018C0  6FA2               	movwf	_hourE& (0+255),b
  2573  0018C2  0100               	movlb	0	; () banked
  2574  0018C4  518D               	movf	(CompartEtime@eArr+3)& (0+255),w,b
  2575  0018C6  0100               	movlb	0	; () banked
  2576  0018C8  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2577  0018CA  0100               	movlb	0	; () banked
  2578  0018CC  6FA3               	movwf	(_hourE+1)& (0+255),b
  2579                           
  2580                           ;Test2.c: 234: minuteE = eArr[2] * 10 + eArr[3];
  2581  0018CE  C08E  F060         	movff	CompartEtime@eArr+4,___wmul@multiplier
  2582  0018D2  C08F  F061         	movff	CompartEtime@eArr+5,___wmul@multiplier+1
  2583  0018D6  0E00               	movlw	0
  2584  0018D8  0100               	movlb	0	; () banked
  2585  0018DA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2586  0018DC  0E0A               	movlw	10
  2587  0018DE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2588  0018E0  EC40  F010         	call	___wmul	;wreg free
  2589  0018E4  0100               	movlb	0	; () banked
  2590  0018E6  5190               	movf	(CompartEtime@eArr+6)& (0+255),w,b
  2591  0018E8  0100               	movlb	0	; () banked
  2592  0018EA  2560               	addwf	?___wmul& (0+255),w,b
  2593  0018EC  0100               	movlb	0	; () banked
  2594  0018EE  6FA8               	movwf	_minuteE& (0+255),b
  2595  0018F0  0100               	movlb	0	; () banked
  2596  0018F2  5191               	movf	(CompartEtime@eArr+7)& (0+255),w,b
  2597  0018F4  0100               	movlb	0	; () banked
  2598  0018F6  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2599  0018F8  0100               	movlb	0	; () banked
  2600  0018FA  6FA9               	movwf	(_minuteE+1)& (0+255),b
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;Test2.c: 236: delay_ms(500);
  2604  0018FC  0E01               	movlw	1
  2605  0018FE  0100               	movlb	0	; () banked
  2606  001900  6F61               	movwf	(delay_ms@i+1)& (0+255),b
  2607  001902  0EF4               	movlw	244
  2608  001904  6F60               	movwf	delay_ms@i& (0+255),b
  2609  001906  ECFE  F00F         	call	_delay_ms	;wreg free
  2610                           
  2611                           ;Test2.c: 237: lcd_write_cmd(0x01);
  2612  00190A  0E01               	movlw	1
  2613  00190C  EC4B  F00E         	call	_lcd_write_cmd
  2614  001910  0012               	return		;funcret
  2615  001912                     __end_of_CompartEtime:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           prodh	equ	0xFF4
  2622                           prodl	equ	0xFF3
  2623                           intcon	equ	0xFF2
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           plusw1	equ	0xFE3
  2628                           fsr1l	equ	0xFE1
  2629                           indf2	equ	0xFDF
  2630                           postinc2	equ	0xFDE
  2631                           postdec2	equ	0xFDD
  2632                           plusw2	equ	0xFDB
  2633                           fsr2h	equ	0xFDA
  2634                           fsr2l	equ	0xFD9
  2635                           status	equ	0xFD8
  2636                           
  2637 ;; *************** function _CompartDtime *****************
  2638 ;; Defined at:
  2639 ;;		line 240 in file "Test2.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  i               2   52[BANK0 ] int 
  2644 ;;  Message        21   21[BANK0 ] unsigned char [21]
  2645 ;;  dArr            8   42[BANK0 ] int [4]
  2646 ;;  msgindex        1   54[BANK0 ] unsigned char 
  2647 ;;  ctemp           1   51[BANK0 ] unsigned char 
  2648 ;;  outchar         1   50[BANK0 ] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;		None               void
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0
  2659 ;;      Locals:         0      34       0       0       0       0       0       0       0
  2660 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2661 ;;      Totals:         0      36       0       0       0       0       0       0       0
  2662 ;;Total ram usage:       36 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    5
  2665 ;; This function calls:
  2666 ;;		___wmul
  2667 ;;		_char_2_int
  2668 ;;		_delay_ms
  2669 ;;		_getkey
  2670 ;;		_lcd_write_cmd
  2671 ;;		_lcd_write_data
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text6
  2678  001912                     __ptext6:
  2679                           	opt stack 0
  2680  001912                     _CompartDtime:
  2681                           	opt stack 25
  2682                           
  2683                           ;Test2.c: 242: unsigned char msgindex, outchar, ctemp;
  2684                           ;Test2.c: 243: char Message[ ] = "Set Com D time hhmm:";
  2685                           
  2686                           ;incstack = 0
  2687  001912  EE21  F000         	lfsr	2,CompartDtime@F4528
  2688  001916  EE10  F075         	lfsr	1,CompartDtime@Message
  2689  00191A  0E14               	movlw	20
  2690  00191C                     u1721:
  2691  00191C  CFDB FFE3          	movff	plusw2,plusw1
  2692  001920  06E8               	decf	wreg,f,c
  2693  001922  E2FC               	bc	u1721
  2694                           
  2695                           ;Test2.c: 244: int dArr[4];
  2696                           ;Test2.c: 246: lcd_write_cmd(0x80);
  2697  001924  0E80               	movlw	128
  2698  001926  EC4B  F00E         	call	_lcd_write_cmd
  2699                           
  2700                           ;Test2.c: 248: for (msgindex = 0; msgindex < 20; msgindex++)
  2701  00192A  0E00               	movlw	0
  2702  00192C  0100               	movlb	0	; () banked
  2703  00192E  6F96               	movwf	CompartDtime@msgindex& (0+255),b
  2704  001930                     l2574:
  2705                           
  2706                           ; BSR set to: 0
  2707  001930  0E13               	movlw	19
  2708  001932  0100               	movlb	0	; () banked
  2709  001934  6596               	cpfsgt	CompartDtime@msgindex& (0+255),b
  2710  001936  D001               	goto	l2578
  2711  001938  D013               	goto	l2586
  2712  00193A                     l2578:
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;Test2.c: 249: {
  2716                           ;Test2.c: 250: outchar = Message[msgindex];
  2717  00193A  0100               	movlb	0	; () banked
  2718  00193C  5196               	movf	CompartDtime@msgindex& (0+255),w,b
  2719  00193E  0D01               	mullw	1
  2720  001940  0E75               	movlw	low CompartDtime@Message
  2721  001942  24F3               	addwf	prodl,w,c
  2722  001944  6ED9               	movwf	fsr2l,c
  2723  001946  0E00               	movlw	high CompartDtime@Message
  2724  001948  20F4               	addwfc	prodh,w,c
  2725  00194A  6EDA               	movwf	fsr2h,c
  2726  00194C  50DF               	movf	indf2,w,c
  2727  00194E  0100               	movlb	0	; () banked
  2728  001950  6F92               	movwf	CompartDtime@outchar& (0+255),b
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;Test2.c: 251: lcd_write_data(outchar);
  2732  001952  0100               	movlb	0	; () banked
  2733  001954  5192               	movf	CompartDtime@outchar& (0+255),w,b
  2734  001956  EC1E  F00D         	call	_lcd_write_data
  2735  00195A  0100               	movlb	0	; () banked
  2736  00195C  2B96               	incf	CompartDtime@msgindex& (0+255),f,b
  2737  00195E  D7E8               	goto	l2574
  2738  001960                     l2586:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;Test2.c: 252: }
  2742                           ;Test2.c: 254: lcd_write_cmd(0xC0);
  2743  001960  0EC0               	movlw	192
  2744  001962  EC4B  F00E         	call	_lcd_write_cmd
  2745                           
  2746                           ;Test2.c: 256: for(int i = 0; i <4 ;i++){
  2747  001966  0E00               	movlw	0
  2748  001968  0100               	movlb	0	; () banked
  2749  00196A  6F95               	movwf	(CompartDtime@i+1)& (0+255),b
  2750  00196C  0E00               	movlw	0
  2751  00196E  6F94               	movwf	CompartDtime@i& (0+255),b
  2752  001970                     l2590:
  2753                           
  2754                           ; BSR set to: 0
  2755  001970  0100               	movlb	0	; () banked
  2756  001972  BF95               	btfsc	(CompartDtime@i+1)& (0+255),7,b
  2757  001974  D008               	goto	l2594
  2758  001976  0100               	movlb	0	; () banked
  2759  001978  5195               	movf	(CompartDtime@i+1)& (0+255),w,b
  2760  00197A  E127               	bnz	l2604
  2761  00197C  0E04               	movlw	4
  2762  00197E  0100               	movlb	0	; () banked
  2763  001980  5D94               	subwf	CompartDtime@i& (0+255),w,b
  2764  001982  B0D8               	btfsc	status,0,c
  2765  001984  D022               	goto	l2604
  2766  001986                     l2594:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;Test2.c: 258: ctemp=getkey();
  2770  001986  EC21  F010         	call	_getkey	;wreg free
  2771  00198A  0100               	movlb	0	; () banked
  2772  00198C  6F93               	movwf	CompartDtime@ctemp& (0+255),b
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;Test2.c: 259: lcd_write_data(ctemp);
  2776  00198E  0100               	movlb	0	; () banked
  2777  001990  5193               	movf	CompartDtime@ctemp& (0+255),w,b
  2778  001992  EC1E  F00D         	call	_lcd_write_data
  2779                           
  2780                           ;Test2.c: 260: dArr[i] = char_2_int (ctemp);
  2781  001996  0100               	movlb	0	; () banked
  2782  001998  5193               	movf	CompartDtime@ctemp& (0+255),w,b
  2783  00199A  EC4E  F00F         	call	_char_2_int
  2784  00199E  0100               	movlb	0	; () banked
  2785  0019A0  6F73               	movwf	??_CompartDtime& (0+255),b
  2786  0019A2  6B74               	clrf	(??_CompartDtime+1)& (0+255),b
  2787  0019A4  90D8               	bcf	status,0,c
  2788  0019A6  0100               	movlb	0	; () banked
  2789  0019A8  3594               	rlcf	CompartDtime@i& (0+255),w,b
  2790  0019AA  6ED9               	movwf	fsr2l,c
  2791  0019AC  0100               	movlb	0	; () banked
  2792  0019AE  3595               	rlcf	(CompartDtime@i+1)& (0+255),w,b
  2793  0019B0  6EDA               	movwf	fsr2h,c
  2794  0019B2  0E8A               	movlw	low CompartDtime@dArr
  2795  0019B4  26D9               	addwf	fsr2l,f,c
  2796  0019B6  0E00               	movlw	high CompartDtime@dArr
  2797  0019B8  22DA               	addwfc	fsr2h,f,c
  2798  0019BA  C073  FFDE         	movff	??_CompartDtime,postinc2
  2799  0019BE  C074  FFDD         	movff	??_CompartDtime+1,postdec2
  2800                           
  2801                           ; BSR set to: 0
  2802  0019C2  0100               	movlb	0	; () banked
  2803  0019C4  4B94               	infsnz	CompartDtime@i& (0+255),f,b
  2804  0019C6  2B95               	incf	(CompartDtime@i+1)& (0+255),f,b
  2805  0019C8  D7D3               	goto	l2590
  2806  0019CA                     l2604:
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;Test2.c: 262: }
  2810                           ;Test2.c: 264: hourD = dArr[0] * 10 + dArr[1];
  2811  0019CA  C08A  F060         	movff	CompartDtime@dArr,___wmul@multiplier
  2812  0019CE  C08B  F061         	movff	CompartDtime@dArr+1,___wmul@multiplier+1
  2813  0019D2  0E00               	movlw	0
  2814  0019D4  0100               	movlb	0	; () banked
  2815  0019D6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2816  0019D8  0E0A               	movlw	10
  2817  0019DA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2818  0019DC  EC40  F010         	call	___wmul	;wreg free
  2819  0019E0  0100               	movlb	0	; () banked
  2820  0019E2  518C               	movf	(CompartDtime@dArr+2)& (0+255),w,b
  2821  0019E4  0100               	movlb	0	; () banked
  2822  0019E6  2560               	addwf	?___wmul& (0+255),w,b
  2823  0019E8  0100               	movlb	0	; () banked
  2824  0019EA  6FA0               	movwf	_hourD& (0+255),b
  2825  0019EC  0100               	movlb	0	; () banked
  2826  0019EE  518D               	movf	(CompartDtime@dArr+3)& (0+255),w,b
  2827  0019F0  0100               	movlb	0	; () banked
  2828  0019F2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2829  0019F4  0100               	movlb	0	; () banked
  2830  0019F6  6FA1               	movwf	(_hourD+1)& (0+255),b
  2831                           
  2832                           ;Test2.c: 265: minuteD = dArr[2] * 10 + dArr[3];
  2833  0019F8  C08E  F060         	movff	CompartDtime@dArr+4,___wmul@multiplier
  2834  0019FC  C08F  F061         	movff	CompartDtime@dArr+5,___wmul@multiplier+1
  2835  001A00  0E00               	movlw	0
  2836  001A02  0100               	movlb	0	; () banked
  2837  001A04  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2838  001A06  0E0A               	movlw	10
  2839  001A08  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2840  001A0A  EC40  F010         	call	___wmul	;wreg free
  2841  001A0E  0100               	movlb	0	; () banked
  2842  001A10  5190               	movf	(CompartDtime@dArr+6)& (0+255),w,b
  2843  001A12  0100               	movlb	0	; () banked
  2844  001A14  2560               	addwf	?___wmul& (0+255),w,b
  2845  001A16  0100               	movlb	0	; () banked
  2846  001A18  6FA6               	movwf	_minuteD& (0+255),b
  2847  001A1A  0100               	movlb	0	; () banked
  2848  001A1C  5191               	movf	(CompartDtime@dArr+7)& (0+255),w,b
  2849  001A1E  0100               	movlb	0	; () banked
  2850  001A20  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2851  001A22  0100               	movlb	0	; () banked
  2852  001A24  6FA7               	movwf	(_minuteD+1)& (0+255),b
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;Test2.c: 267: delay_ms(500);
  2856  001A26  0E01               	movlw	1
  2857  001A28  0100               	movlb	0	; () banked
  2858  001A2A  6F61               	movwf	(delay_ms@i+1)& (0+255),b
  2859  001A2C  0EF4               	movlw	244
  2860  001A2E  6F60               	movwf	delay_ms@i& (0+255),b
  2861  001A30  ECFE  F00F         	call	_delay_ms	;wreg free
  2862                           
  2863                           ;Test2.c: 268: lcd_write_cmd(0x01);
  2864  001A34  0E01               	movlw	1
  2865  001A36  EC4B  F00E         	call	_lcd_write_cmd
  2866  001A3A  0012               	return		;funcret
  2867  001A3C                     __end_of_CompartDtime:
  2868                           	opt stack 0
  2869                           tblptru	equ	0xFF8
  2870                           tblptrh	equ	0xFF7
  2871                           tblptrl	equ	0xFF6
  2872                           tablat	equ	0xFF5
  2873                           prodh	equ	0xFF4
  2874                           prodl	equ	0xFF3
  2875                           intcon	equ	0xFF2
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           postdec1	equ	0xFE5
  2879                           plusw1	equ	0xFE3
  2880                           fsr1l	equ	0xFE1
  2881                           indf2	equ	0xFDF
  2882                           postinc2	equ	0xFDE
  2883                           postdec2	equ	0xFDD
  2884                           plusw2	equ	0xFDB
  2885                           fsr2h	equ	0xFDA
  2886                           fsr2l	equ	0xFD9
  2887                           status	equ	0xFD8
  2888                           
  2889 ;; *************** function _lcd_write_data *****************
  2890 ;; Defined at:
  2891 ;;		line 43 in file "lcd_utilities.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  data            1    wreg     unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  data            1    2[BANK0 ] unsigned char 
  2896 ;;  temp1           1    3[BANK0 ] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;		None               void
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0
  2907 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2908 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2909 ;;      Totals:         0       3       0       0       0       0       0       0       0
  2910 ;;Total ram usage:        3 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    4
  2913 ;; This function calls:
  2914 ;;		_lcd_strobe
  2915 ;; This function is called by:
  2916 ;;		_SetupTime
  2917 ;;		_SetupAlarmTime
  2918 ;;		_CompartFtime
  2919 ;;		_CompartEtime
  2920 ;;		_CompartDtime
  2921 ;;		_main
  2922 ;;		_displayDlarmOn
  2923 ;;		_displayAlarmOff
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text7
  2928  001A3C                     __ptext7:
  2929                           	opt stack 0
  2930  001A3C                     _lcd_write_data:
  2931                           	opt stack 26
  2932                           
  2933                           ;incstack = 0
  2934                           ;lcd_write_data@data stored from wreg
  2935  001A3C  0100               	movlb	0	; () banked
  2936  001A3E  6F62               	movwf	lcd_write_data@data& (0+255),b
  2937                           
  2938                           ;lcd_utilities.c: 45: char temp1;
  2939                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  2940  001A40  8C83               	bsf	3971,6,c	;volatile
  2941                           
  2942                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  2943  001A42  0E3F               	movlw	63
  2944  001A44  0100               	movlb	0	; () banked
  2945  001A46  6F61               	movwf	??_lcd_write_data& (0+255),b
  2946  001A48  0E55               	movlw	85
  2947  001A4A                     u2107:
  2948  001A4A  2EE8               	decfsz	wreg,f,c
  2949  001A4C  D7FE               	goto	u2107
  2950  001A4E  2F61               	decfsz	??_lcd_write_data& (0+255),f,b
  2951  001A50  D7FC               	goto	u2107
  2952  001A52  F000               	nop	
  2953                           
  2954                           ;lcd_utilities.c: 50: temp1 = data;
  2955  001A54  C062  F063         	movff	lcd_write_data@data,lcd_write_data@temp1
  2956                           
  2957                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  2958  001A58  0100               	movlb	0	; () banked
  2959  001A5A  3963               	swapf	lcd_write_data@temp1& (0+255),w,b
  2960  001A5C  0B0F               	andlw	15
  2961  001A5E  0100               	movlb	0	; () banked
  2962  001A60  6F63               	movwf	lcd_write_data@temp1& (0+255),b
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  2966  001A62  0100               	movlb	0	; () banked
  2967  001A64  5163               	movf	lcd_write_data@temp1& (0+255),w,b
  2968  001A66  0B0F               	andlw	15
  2969  001A68  6E83               	movwf	3971,c	;volatile
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  2973  001A6A  0E7D               	movlw	125
  2974  001A6C  0100               	movlb	0	; () banked
  2975  001A6E  6F61               	movwf	??_lcd_write_data& (0+255),b
  2976  001A70  0EAC               	movlw	172
  2977  001A72                     u2117:
  2978  001A72  2EE8               	decfsz	wreg,f,c
  2979  001A74  D7FE               	goto	u2117
  2980  001A76  2F61               	decfsz	??_lcd_write_data& (0+255),f,b
  2981  001A78  D7FC               	goto	u2117
  2982                           
  2983                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  2984  001A7A  8C83               	bsf	3971,6,c	;volatile
  2985                           
  2986                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  2987  001A7C  0E7D               	movlw	125
  2988  001A7E  0100               	movlb	0	; () banked
  2989  001A80  6F61               	movwf	??_lcd_write_data& (0+255),b
  2990  001A82  0EAC               	movlw	172
  2991  001A84                     u2127:
  2992  001A84  2EE8               	decfsz	wreg,f,c
  2993  001A86  D7FE               	goto	u2127
  2994  001A88  2F61               	decfsz	??_lcd_write_data& (0+255),f,b
  2995  001A8A  D7FC               	goto	u2127
  2996                           
  2997                           ;lcd_utilities.c: 57: lcd_strobe();
  2998  001A8C  EC5B  F010         	call	_lcd_strobe	;wreg free
  2999                           
  3000                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  3001  001A90  0E7D               	movlw	125
  3002  001A92  0100               	movlb	0	; () banked
  3003  001A94  6F61               	movwf	??_lcd_write_data& (0+255),b
  3004  001A96  0EAC               	movlw	172
  3005  001A98                     u2137:
  3006  001A98  2EE8               	decfsz	wreg,f,c
  3007  001A9A  D7FE               	goto	u2137
  3008  001A9C  2F61               	decfsz	??_lcd_write_data& (0+255),f,b
  3009  001A9E  D7FC               	goto	u2137
  3010                           
  3011                           ;lcd_utilities.c: 60: temp1 = data;
  3012  001AA0  C062  F063         	movff	lcd_write_data@data,lcd_write_data@temp1
  3013                           
  3014                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  3015  001AA4  0100               	movlb	0	; () banked
  3016  001AA6  5163               	movf	lcd_write_data@temp1& (0+255),w,b
  3017  001AA8  0B0F               	andlw	15
  3018  001AAA  6E83               	movwf	3971,c	;volatile
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  3022  001AAC  0E7D               	movlw	125
  3023  001AAE  0100               	movlb	0	; () banked
  3024  001AB0  6F61               	movwf	??_lcd_write_data& (0+255),b
  3025  001AB2  0EAC               	movlw	172
  3026  001AB4                     u2147:
  3027  001AB4  2EE8               	decfsz	wreg,f,c
  3028  001AB6  D7FE               	goto	u2147
  3029  001AB8  2F61               	decfsz	??_lcd_write_data& (0+255),f,b
  3030  001ABA  D7FC               	goto	u2147
  3031                           
  3032                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  3033  001ABC  8C83               	bsf	3971,6,c	;volatile
  3034                           
  3035                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  3036  001ABE  0E9C               	movlw	156
  3037  001AC0  0100               	movlb	0	; () banked
  3038  001AC2  6F61               	movwf	??_lcd_write_data& (0+255),b
  3039  001AC4  0ED7               	movlw	215
  3040  001AC6                     u2157:
  3041  001AC6  2EE8               	decfsz	wreg,f,c
  3042  001AC8  D7FE               	goto	u2157
  3043  001ACA  2F61               	decfsz	??_lcd_write_data& (0+255),f,b
  3044  001ACC  D7FC               	goto	u2157
  3045  001ACE  F000               	nop	
  3046                           
  3047                           ;lcd_utilities.c: 66: lcd_strobe();
  3048  001AD0  EC5B  F010         	call	_lcd_strobe	;wreg free
  3049                           
  3050                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  3051  001AD4  0E9C               	movlw	156
  3052  001AD6  0100               	movlb	0	; () banked
  3053  001AD8  6F61               	movwf	??_lcd_write_data& (0+255),b
  3054  001ADA  0ED7               	movlw	215
  3055  001ADC                     u2167:
  3056  001ADC  2EE8               	decfsz	wreg,f,c
  3057  001ADE  D7FE               	goto	u2167
  3058  001AE0  2F61               	decfsz	??_lcd_write_data& (0+255),f,b
  3059  001AE2  D7FC               	goto	u2167
  3060  001AE4  F000               	nop	
  3061  001AE6  0012               	return		;funcret
  3062  001AE8                     __end_of_lcd_write_data:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           intcon	equ	0xFF2
  3071                           postinc0	equ	0xFEE
  3072                           wreg	equ	0xFE8
  3073                           postdec1	equ	0xFE5
  3074                           plusw1	equ	0xFE3
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           postinc2	equ	0xFDE
  3078                           postdec2	equ	0xFDD
  3079                           plusw2	equ	0xFDB
  3080                           fsr2h	equ	0xFDA
  3081                           fsr2l	equ	0xFD9
  3082                           status	equ	0xFD8
  3083                           
  3084 ;; *************** function _lcd_write_cmd *****************
  3085 ;; Defined at:
  3086 ;;		line 18 in file "lcd_utilities.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  cmd             1    wreg     unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  cmd             1    2[BANK0 ] unsigned char 
  3091 ;;  temp2           1    3[BANK0 ] unsigned char 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;		None               void
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3101 ;;      Params:         0       0       0       0       0       0       0       0       0
  3102 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3103 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3104 ;;      Totals:         0       3       0       0       0       0       0       0       0
  3105 ;;Total ram usage:        3 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    4
  3108 ;; This function calls:
  3109 ;;		_lcd_strobe
  3110 ;; This function is called by:
  3111 ;;		_lcd_init
  3112 ;;		_SetupTime
  3113 ;;		_SetupAlarmTime
  3114 ;;		_CompartFtime
  3115 ;;		_CompartEtime
  3116 ;;		_CompartDtime
  3117 ;;		_main
  3118 ;;		_displayDlarmOn
  3119 ;;		_displayAlarmOff
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text8
  3124  001C96                     __ptext8:
  3125                           	opt stack 0
  3126  001C96                     _lcd_write_cmd:
  3127                           	opt stack 26
  3128                           
  3129                           ;incstack = 0
  3130                           ;lcd_write_cmd@cmd stored from wreg
  3131  001C96  0100               	movlb	0	; () banked
  3132  001C98  6F62               	movwf	lcd_write_cmd@cmd& (0+255),b
  3133                           
  3134                           ;lcd_utilities.c: 20: unsigned char temp2;
  3135                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  3136  001C9A  9C83               	bcf	3971,6,c	;volatile
  3137                           
  3138                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  3139  001C9C  0E3F               	movlw	63
  3140  001C9E  0100               	movlb	0	; () banked
  3141  001CA0  6F61               	movwf	??_lcd_write_cmd& (0+255),b
  3142  001CA2  0E55               	movlw	85
  3143  001CA4                     u2177:
  3144  001CA4  2EE8               	decfsz	wreg,f,c
  3145  001CA6  D7FE               	goto	u2177
  3146  001CA8  2F61               	decfsz	??_lcd_write_cmd& (0+255),f,b
  3147  001CAA  D7FC               	goto	u2177
  3148  001CAC  F000               	nop	
  3149                           
  3150                           ;lcd_utilities.c: 23: temp2 = cmd;
  3151  001CAE  C062  F063         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  3152                           
  3153                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  3154  001CB2  0100               	movlb	0	; () banked
  3155  001CB4  3963               	swapf	lcd_write_cmd@temp2& (0+255),w,b
  3156  001CB6  0B0F               	andlw	15
  3157  001CB8  0100               	movlb	0	; () banked
  3158  001CBA  6F63               	movwf	lcd_write_cmd@temp2& (0+255),b
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  3162  001CBC  0100               	movlb	0	; () banked
  3163  001CBE  5163               	movf	lcd_write_cmd@temp2& (0+255),w,b
  3164  001CC0  0B0F               	andlw	15
  3165  001CC2  6E83               	movwf	3971,c	;volatile
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  3169  001CC4  0E7D               	movlw	125
  3170  001CC6  0100               	movlb	0	; () banked
  3171  001CC8  6F61               	movwf	??_lcd_write_cmd& (0+255),b
  3172  001CCA  0EAC               	movlw	172
  3173  001CCC                     u2187:
  3174  001CCC  2EE8               	decfsz	wreg,f,c
  3175  001CCE  D7FE               	goto	u2187
  3176  001CD0  2F61               	decfsz	??_lcd_write_cmd& (0+255),f,b
  3177  001CD2  D7FC               	goto	u2187
  3178                           
  3179                           ;lcd_utilities.c: 28: lcd_strobe();
  3180  001CD4  EC5B  F010         	call	_lcd_strobe	;wreg free
  3181                           
  3182                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  3183  001CD8  0E7D               	movlw	125
  3184  001CDA  0100               	movlb	0	; () banked
  3185  001CDC  6F61               	movwf	??_lcd_write_cmd& (0+255),b
  3186  001CDE  0EAC               	movlw	172
  3187  001CE0                     u2197:
  3188  001CE0  2EE8               	decfsz	wreg,f,c
  3189  001CE2  D7FE               	goto	u2197
  3190  001CE4  2F61               	decfsz	??_lcd_write_cmd& (0+255),f,b
  3191  001CE6  D7FC               	goto	u2197
  3192                           
  3193                           ;lcd_utilities.c: 32: temp2 = cmd;
  3194  001CE8  C062  F063         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  3195                           
  3196                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  3197  001CEC  0100               	movlb	0	; () banked
  3198  001CEE  5163               	movf	lcd_write_cmd@temp2& (0+255),w,b
  3199  001CF0  0B0F               	andlw	15
  3200  001CF2  6E83               	movwf	3971,c	;volatile
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  3204  001CF4  0E7D               	movlw	125
  3205  001CF6  0100               	movlb	0	; () banked
  3206  001CF8  6F61               	movwf	??_lcd_write_cmd& (0+255),b
  3207  001CFA  0EAC               	movlw	172
  3208  001CFC                     u2207:
  3209  001CFC  2EE8               	decfsz	wreg,f,c
  3210  001CFE  D7FE               	goto	u2207
  3211  001D00  2F61               	decfsz	??_lcd_write_cmd& (0+255),f,b
  3212  001D02  D7FC               	goto	u2207
  3213                           
  3214                           ;lcd_utilities.c: 36: lcd_strobe();
  3215  001D04  EC5B  F010         	call	_lcd_strobe	;wreg free
  3216                           
  3217                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  3218  001D08  0E7D               	movlw	125
  3219  001D0A  0100               	movlb	0	; () banked
  3220  001D0C  6F61               	movwf	??_lcd_write_cmd& (0+255),b
  3221  001D0E  0EAC               	movlw	172
  3222  001D10                     u2217:
  3223  001D10  2EE8               	decfsz	wreg,f,c
  3224  001D12  D7FE               	goto	u2217
  3225  001D14  2F61               	decfsz	??_lcd_write_cmd& (0+255),f,b
  3226  001D16  D7FC               	goto	u2217
  3227  001D18  0012               	return		;funcret
  3228  001D1A                     __end_of_lcd_write_cmd:
  3229                           	opt stack 0
  3230                           tblptru	equ	0xFF8
  3231                           tblptrh	equ	0xFF7
  3232                           tblptrl	equ	0xFF6
  3233                           tablat	equ	0xFF5
  3234                           prodh	equ	0xFF4
  3235                           prodl	equ	0xFF3
  3236                           intcon	equ	0xFF2
  3237                           postinc0	equ	0xFEE
  3238                           wreg	equ	0xFE8
  3239                           postdec1	equ	0xFE5
  3240                           plusw1	equ	0xFE3
  3241                           fsr1l	equ	0xFE1
  3242                           indf2	equ	0xFDF
  3243                           postinc2	equ	0xFDE
  3244                           postdec2	equ	0xFDD
  3245                           plusw2	equ	0xFDB
  3246                           fsr2h	equ	0xFDA
  3247                           fsr2l	equ	0xFD9
  3248                           status	equ	0xFD8
  3249                           
  3250 ;; *************** function _lcd_strobe *****************
  3251 ;; Defined at:
  3252 ;;		line 73 in file "lcd_utilities.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;		None               void
  3259 ;; Registers used:
  3260 ;;		wreg
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : 0/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0
  3267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3268 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3269 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3270 ;;Total ram usage:        1 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    3
  3273 ;; This function calls:
  3274 ;;		Nothing
  3275 ;; This function is called by:
  3276 ;;		_lcd_write_cmd
  3277 ;;		_lcd_write_data
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text9
  3282  0020B6                     __ptext9:
  3283                           	opt stack 0
  3284  0020B6                     _lcd_strobe:
  3285                           	opt stack 26
  3286                           
  3287                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  3288                           
  3289                           ;incstack = 0
  3290  0020B6  8883               	bsf	3971,4,c	;volatile
  3291                           
  3292                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  3293  0020B8  0E7D               	movlw	125
  3294  0020BA  0100               	movlb	0	; () banked
  3295  0020BC  6F60               	movwf	??_lcd_strobe& (0+255),b
  3296  0020BE  0EAC               	movlw	172
  3297  0020C0                     u2227:
  3298  0020C0  2EE8               	decfsz	wreg,f,c
  3299  0020C2  D7FE               	goto	u2227
  3300  0020C4  2F60               	decfsz	??_lcd_strobe& (0+255),f,b
  3301  0020C6  D7FC               	goto	u2227
  3302                           
  3303                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  3304  0020C8  9883               	bcf	3971,4,c	;volatile
  3305                           
  3306                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  3307  0020CA  0E7D               	movlw	125
  3308  0020CC  0100               	movlb	0	; () banked
  3309  0020CE  6F60               	movwf	??_lcd_strobe& (0+255),b
  3310  0020D0  0EAC               	movlw	172
  3311  0020D2                     u2237:
  3312  0020D2  2EE8               	decfsz	wreg,f,c
  3313  0020D4  D7FE               	goto	u2237
  3314  0020D6  2F60               	decfsz	??_lcd_strobe& (0+255),f,b
  3315  0020D8  D7FC               	goto	u2237
  3316  0020DA  0012               	return		;funcret
  3317  0020DC                     __end_of_lcd_strobe:
  3318                           	opt stack 0
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           intcon	equ	0xFF2
  3326                           postinc0	equ	0xFEE
  3327                           wreg	equ	0xFE8
  3328                           postdec1	equ	0xFE5
  3329                           plusw1	equ	0xFE3
  3330                           fsr1l	equ	0xFE1
  3331                           indf2	equ	0xFDF
  3332                           postinc2	equ	0xFDE
  3333                           postdec2	equ	0xFDD
  3334                           plusw2	equ	0xFDB
  3335                           fsr2h	equ	0xFDA
  3336                           fsr2l	equ	0xFD9
  3337                           status	equ	0xFD8
  3338                           
  3339 ;; *************** function _getkey *****************
  3340 ;; Defined at:
  3341 ;;		line 17 in file "keypad_utilities.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  3346 ;;  keycode         1   18[BANK0 ] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      unsigned char 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0
  3357 ;;      Locals:         0      19       0       0       0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3359 ;;      Totals:         0      19       0       0       0       0       0       0       0
  3360 ;;Total ram usage:       19 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    3
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_SetupTime
  3367 ;;		_SetupAlarmTime
  3368 ;;		_CompartFtime
  3369 ;;		_CompartEtime
  3370 ;;		_CompartDtime
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text10
  3376  002042                     __ptext10:
  3377                           	opt stack 0
  3378  002042                     _getkey:
  3379                           	opt stack 27
  3380                           
  3381                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  3382                           
  3383                           ;incstack = 0
  3384  002042  0E1B               	movlw	low getkey@F4444
  3385  002044  6EF6               	movwf	tblptrl,c
  3386  002046                     	if	1	;There is more than 1 active tblptr byte
  3387  002046  0E10               	movlw	high getkey@F4444
  3388  002048  6EF7               	movwf	tblptrh,c
  3389  00204A                     	endif
  3390  00204A                     	if	0	;There are less than 3 active tblptr bytes
  3391  00204A                     	endif
  3392  00204A  EE20  F060         	lfsr	2,getkey@lookup
  3393  00204E  0E11               	movlw	17
  3394  002050                     u1490:
  3395  002050  0009               	tblrd		*+
  3396  002052  CFF5 FFDE          	movff	tablat,postinc2
  3397  002056  06E8               	decf	wreg,f,c
  3398  002058  E2FB               	bc	u1490
  3399  00205A                     l30:
  3400  00205A  AA81               	btfss	3969,5,c	;volatile
  3401  00205C  D7FE               	goto	l30
  3402                           
  3403                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  3404  00205E  5081               	movf	3969,w,c	;volatile
  3405  002060  0B0F               	andlw	15
  3406  002062  0100               	movlb	0	; () banked
  3407  002064  6F72               	movwf	getkey@keycode& (0+255),b
  3408  002066                     l33:
  3409  002066  BA81               	btfsc	3969,5,c	;volatile
  3410  002068  D7FE               	goto	l33
  3411                           
  3412                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  3413  00206A  0100               	movlb	0	; () banked
  3414  00206C  5172               	movf	getkey@keycode& (0+255),w,b
  3415  00206E  0D01               	mullw	1
  3416  002070  0E60               	movlw	low getkey@lookup
  3417  002072  24F3               	addwf	prodl,w,c
  3418  002074  6ED9               	movwf	fsr2l,c
  3419  002076  0E00               	movlw	high getkey@lookup
  3420  002078  20F4               	addwfc	prodh,w,c
  3421  00207A  6EDA               	movwf	fsr2h,c
  3422  00207C  50DF               	movf	indf2,w,c
  3423  00207E  0012               	return	
  3424  002080                     __end_of_getkey:
  3425                           	opt stack 0
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           prodh	equ	0xFF4
  3431                           prodl	equ	0xFF3
  3432                           intcon	equ	0xFF2
  3433                           postinc0	equ	0xFEE
  3434                           wreg	equ	0xFE8
  3435                           postdec1	equ	0xFE5
  3436                           plusw1	equ	0xFE3
  3437                           fsr1l	equ	0xFE1
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           plusw2	equ	0xFDB
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _delay_ms *****************
  3447 ;; Defined at:
  3448 ;;		line 10 in file "delays_utilities.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  i               2    0[BANK0 ] unsigned int 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  j               2    3[BANK0 ] unsigned int 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;		None               void
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3462 ;;      Params:         0       2       0       0       0       0       0       0       0
  3463 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3464 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3465 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3466 ;;Total ram usage:        5 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    3
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_SetupTime
  3473 ;;		_SetupAlarmTime
  3474 ;;		_CompartFtime
  3475 ;;		_CompartEtime
  3476 ;;		_CompartDtime
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text11
  3481  001FFC                     __ptext11:
  3482                           	opt stack 0
  3483  001FFC                     _delay_ms:
  3484                           	opt stack 26
  3485                           
  3486                           ;delays_utilities.c: 12: if(i!=0)
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;incstack = 0
  3490  001FFC  0100               	movlb	0	; () banked
  3491  001FFE  5160               	movf	delay_ms@i& (0+255),w,b
  3492  002000  0100               	movlb	0	; () banked
  3493  002002  1161               	iorwf	(delay_ms@i+1)& (0+255),w,b
  3494  002004  B4D8               	btfsc	status,2,c
  3495  002006  0012               	return	
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;delays_utilities.c: 13: for(j=0;j<i;j++)_delay((unsigned long)((1)*(48000000/4000.0)));
  3499  002008  0E00               	movlw	0
  3500  00200A  0100               	movlb	0	; () banked
  3501  00200C  6F64               	movwf	(delay_ms@j+1)& (0+255),b
  3502  00200E  0E00               	movlw	0
  3503  002010  6F63               	movwf	delay_ms@j& (0+255),b
  3504  002012  D00C               	goto	l6
  3505  002014                     l2288:
  3506                           
  3507                           ; BSR set to: 0
  3508  002014  0E10               	movlw	16
  3509  002016  0100               	movlb	0	; () banked
  3510  002018  6F62               	movwf	??_delay_ms& (0+255),b
  3511  00201A  0E94               	movlw	148
  3512  00201C                     u2247:
  3513  00201C  2EE8               	decfsz	wreg,f,c
  3514  00201E  D7FE               	goto	u2247
  3515  002020  2F62               	decfsz	??_delay_ms& (0+255),f,b
  3516  002022  D7FC               	goto	u2247
  3517  002024  D000               	nop2	
  3518  002026  0100               	movlb	0	; () banked
  3519  002028  4B63               	infsnz	delay_ms@j& (0+255),f,b
  3520  00202A  2B64               	incf	(delay_ms@j+1)& (0+255),f,b
  3521  00202C                     l6:
  3522                           
  3523                           ; BSR set to: 0
  3524  00202C  0100               	movlb	0	; () banked
  3525  00202E  5160               	movf	delay_ms@i& (0+255),w,b
  3526  002030  0100               	movlb	0	; () banked
  3527  002032  5D63               	subwf	delay_ms@j& (0+255),w,b
  3528  002034  0100               	movlb	0	; () banked
  3529  002036  5161               	movf	(delay_ms@i+1)& (0+255),w,b
  3530  002038  0100               	movlb	0	; () banked
  3531  00203A  5964               	subwfb	(delay_ms@j+1)& (0+255),w,b
  3532  00203C  B0D8               	btfsc	status,0,c
  3533  00203E  0012               	return	
  3534  002040  D7E9               	goto	l2288
  3535  002042                     __end_of_delay_ms:
  3536                           	opt stack 0
  3537                           tblptru	equ	0xFF8
  3538                           tblptrh	equ	0xFF7
  3539                           tblptrl	equ	0xFF6
  3540                           tablat	equ	0xFF5
  3541                           prodh	equ	0xFF4
  3542                           prodl	equ	0xFF3
  3543                           intcon	equ	0xFF2
  3544                           postinc0	equ	0xFEE
  3545                           wreg	equ	0xFE8
  3546                           postdec1	equ	0xFE5
  3547                           plusw1	equ	0xFE3
  3548                           fsr1l	equ	0xFE1
  3549                           indf2	equ	0xFDF
  3550                           postinc2	equ	0xFDE
  3551                           postdec2	equ	0xFDD
  3552                           plusw2	equ	0xFDB
  3553                           fsr2h	equ	0xFDA
  3554                           fsr2l	equ	0xFD9
  3555                           status	equ	0xFD8
  3556                           
  3557 ;; *************** function _char_2_int *****************
  3558 ;; Defined at:
  3559 ;;		line 46 in file "Test2.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  char1           1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  char1           1    0[BANK0 ] unsigned char 
  3564 ;;  int1            1    1[BANK0 ] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      unsigned char 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0
  3575 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3577 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3578 ;;Total ram usage:        2 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    3
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_SetupTime
  3585 ;;		_CompartFtime
  3586 ;;		_CompartEtime
  3587 ;;		_CompartDtime
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text12
  3592  001E9C                     __ptext12:
  3593                           	opt stack 0
  3594  001E9C                     _char_2_int:
  3595                           	opt stack 26
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;incstack = 0
  3599                           ;char_2_int@char1 stored from wreg
  3600  001E9C  0100               	movlb	0	; () banked
  3601  001E9E  6F60               	movwf	char_2_int@char1& (0+255),b
  3602                           
  3603                           ;Test2.c: 48: unsigned char int1;
  3604                           ;Test2.c: 49: switch (char1)
  3605  001EA0  D016               	goto	l2384
  3606  001EA2                     l2364:
  3607                           
  3608                           ; BSR set to: 0
  3609  001EA2  0E01               	movlw	1
  3610  001EA4  D011               	goto	L10
  3611  001EA6                     l2366:
  3612                           
  3613                           ; BSR set to: 0
  3614  001EA6  0E02               	movlw	2
  3615  001EA8  D00F               	goto	L10
  3616  001EAA                     l2368:
  3617                           
  3618                           ; BSR set to: 0
  3619  001EAA  0E03               	movlw	3
  3620  001EAC  D00D               	goto	L10
  3621  001EAE                     l2370:
  3622                           
  3623                           ; BSR set to: 0
  3624  001EAE  0E04               	movlw	4
  3625  001EB0  D00B               	goto	L10
  3626  001EB2                     l2372:
  3627                           
  3628                           ; BSR set to: 0
  3629  001EB2  0E05               	movlw	5
  3630  001EB4  D009               	goto	L10
  3631  001EB6                     l2374:
  3632                           
  3633                           ; BSR set to: 0
  3634  001EB6  0E06               	movlw	6
  3635  001EB8  D007               	goto	L10
  3636  001EBA                     l2376:
  3637                           
  3638                           ; BSR set to: 0
  3639  001EBA  0E07               	movlw	7
  3640  001EBC  D005               	goto	L10
  3641  001EBE                     l2378:
  3642                           
  3643                           ; BSR set to: 0
  3644  001EBE  0E08               	movlw	8
  3645  001EC0  D003               	goto	L10
  3646  001EC2                     l2380:
  3647                           
  3648                           ; BSR set to: 0
  3649  001EC2  0E09               	movlw	9
  3650  001EC4  D001               	goto	L10
  3651  001EC6                     l2382:
  3652                           
  3653                           ; BSR set to: 0
  3654  001EC6  0E00               	movlw	0
  3655  001EC8                     L10:
  3656  001EC8  0100               	movlb	0	; () banked
  3657  001ECA  6F61               	movwf	char_2_int@int1& (0+255),b
  3658                           
  3659                           ;Test2.c: 62: }
  3660  001ECC  D021               	goto	l143
  3661  001ECE                     l2384:
  3662  001ECE  0100               	movlb	0	; () banked
  3663  001ED0  5160               	movf	char_2_int@char1& (0+255),w,b
  3664                           
  3665                           ; Switch size 1, requested type "space"
  3666                           ; Number of cases is 10, Range of values is 48 to 57
  3667                           ; switch strategies available:
  3668                           ; Name         Instructions Cycles
  3669                           ; simple_byte           31    16 (average)
  3670                           ;	Chosen strategy is simple_byte
  3671  001ED2  0A30               	xorlw	48	; case 48
  3672  001ED4  B4D8               	btfsc	status,2,c
  3673  001ED6  D7F7               	goto	l2382
  3674  001ED8  0A01               	xorlw	1	; case 49
  3675  001EDA  B4D8               	btfsc	status,2,c
  3676  001EDC  D7E2               	goto	l2364
  3677  001EDE  0A03               	xorlw	3	; case 50
  3678  001EE0  B4D8               	btfsc	status,2,c
  3679  001EE2  D7E1               	goto	l2366
  3680  001EE4  0A01               	xorlw	1	; case 51
  3681  001EE6  B4D8               	btfsc	status,2,c
  3682  001EE8  D7E0               	goto	l2368
  3683  001EEA  0A07               	xorlw	7	; case 52
  3684  001EEC  B4D8               	btfsc	status,2,c
  3685  001EEE  D7DF               	goto	l2370
  3686  001EF0  0A01               	xorlw	1	; case 53
  3687  001EF2  B4D8               	btfsc	status,2,c
  3688  001EF4  D7DE               	goto	l2372
  3689  001EF6  0A03               	xorlw	3	; case 54
  3690  001EF8  B4D8               	btfsc	status,2,c
  3691  001EFA  D7DD               	goto	l2374
  3692  001EFC  0A01               	xorlw	1	; case 55
  3693  001EFE  B4D8               	btfsc	status,2,c
  3694  001F00  D7DC               	goto	l2376
  3695  001F02  0A0F               	xorlw	15	; case 56
  3696  001F04  B4D8               	btfsc	status,2,c
  3697  001F06  D7DB               	goto	l2378
  3698  001F08  0A01               	xorlw	1	; case 57
  3699  001F0A  B4D8               	btfsc	status,2,c
  3700  001F0C  D7DA               	goto	l2380
  3701  001F0E  D7DB               	goto	l2382
  3702  001F10                     l143:
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;Test2.c: 63: return(int1);
  3706  001F10  0100               	movlb	0	; () banked
  3707  001F12  5161               	movf	char_2_int@int1& (0+255),w,b
  3708                           
  3709                           ; BSR set to: 0
  3710  001F14  0012               	return		;funcret
  3711  001F16                     __end_of_char_2_int:
  3712                           	opt stack 0
  3713                           tblptru	equ	0xFF8
  3714                           tblptrh	equ	0xFF7
  3715                           tblptrl	equ	0xFF6
  3716                           tablat	equ	0xFF5
  3717                           prodh	equ	0xFF4
  3718                           prodl	equ	0xFF3
  3719                           intcon	equ	0xFF2
  3720                           postinc0	equ	0xFEE
  3721                           wreg	equ	0xFE8
  3722                           postdec1	equ	0xFE5
  3723                           plusw1	equ	0xFE3
  3724                           fsr1l	equ	0xFE1
  3725                           indf2	equ	0xFDF
  3726                           postinc2	equ	0xFDE
  3727                           postdec2	equ	0xFDD
  3728                           plusw2	equ	0xFDB
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function ___wmul *****************
  3734 ;; Defined at:
  3735 ;;		line 15 in file "D:\02School Applications\MAPLABX xc8 compiler\sources\common\Umul16.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3738 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  product         2    4[BANK0 ] unsigned int 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  2    0[BANK0 ] unsigned int 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, prodl, prodh
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3750 ;;      Params:         0       4       0       0       0       0       0       0       0
  3751 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3753 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3754 ;;Total ram usage:        6 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    3
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_SetupTime
  3761 ;;		_CompartFtime
  3762 ;;		_CompartEtime
  3763 ;;		_CompartDtime
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text13
  3768  002080                     __ptext13:
  3769                           	opt stack 0
  3770  002080                     ___wmul:
  3771                           	opt stack 26
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;incstack = 0
  3775  002080  0100               	movlb	0	; () banked
  3776  002082  5160               	movf	___wmul@multiplier& (0+255),w,b
  3777  002084  0100               	movlb	0	; () banked
  3778  002086  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3779  002088  CFF3 F064          	movff	prodl,___wmul@product
  3780  00208C  CFF4 F065          	movff	prodh,___wmul@product+1
  3781  002090  0100               	movlb	0	; () banked
  3782  002092  5160               	movf	___wmul@multiplier& (0+255),w,b
  3783  002094  0100               	movlb	0	; () banked
  3784  002096  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3785  002098  50F3               	movf	prodl,w,c
  3786  00209A  0100               	movlb	0	; () banked
  3787  00209C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3788  00209E  0100               	movlb	0	; () banked
  3789  0020A0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3790  0020A2  0100               	movlb	0	; () banked
  3791  0020A4  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3792  0020A6  50F3               	movf	prodl,w,c
  3793  0020A8  0100               	movlb	0	; () banked
  3794  0020AA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3795                           
  3796                           ; BSR set to: 0
  3797  0020AC  C064  F060         	movff	___wmul@product,?___wmul
  3798  0020B0  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3799  0020B4  0012               	return	
  3800  0020B6                     __end_of___wmul:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           prodh	equ	0xFF4
  3807                           prodl	equ	0xFF3
  3808                           intcon	equ	0xFF2
  3809                           postinc0	equ	0xFEE
  3810                           wreg	equ	0xFE8
  3811                           postdec1	equ	0xFE5
  3812                           plusw1	equ	0xFE3
  3813                           fsr1l	equ	0xFE1
  3814                           indf2	equ	0xFDF
  3815                           postinc2	equ	0xFDE
  3816                           postdec2	equ	0xFDD
  3817                           plusw2	equ	0xFDB
  3818                           fsr2h	equ	0xFDA
  3819                           fsr2l	equ	0xFD9
  3820                           status	equ	0xFD8
  3821                           
  3822 ;; *************** function _ISR_Timer0_Int *****************
  3823 ;; Defined at:
  3824 ;;		line 66 in file "Test2.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;		None
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  setup          12    0        int [6]
  3829 ;;  second10        2   32[COMRAM] int 
  3830 ;;  minute10        2   30[COMRAM] int 
  3831 ;;  hour10          2   28[COMRAM] int 
  3832 ;;  second1         2   26[COMRAM] int 
  3833 ;;  minute1         2   24[COMRAM] int 
  3834 ;;  hour1           2   22[COMRAM] int 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;		None               void
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3844 ;;      Params:         0       0       0       0       0       0       0       0       0
  3845 ;;      Locals:        12       0       0       0       0       0       0       0       0
  3846 ;;      Temps:         14       0       0       0       0       0       0       0       0
  3847 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3848 ;;Total ram usage:       26 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    2
  3851 ;; This function calls:
  3852 ;;		___awdiv
  3853 ;;		_int_2_char
  3854 ;;		i2___wmul
  3855 ;;		i2_lcd_write_cmd
  3856 ;;		i2_lcd_write_data
  3857 ;; This function is called by:
  3858 ;;		Interrupt level 2
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	intcode
  3863  001008                     __pintcode:
  3864                           	opt stack 0
  3865  001008                     _ISR_Timer0_Int:
  3866                           	opt stack 25
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;incstack = 0
  3870  001008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3871  00100A  CFFA F009          	movff	pclath,??_ISR_Timer0_Int
  3872  00100E  CFFB F00A          	movff	pclatu,??_ISR_Timer0_Int+1
  3873  001012  ED83  F009         	call	int_func,f	;refresh shadow registers
  3874                           pclatu	equ	0xFFB
  3875                           pclath	equ	0xFFA
  3876                           tblptru	equ	0xFF8
  3877                           tblptrh	equ	0xFF7
  3878                           tblptrl	equ	0xFF6
  3879                           tablat	equ	0xFF5
  3880                           prodh	equ	0xFF4
  3881                           prodl	equ	0xFF3
  3882                           intcon	equ	0xFF2
  3883                           postinc0	equ	0xFEE
  3884                           wreg	equ	0xFE8
  3885                           postdec1	equ	0xFE5
  3886                           plusw1	equ	0xFE3
  3887                           fsr1l	equ	0xFE1
  3888                           indf2	equ	0xFDF
  3889                           postinc2	equ	0xFDE
  3890                           postdec2	equ	0xFDD
  3891                           plusw2	equ	0xFDB
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8
  3895                           
  3896                           	psect	intcode_body
  3897  001306                     __pintcode_body:
  3898                           	opt stack 25
  3899  001306                     int_func:
  3900                           	opt stack 25
  3901  001306  0006               	pop		; remove dummy address from shadow register refresh
  3902  001308  CFE9 F00B          	movff	fsr0l,??_ISR_Timer0_Int+2
  3903  00130C  CFEA F00C          	movff	fsr0h,??_ISR_Timer0_Int+3
  3904  001310  CFE1 F00D          	movff	fsr1l,??_ISR_Timer0_Int+4
  3905  001314  CFE2 F00E          	movff	fsr1h,??_ISR_Timer0_Int+5
  3906  001318  CFD9 F00F          	movff	fsr2l,??_ISR_Timer0_Int+6
  3907  00131C  CFDA F010          	movff	fsr2h,??_ISR_Timer0_Int+7
  3908  001320  CFF3 F011          	movff	prodl,??_ISR_Timer0_Int+8
  3909  001324  CFF4 F012          	movff	prodh,??_ISR_Timer0_Int+9
  3910  001328  CFF6 F013          	movff	tblptrl,??_ISR_Timer0_Int+10
  3911  00132C  CFF7 F014          	movff	tblptrh,??_ISR_Timer0_Int+11
  3912  001330  CFF8 F015          	movff	tblptru,??_ISR_Timer0_Int+12
  3913  001334  CFF5 F016          	movff	tablat,??_ISR_Timer0_Int+13
  3914                           
  3915                           ;Test2.c: 68: int hour10, hour1, minute10, minute1, second10, second1;
  3916                           ;Test2.c: 69: int setup[6];
  3917                           ;Test2.c: 73: if (INTCONbits.TMR0IF == 1)
  3918  001338  A4F2               	btfss	intcon,2,c	;volatile
  3919  00133A  D0C8               	goto	i2l161
  3920                           
  3921                           ;Test2.c: 74: {
  3922                           ;Test2.c: 76: TMR0H = 0x48;
  3923  00133C  0E48               	movlw	72
  3924  00133E  6ED7               	movwf	4055,c	;volatile
  3925                           
  3926                           ;Test2.c: 77: TMR0L = 0xE5;
  3927  001340  0EE5               	movlw	229
  3928  001342  6ED6               	movwf	4054,c	;volatile
  3929                           
  3930                           ;Test2.c: 79: second = second + 1;
  3931  001344  0E01               	movlw	1
  3932  001346  2440               	addwf	_second,w,c
  3933  001348  6E40               	movwf	_second,c
  3934  00134A  0E00               	movlw	0
  3935  00134C  2041               	addwfc	_second+1,w,c
  3936  00134E  6E41               	movwf	_second+1,c
  3937                           
  3938                           ;Test2.c: 80: if ( second > 59 )
  3939  001350  BE41               	btfsc	_second+1,7,c
  3940  001352  D02E               	goto	i2l2070
  3941  001354  5041               	movf	_second+1,w,c
  3942  001356  E104               	bnz	i2u113_40
  3943  001358  0E3C               	movlw	60
  3944  00135A  5C40               	subwf	_second,w,c
  3945  00135C  A0D8               	btfss	status,0,c
  3946  00135E  D028               	goto	i2l2070
  3947  001360                     i2u113_40:
  3948                           
  3949                           ;Test2.c: 81: {
  3950                           ;Test2.c: 82: second = 0;
  3951  001360  0E00               	movlw	0
  3952  001362  6E41               	movwf	_second+1,c
  3953  001364  0E00               	movlw	0
  3954  001366  6E40               	movwf	_second,c
  3955                           
  3956                           ;Test2.c: 83: minute = minute + 1;
  3957  001368  0E01               	movlw	1
  3958  00136A  243C               	addwf	_minute,w,c
  3959  00136C  6E3C               	movwf	_minute,c
  3960  00136E  0E00               	movlw	0
  3961  001370  203D               	addwfc	_minute+1,w,c
  3962  001372  6E3D               	movwf	_minute+1,c
  3963                           
  3964                           ;Test2.c: 84: if ( minute > 59 )
  3965  001374  BE3D               	btfsc	_minute+1,7,c
  3966  001376  D01C               	goto	i2l2070
  3967  001378  503D               	movf	_minute+1,w,c
  3968  00137A  E104               	bnz	i2u114_40
  3969  00137C  0E3C               	movlw	60
  3970  00137E  5C3C               	subwf	_minute,w,c
  3971  001380  A0D8               	btfss	status,0,c
  3972  001382  D016               	goto	i2l2070
  3973  001384                     i2u114_40:
  3974                           
  3975                           ;Test2.c: 85: {
  3976                           ;Test2.c: 86: minute = 0;
  3977  001384  0E00               	movlw	0
  3978  001386  6E3D               	movwf	_minute+1,c
  3979  001388  0E00               	movlw	0
  3980  00138A  6E3C               	movwf	_minute,c
  3981                           
  3982                           ;Test2.c: 87: hour = hour + 1;
  3983  00138C  0E01               	movlw	1
  3984  00138E  2438               	addwf	_hour,w,c
  3985  001390  6E38               	movwf	_hour,c
  3986  001392  0E00               	movlw	0
  3987  001394  2039               	addwfc	_hour+1,w,c
  3988  001396  6E39               	movwf	_hour+1,c
  3989                           
  3990                           ;Test2.c: 88: if ( hour > 23 )
  3991  001398  BE39               	btfsc	_hour+1,7,c
  3992  00139A  D00A               	goto	i2l2070
  3993  00139C  5039               	movf	_hour+1,w,c
  3994  00139E  E104               	bnz	i2u115_40
  3995  0013A0  0E18               	movlw	24
  3996  0013A2  5C38               	subwf	_hour,w,c
  3997  0013A4  A0D8               	btfss	status,0,c
  3998  0013A6  D004               	goto	i2l2070
  3999  0013A8                     i2u115_40:
  4000                           
  4001                           ;Test2.c: 89: hour = 0;
  4002  0013A8  0E00               	movlw	0
  4003  0013AA  6E39               	movwf	_hour+1,c
  4004  0013AC  0E00               	movlw	0
  4005  0013AE  6E38               	movwf	_hour,c
  4006  0013B0                     i2l2070:
  4007                           
  4008                           ;Test2.c: 90: }
  4009                           ;Test2.c: 91: }
  4010                           ;Test2.c: 93: hour10 = hour / 10;
  4011  0013B0  C038  F001         	movff	_hour,___awdiv@dividend
  4012  0013B4  C039  F002         	movff	_hour+1,___awdiv@dividend+1
  4013  0013B8  0E00               	movlw	0
  4014  0013BA  6E04               	movwf	___awdiv@divisor+1,c
  4015  0013BC  0E0A               	movlw	10
  4016  0013BE  6E03               	movwf	___awdiv@divisor,c
  4017  0013C0  EC8D  F00E         	call	___awdiv	;wreg free
  4018  0013C4  C001  F01D         	movff	?___awdiv,ISR_Timer0_Int@hour10
  4019  0013C8  C002  F01E         	movff	?___awdiv+1,ISR_Timer0_Int@hour10+1
  4020                           
  4021                           ;Test2.c: 94: hour1 = hour - hour10 * 10;
  4022  0013CC  C01D  F001         	movff	ISR_Timer0_Int@hour10,i2___wmul@multiplier
  4023  0013D0  C01E  F002         	movff	ISR_Timer0_Int@hour10+1,i2___wmul@multiplier+1
  4024  0013D4  0E00               	movlw	0
  4025  0013D6  6E04               	movwf	i2___wmul@multiplicand+1,c
  4026  0013D8  0E0A               	movlw	10
  4027  0013DA  6E03               	movwf	i2___wmul@multiplicand,c
  4028  0013DC  EC6E  F010         	call	i2___wmul	;wreg free
  4029  0013E0  1E01               	comf	?i2___wmul,f,c
  4030  0013E2  1E02               	comf	?i2___wmul+1,f,c
  4031  0013E4  4A01               	infsnz	?i2___wmul,f,c
  4032  0013E6  2A02               	incf	?i2___wmul+1,f,c
  4033  0013E8  5038               	movf	_hour,w,c
  4034  0013EA  2401               	addwf	?i2___wmul,w,c
  4035  0013EC  6E17               	movwf	ISR_Timer0_Int@hour1,c
  4036  0013EE  5039               	movf	_hour+1,w,c
  4037  0013F0  2002               	addwfc	?i2___wmul+1,w,c
  4038  0013F2  6E18               	movwf	ISR_Timer0_Int@hour1+1,c
  4039                           
  4040                           ;Test2.c: 96: minute10 = minute / 10;
  4041  0013F4  C03C  F001         	movff	_minute,___awdiv@dividend
  4042  0013F8  C03D  F002         	movff	_minute+1,___awdiv@dividend+1
  4043  0013FC  0E00               	movlw	0
  4044  0013FE  6E04               	movwf	___awdiv@divisor+1,c
  4045  001400  0E0A               	movlw	10
  4046  001402  6E03               	movwf	___awdiv@divisor,c
  4047  001404  EC8D  F00E         	call	___awdiv	;wreg free
  4048  001408  C001  F01F         	movff	?___awdiv,ISR_Timer0_Int@minute10
  4049  00140C  C002  F020         	movff	?___awdiv+1,ISR_Timer0_Int@minute10+1
  4050                           
  4051                           ;Test2.c: 97: minute1 = minute - minute10 * 10;
  4052  001410  C01F  F001         	movff	ISR_Timer0_Int@minute10,i2___wmul@multiplier
  4053  001414  C020  F002         	movff	ISR_Timer0_Int@minute10+1,i2___wmul@multiplier+1
  4054  001418  0E00               	movlw	0
  4055  00141A  6E04               	movwf	i2___wmul@multiplicand+1,c
  4056  00141C  0E0A               	movlw	10
  4057  00141E  6E03               	movwf	i2___wmul@multiplicand,c
  4058  001420  EC6E  F010         	call	i2___wmul	;wreg free
  4059  001424  1E01               	comf	?i2___wmul,f,c
  4060  001426  1E02               	comf	?i2___wmul+1,f,c
  4061  001428  4A01               	infsnz	?i2___wmul,f,c
  4062  00142A  2A02               	incf	?i2___wmul+1,f,c
  4063  00142C  503C               	movf	_minute,w,c
  4064  00142E  2401               	addwf	?i2___wmul,w,c
  4065  001430  6E19               	movwf	ISR_Timer0_Int@minute1,c
  4066  001432  503D               	movf	_minute+1,w,c
  4067  001434  2002               	addwfc	?i2___wmul+1,w,c
  4068  001436  6E1A               	movwf	ISR_Timer0_Int@minute1+1,c
  4069                           
  4070                           ;Test2.c: 99: second10 = second / 10;
  4071  001438  C040  F001         	movff	_second,___awdiv@dividend
  4072  00143C  C041  F002         	movff	_second+1,___awdiv@dividend+1
  4073  001440  0E00               	movlw	0
  4074  001442  6E04               	movwf	___awdiv@divisor+1,c
  4075  001444  0E0A               	movlw	10
  4076  001446  6E03               	movwf	___awdiv@divisor,c
  4077  001448  EC8D  F00E         	call	___awdiv	;wreg free
  4078  00144C  C001  F021         	movff	?___awdiv,ISR_Timer0_Int@second10
  4079  001450  C002  F022         	movff	?___awdiv+1,ISR_Timer0_Int@second10+1
  4080                           
  4081                           ;Test2.c: 100: second1 = second - second10 * 10;
  4082  001454  C021  F001         	movff	ISR_Timer0_Int@second10,i2___wmul@multiplier
  4083  001458  C022  F002         	movff	ISR_Timer0_Int@second10+1,i2___wmul@multiplier+1
  4084  00145C  0E00               	movlw	0
  4085  00145E  6E04               	movwf	i2___wmul@multiplicand+1,c
  4086  001460  0E0A               	movlw	10
  4087  001462  6E03               	movwf	i2___wmul@multiplicand,c
  4088  001464  EC6E  F010         	call	i2___wmul	;wreg free
  4089  001468  1E01               	comf	?i2___wmul,f,c
  4090  00146A  1E02               	comf	?i2___wmul+1,f,c
  4091  00146C  4A01               	infsnz	?i2___wmul,f,c
  4092  00146E  2A02               	incf	?i2___wmul+1,f,c
  4093  001470  5040               	movf	_second,w,c
  4094  001472  2401               	addwf	?i2___wmul,w,c
  4095  001474  6E1B               	movwf	ISR_Timer0_Int@second1,c
  4096  001476  5041               	movf	_second+1,w,c
  4097  001478  2002               	addwfc	?i2___wmul+1,w,c
  4098  00147A  6E1C               	movwf	ISR_Timer0_Int@second1+1,c
  4099                           
  4100                           ;Test2.c: 102: lcd_write_cmd(0x80);
  4101  00147C  0E80               	movlw	128
  4102  00147E  ECC6  F00F         	call	i2_lcd_write_cmd
  4103                           
  4104                           ;Test2.c: 103: lcd_write_data(int_2_char (hour10));
  4105  001482  501D               	movf	ISR_Timer0_Int@hour10,w,c
  4106  001484  EC8B  F00F         	call	_int_2_char
  4107  001488  EC74  F00D         	call	i2_lcd_write_data
  4108                           
  4109                           ;Test2.c: 104: lcd_write_data(int_2_char (hour1));
  4110  00148C  5017               	movf	ISR_Timer0_Int@hour1,w,c
  4111  00148E  EC8B  F00F         	call	_int_2_char
  4112  001492  EC74  F00D         	call	i2_lcd_write_data
  4113                           
  4114                           ;Test2.c: 105: lcd_write_data(':');
  4115  001496  0E3A               	movlw	58
  4116  001498  EC74  F00D         	call	i2_lcd_write_data
  4117                           
  4118                           ;Test2.c: 106: lcd_write_data(int_2_char (minute10));
  4119  00149C  501F               	movf	ISR_Timer0_Int@minute10,w,c
  4120  00149E  EC8B  F00F         	call	_int_2_char
  4121  0014A2  EC74  F00D         	call	i2_lcd_write_data
  4122                           
  4123                           ;Test2.c: 107: lcd_write_data(int_2_char (minute1));
  4124  0014A6  5019               	movf	ISR_Timer0_Int@minute1,w,c
  4125  0014A8  EC8B  F00F         	call	_int_2_char
  4126  0014AC  EC74  F00D         	call	i2_lcd_write_data
  4127                           
  4128                           ;Test2.c: 108: lcd_write_data(':');
  4129  0014B0  0E3A               	movlw	58
  4130  0014B2  EC74  F00D         	call	i2_lcd_write_data
  4131                           
  4132                           ;Test2.c: 109: lcd_write_data(int_2_char (second10));
  4133  0014B6  5021               	movf	ISR_Timer0_Int@second10,w,c
  4134  0014B8  EC8B  F00F         	call	_int_2_char
  4135  0014BC  EC74  F00D         	call	i2_lcd_write_data
  4136                           
  4137                           ;Test2.c: 110: lcd_write_data(int_2_char (second1));
  4138  0014C0  501B               	movf	ISR_Timer0_Int@second1,w,c
  4139  0014C2  EC8B  F00F         	call	_int_2_char
  4140  0014C6  EC74  F00D         	call	i2_lcd_write_data
  4141                           
  4142                           ;Test2.c: 114: INTCONbits.TMR0IF = 0;
  4143  0014CA  94F2               	bcf	intcon,2,c	;volatile
  4144  0014CC                     i2l161:
  4145  0014CC  C016  FFF5         	movff	??_ISR_Timer0_Int+13,tablat
  4146  0014D0  C015  FFF8         	movff	??_ISR_Timer0_Int+12,tblptru
  4147  0014D4  C014  FFF7         	movff	??_ISR_Timer0_Int+11,tblptrh
  4148  0014D8  C013  FFF6         	movff	??_ISR_Timer0_Int+10,tblptrl
  4149  0014DC  C012  FFF4         	movff	??_ISR_Timer0_Int+9,prodh
  4150  0014E0  C011  FFF3         	movff	??_ISR_Timer0_Int+8,prodl
  4151  0014E4  C010  FFDA         	movff	??_ISR_Timer0_Int+7,fsr2h
  4152  0014E8  C00F  FFD9         	movff	??_ISR_Timer0_Int+6,fsr2l
  4153  0014EC  C00E  FFE2         	movff	??_ISR_Timer0_Int+5,fsr1h
  4154  0014F0  C00D  FFE1         	movff	??_ISR_Timer0_Int+4,fsr1l
  4155  0014F4  C00C  FFEA         	movff	??_ISR_Timer0_Int+3,fsr0h
  4156  0014F8  C00B  FFE9         	movff	??_ISR_Timer0_Int+2,fsr0l
  4157  0014FC  C00A  FFFB         	movff	??_ISR_Timer0_Int+1,pclatu
  4158  001500  C009  FFFA         	movff	??_ISR_Timer0_Int,pclath
  4159  001504  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4160  001506  0011               	retfie		f
  4161  001508                     __end_of_ISR_Timer0_Int:
  4162                           	opt stack 0
  4163                           pclatu	equ	0xFFB
  4164                           pclath	equ	0xFFA
  4165                           tblptru	equ	0xFF8
  4166                           tblptrh	equ	0xFF7
  4167                           tblptrl	equ	0xFF6
  4168                           tablat	equ	0xFF5
  4169                           prodh	equ	0xFF4
  4170                           prodl	equ	0xFF3
  4171                           intcon	equ	0xFF2
  4172                           postinc0	equ	0xFEE
  4173                           fsr0h	equ	0xFEA
  4174                           fsr0l	equ	0xFE9
  4175                           wreg	equ	0xFE8
  4176                           postdec1	equ	0xFE5
  4177                           plusw1	equ	0xFE3
  4178                           fsr1h	equ	0xFE2
  4179                           fsr1l	equ	0xFE1
  4180                           indf2	equ	0xFDF
  4181                           postinc2	equ	0xFDE
  4182                           postdec2	equ	0xFDD
  4183                           plusw2	equ	0xFDB
  4184                           fsr2h	equ	0xFDA
  4185                           fsr2l	equ	0xFD9
  4186                           status	equ	0xFD8
  4187                           
  4188 ;; *************** function i2_lcd_write_data *****************
  4189 ;; Defined at:
  4190 ;;		line 43 in file "lcd_utilities.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  data            1    wreg     unsigned char 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  data            1    2[COMRAM] unsigned char 
  4195 ;;  lcd_write_da    1    3[COMRAM] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;		None               void
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4205 ;;      Params:         0       0       0       0       0       0       0       0       0
  4206 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4207 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4208 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4209 ;;Total ram usage:        3 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    1
  4212 ;; This function calls:
  4213 ;;		i2_lcd_strobe
  4214 ;; This function is called by:
  4215 ;;		_ISR_Timer0_Int
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text15
  4220  001AE8                     __ptext15:
  4221                           	opt stack 0
  4222  001AE8                     i2_lcd_write_data:
  4223                           	opt stack 25
  4224                           
  4225                           ;incstack = 0
  4226                           ;i2lcd_write_data@data stored from wreg
  4227  001AE8  6E03               	movwf	i2lcd_write_data@data,c
  4228                           
  4229                           ;lcd_utilities.c: 45: char temp1;
  4230                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
  4231  001AEA  8C83               	bsf	3971,6,c	;volatile
  4232                           
  4233                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
  4234  001AEC  0E3F               	movlw	63
  4235  001AEE  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  4236  001AF0  0E55               	movlw	85
  4237  001AF2                     i2u225_47:
  4238  001AF2  2EE8               	decfsz	wreg,f,c
  4239  001AF4  D7FE               	goto	i2u225_47
  4240  001AF6  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  4241  001AF8  D7FC               	goto	i2u225_47
  4242  001AFA  F000               	nop	
  4243                           
  4244                           ;lcd_utilities.c: 50: temp1 = data;
  4245  001AFC  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  4246                           
  4247                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
  4248  001B00  3804               	swapf	i2lcd_write_data@temp1,w,c
  4249  001B02  0B0F               	andlw	15
  4250  001B04  6E04               	movwf	i2lcd_write_data@temp1,c
  4251                           
  4252                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
  4253  001B06  5004               	movf	i2lcd_write_data@temp1,w,c
  4254  001B08  0B0F               	andlw	15
  4255  001B0A  6E83               	movwf	3971,c	;volatile
  4256                           
  4257                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
  4258  001B0C  0E7D               	movlw	125
  4259  001B0E  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  4260  001B10  0EAC               	movlw	172
  4261  001B12                     i2u226_47:
  4262  001B12  2EE8               	decfsz	wreg,f,c
  4263  001B14  D7FE               	goto	i2u226_47
  4264  001B16  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  4265  001B18  D7FC               	goto	i2u226_47
  4266                           
  4267                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
  4268  001B1A  8C83               	bsf	3971,6,c	;volatile
  4269                           
  4270                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
  4271  001B1C  0E7D               	movlw	125
  4272  001B1E  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  4273  001B20  0EAC               	movlw	172
  4274  001B22                     i2u227_47:
  4275  001B22  2EE8               	decfsz	wreg,f,c
  4276  001B24  D7FE               	goto	i2u227_47
  4277  001B26  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  4278  001B28  D7FC               	goto	i2u227_47
  4279                           
  4280                           ;lcd_utilities.c: 57: lcd_strobe();
  4281  001B2A  EC81  F010         	call	i2_lcd_strobe	;wreg free
  4282                           
  4283                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
  4284  001B2E  0E7D               	movlw	125
  4285  001B30  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  4286  001B32  0EAC               	movlw	172
  4287  001B34                     i2u228_47:
  4288  001B34  2EE8               	decfsz	wreg,f,c
  4289  001B36  D7FE               	goto	i2u228_47
  4290  001B38  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  4291  001B3A  D7FC               	goto	i2u228_47
  4292                           
  4293                           ;lcd_utilities.c: 60: temp1 = data;
  4294  001B3C  C003  F004         	movff	i2lcd_write_data@data,i2lcd_write_data@temp1
  4295                           
  4296                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
  4297  001B40  5004               	movf	i2lcd_write_data@temp1,w,c
  4298  001B42  0B0F               	andlw	15
  4299  001B44  6E83               	movwf	3971,c	;volatile
  4300                           
  4301                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
  4302  001B46  0E7D               	movlw	125
  4303  001B48  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  4304  001B4A  0EAC               	movlw	172
  4305  001B4C                     i2u229_47:
  4306  001B4C  2EE8               	decfsz	wreg,f,c
  4307  001B4E  D7FE               	goto	i2u229_47
  4308  001B50  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  4309  001B52  D7FC               	goto	i2u229_47
  4310                           
  4311                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  4312  001B54  8C83               	bsf	3971,6,c	;volatile
  4313                           
  4314                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  4315  001B56  0E9C               	movlw	156
  4316  001B58  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  4317  001B5A  0ED7               	movlw	215
  4318  001B5C                     i2u230_47:
  4319  001B5C  2EE8               	decfsz	wreg,f,c
  4320  001B5E  D7FE               	goto	i2u230_47
  4321  001B60  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  4322  001B62  D7FC               	goto	i2u230_47
  4323  001B64  F000               	nop	
  4324                           
  4325                           ;lcd_utilities.c: 66: lcd_strobe();
  4326  001B66  EC81  F010         	call	i2_lcd_strobe	;wreg free
  4327                           
  4328                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  4329  001B6A  0E9C               	movlw	156
  4330  001B6C  6E02               	movwf	??i2_lcd_write_data& (0+255),c
  4331  001B6E  0ED7               	movlw	215
  4332  001B70                     i2u231_47:
  4333  001B70  2EE8               	decfsz	wreg,f,c
  4334  001B72  D7FE               	goto	i2u231_47
  4335  001B74  2E02               	decfsz	??i2_lcd_write_data& (0+255),f,c
  4336  001B76  D7FC               	goto	i2u231_47
  4337  001B78  F000               	nop	
  4338  001B7A  0012               	return		;funcret
  4339  001B7C                     __end_ofi2_lcd_write_data:
  4340                           	opt stack 0
  4341                           pclatu	equ	0xFFB
  4342                           pclath	equ	0xFFA
  4343                           tblptru	equ	0xFF8
  4344                           tblptrh	equ	0xFF7
  4345                           tblptrl	equ	0xFF6
  4346                           tablat	equ	0xFF5
  4347                           prodh	equ	0xFF4
  4348                           prodl	equ	0xFF3
  4349                           intcon	equ	0xFF2
  4350                           postinc0	equ	0xFEE
  4351                           fsr0h	equ	0xFEA
  4352                           fsr0l	equ	0xFE9
  4353                           wreg	equ	0xFE8
  4354                           postdec1	equ	0xFE5
  4355                           plusw1	equ	0xFE3
  4356                           fsr1h	equ	0xFE2
  4357                           fsr1l	equ	0xFE1
  4358                           indf2	equ	0xFDF
  4359                           postinc2	equ	0xFDE
  4360                           postdec2	equ	0xFDD
  4361                           plusw2	equ	0xFDB
  4362                           fsr2h	equ	0xFDA
  4363                           fsr2l	equ	0xFD9
  4364                           status	equ	0xFD8
  4365                           
  4366 ;; *************** function i2_lcd_write_cmd *****************
  4367 ;; Defined at:
  4368 ;;		line 18 in file "lcd_utilities.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  cmd             1    wreg     unsigned char 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  cmd             1    2[COMRAM] unsigned char 
  4373 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;		None               void
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4383 ;;      Params:         0       0       0       0       0       0       0       0       0
  4384 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4385 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4386 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4387 ;;Total ram usage:        3 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    1
  4390 ;; This function calls:
  4391 ;;		i2_lcd_strobe
  4392 ;; This function is called by:
  4393 ;;		_ISR_Timer0_Int
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text16
  4398  001F8C                     __ptext16:
  4399                           	opt stack 0
  4400  001F8C                     i2_lcd_write_cmd:
  4401                           	opt stack 25
  4402                           
  4403                           ;incstack = 0
  4404                           ;i2lcd_write_cmd@cmd stored from wreg
  4405  001F8C  6E03               	movwf	i2lcd_write_cmd@cmd,c
  4406                           
  4407                           ;lcd_utilities.c: 20: unsigned char temp2;
  4408                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  4409  001F8E  9C83               	bcf	3971,6,c	;volatile
  4410                           
  4411                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  4412  001F90  0E3F               	movlw	63
  4413  001F92  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  4414  001F94  0E55               	movlw	85
  4415  001F96                     i2u232_47:
  4416  001F96  2EE8               	decfsz	wreg,f,c
  4417  001F98  D7FE               	goto	i2u232_47
  4418  001F9A  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  4419  001F9C  D7FC               	goto	i2u232_47
  4420  001F9E  F000               	nop	
  4421                           
  4422                           ;lcd_utilities.c: 23: temp2 = cmd;
  4423  001FA0  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  4424                           
  4425                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  4426  001FA4  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  4427  001FA6  0B0F               	andlw	15
  4428  001FA8  6E04               	movwf	i2lcd_write_cmd@temp2,c
  4429                           
  4430                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  4431  001FAA  5004               	movf	i2lcd_write_cmd@temp2,w,c
  4432  001FAC  0B0F               	andlw	15
  4433  001FAE  6E83               	movwf	3971,c	;volatile
  4434                           
  4435                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  4436  001FB0  0E7D               	movlw	125
  4437  001FB2  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  4438  001FB4  0EAC               	movlw	172
  4439  001FB6                     i2u233_47:
  4440  001FB6  2EE8               	decfsz	wreg,f,c
  4441  001FB8  D7FE               	goto	i2u233_47
  4442  001FBA  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  4443  001FBC  D7FC               	goto	i2u233_47
  4444                           
  4445                           ;lcd_utilities.c: 28: lcd_strobe();
  4446  001FBE  EC81  F010         	call	i2_lcd_strobe	;wreg free
  4447                           
  4448                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  4449  001FC2  0E7D               	movlw	125
  4450  001FC4  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  4451  001FC6  0EAC               	movlw	172
  4452  001FC8                     i2u234_47:
  4453  001FC8  2EE8               	decfsz	wreg,f,c
  4454  001FCA  D7FE               	goto	i2u234_47
  4455  001FCC  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  4456  001FCE  D7FC               	goto	i2u234_47
  4457                           
  4458                           ;lcd_utilities.c: 32: temp2 = cmd;
  4459  001FD0  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  4460                           
  4461                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  4462  001FD4  5004               	movf	i2lcd_write_cmd@temp2,w,c
  4463  001FD6  0B0F               	andlw	15
  4464  001FD8  6E83               	movwf	3971,c	;volatile
  4465                           
  4466                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  4467  001FDA  0E7D               	movlw	125
  4468  001FDC  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  4469  001FDE  0EAC               	movlw	172
  4470  001FE0                     i2u235_47:
  4471  001FE0  2EE8               	decfsz	wreg,f,c
  4472  001FE2  D7FE               	goto	i2u235_47
  4473  001FE4  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  4474  001FE6  D7FC               	goto	i2u235_47
  4475                           
  4476                           ;lcd_utilities.c: 36: lcd_strobe();
  4477  001FE8  EC81  F010         	call	i2_lcd_strobe	;wreg free
  4478                           
  4479                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  4480  001FEC  0E7D               	movlw	125
  4481  001FEE  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  4482  001FF0  0EAC               	movlw	172
  4483  001FF2                     i2u236_47:
  4484  001FF2  2EE8               	decfsz	wreg,f,c
  4485  001FF4  D7FE               	goto	i2u236_47
  4486  001FF6  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  4487  001FF8  D7FC               	goto	i2u236_47
  4488  001FFA  0012               	return		;funcret
  4489  001FFC                     __end_ofi2_lcd_write_cmd:
  4490                           	opt stack 0
  4491                           pclatu	equ	0xFFB
  4492                           pclath	equ	0xFFA
  4493                           tblptru	equ	0xFF8
  4494                           tblptrh	equ	0xFF7
  4495                           tblptrl	equ	0xFF6
  4496                           tablat	equ	0xFF5
  4497                           prodh	equ	0xFF4
  4498                           prodl	equ	0xFF3
  4499                           intcon	equ	0xFF2
  4500                           postinc0	equ	0xFEE
  4501                           fsr0h	equ	0xFEA
  4502                           fsr0l	equ	0xFE9
  4503                           wreg	equ	0xFE8
  4504                           postdec1	equ	0xFE5
  4505                           plusw1	equ	0xFE3
  4506                           fsr1h	equ	0xFE2
  4507                           fsr1l	equ	0xFE1
  4508                           indf2	equ	0xFDF
  4509                           postinc2	equ	0xFDE
  4510                           postdec2	equ	0xFDD
  4511                           plusw2	equ	0xFDB
  4512                           fsr2h	equ	0xFDA
  4513                           fsr2l	equ	0xFD9
  4514                           status	equ	0xFD8
  4515                           
  4516 ;; *************** function i2_lcd_strobe *****************
  4517 ;; Defined at:
  4518 ;;		line 73 in file "lcd_utilities.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;		None
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;		None
  4523 ;; Return value:  Size  Location     Type
  4524 ;;		None               void
  4525 ;; Registers used:
  4526 ;;		wreg
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4532 ;;      Params:         0       0       0       0       0       0       0       0       0
  4533 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4534 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4535 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4536 ;;Total ram usage:        1 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		i2_lcd_write_cmd
  4542 ;;		i2_lcd_write_data
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text17
  4547  002102                     __ptext17:
  4548                           	opt stack 0
  4549  002102                     i2_lcd_strobe:
  4550                           	opt stack 25
  4551                           
  4552                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  4553                           
  4554                           ;incstack = 0
  4555  002102  8883               	bsf	3971,4,c	;volatile
  4556                           
  4557                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  4558  002104  0E7D               	movlw	125
  4559  002106  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  4560  002108  0EAC               	movlw	172
  4561  00210A                     i2u237_47:
  4562  00210A  2EE8               	decfsz	wreg,f,c
  4563  00210C  D7FE               	goto	i2u237_47
  4564  00210E  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  4565  002110  D7FC               	goto	i2u237_47
  4566                           
  4567                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  4568  002112  9883               	bcf	3971,4,c	;volatile
  4569                           
  4570                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  4571  002114  0E7D               	movlw	125
  4572  002116  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  4573  002118  0EAC               	movlw	172
  4574  00211A                     i2u238_47:
  4575  00211A  2EE8               	decfsz	wreg,f,c
  4576  00211C  D7FE               	goto	i2u238_47
  4577  00211E  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  4578  002120  D7FC               	goto	i2u238_47
  4579  002122  0012               	return		;funcret
  4580  002124                     __end_ofi2_lcd_strobe:
  4581                           	opt stack 0
  4582                           pclatu	equ	0xFFB
  4583                           pclath	equ	0xFFA
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           prodh	equ	0xFF4
  4589                           prodl	equ	0xFF3
  4590                           intcon	equ	0xFF2
  4591                           postinc0	equ	0xFEE
  4592                           fsr0h	equ	0xFEA
  4593                           fsr0l	equ	0xFE9
  4594                           wreg	equ	0xFE8
  4595                           postdec1	equ	0xFE5
  4596                           plusw1	equ	0xFE3
  4597                           fsr1h	equ	0xFE2
  4598                           fsr1l	equ	0xFE1
  4599                           indf2	equ	0xFDF
  4600                           postinc2	equ	0xFDE
  4601                           postdec2	equ	0xFDD
  4602                           plusw2	equ	0xFDB
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function i2___wmul *****************
  4608 ;; Defined at:
  4609 ;;		line 15 in file "D:\02School Applications\MAPLABX xc8 compiler\sources\common\Umul16.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  multiplier      2    0[COMRAM] unsigned int 
  4612 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  __wmul          2    4[COMRAM] unsigned int 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  2    0[COMRAM] unsigned int 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, prodl, prodh
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4624 ;;      Params:         4       0       0       0       0       0       0       0       0
  4625 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4627 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4628 ;;Total ram usage:        6 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_ISR_Timer0_Int
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text18
  4638  0020DC                     __ptext18:
  4639                           	opt stack 0
  4640  0020DC                     i2___wmul:
  4641                           	opt stack 26
  4642                           
  4643                           ;incstack = 0
  4644  0020DC  5001               	movf	i2___wmul@multiplier,w,c
  4645  0020DE  0203               	mulwf	i2___wmul@multiplicand,c
  4646  0020E0  CFF3 F005          	movff	prodl,i2___wmul@product
  4647  0020E4  CFF4 F006          	movff	prodh,i2___wmul@product+1
  4648  0020E8  5001               	movf	i2___wmul@multiplier,w,c
  4649  0020EA  0204               	mulwf	i2___wmul@multiplicand+1,c
  4650  0020EC  50F3               	movf	prodl,w,c
  4651  0020EE  2606               	addwf	i2___wmul@product+1,f,c
  4652  0020F0  5002               	movf	i2___wmul@multiplier+1,w,c
  4653  0020F2  0203               	mulwf	i2___wmul@multiplicand,c
  4654  0020F4  50F3               	movf	prodl,w,c
  4655  0020F6  2606               	addwf	i2___wmul@product+1,f,c
  4656  0020F8  C005  F001         	movff	i2___wmul@product,?i2___wmul
  4657  0020FC  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  4658  002100  0012               	return	
  4659  002102                     __end_ofi2___wmul:
  4660                           	opt stack 0
  4661                           pclatu	equ	0xFFB
  4662                           pclath	equ	0xFFA
  4663                           tblptru	equ	0xFF8
  4664                           tblptrh	equ	0xFF7
  4665                           tblptrl	equ	0xFF6
  4666                           tablat	equ	0xFF5
  4667                           prodh	equ	0xFF4
  4668                           prodl	equ	0xFF3
  4669                           intcon	equ	0xFF2
  4670                           postinc0	equ	0xFEE
  4671                           fsr0h	equ	0xFEA
  4672                           fsr0l	equ	0xFE9
  4673                           wreg	equ	0xFE8
  4674                           postdec1	equ	0xFE5
  4675                           plusw1	equ	0xFE3
  4676                           fsr1h	equ	0xFE2
  4677                           fsr1l	equ	0xFE1
  4678                           indf2	equ	0xFDF
  4679                           postinc2	equ	0xFDE
  4680                           postdec2	equ	0xFDD
  4681                           plusw2	equ	0xFDB
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           
  4686 ;; *************** function _int_2_char *****************
  4687 ;; Defined at:
  4688 ;;		line 26 in file "Test2.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  int1            1    wreg     unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  int1            1    0[COMRAM] unsigned char 
  4693 ;;  char1           1    1[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      unsigned char 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0
  4704 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4705 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4706 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4707 ;;Total ram usage:        2 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_ISR_Timer0_Int
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text19
  4717  001F16                     __ptext19:
  4718                           	opt stack 0
  4719  001F16                     _int_2_char:
  4720                           	opt stack 26
  4721                           
  4722                           ;incstack = 0
  4723                           ;int_2_char@int1 stored from wreg
  4724  001F16  6E01               	movwf	int_2_char@int1,c
  4725                           
  4726                           ;Test2.c: 28: char char1;
  4727                           ;Test2.c: 29: switch (int1)
  4728  001F18  D017               	goto	i2l1036
  4729  001F1A                     i2l1014:
  4730  001F1A  0E30               	movlw	48
  4731  001F1C  D013               	goto	L20
  4732  001F1E                     i2l1016:
  4733  001F1E  0E31               	movlw	49
  4734  001F20  D011               	goto	L20
  4735  001F22                     i2l1018:
  4736  001F22  0E32               	movlw	50
  4737  001F24  D00F               	goto	L20
  4738  001F26                     i2l1020:
  4739  001F26  0E33               	movlw	51
  4740  001F28  D00D               	goto	L20
  4741  001F2A                     i2l1022:
  4742  001F2A  0E34               	movlw	52
  4743  001F2C  D00B               	goto	L20
  4744  001F2E                     i2l1024:
  4745  001F2E  0E35               	movlw	53
  4746  001F30  D009               	goto	L20
  4747  001F32                     i2l1026:
  4748  001F32  0E36               	movlw	54
  4749  001F34  D007               	goto	L20
  4750  001F36                     i2l1028:
  4751  001F36  0E37               	movlw	55
  4752  001F38  D005               	goto	L20
  4753  001F3A                     i2l1030:
  4754  001F3A  0E38               	movlw	56
  4755  001F3C  D003               	goto	L20
  4756  001F3E                     i2l1032:
  4757  001F3E  0E39               	movlw	57
  4758  001F40  D001               	goto	L20
  4759  001F42                     i2l1034:
  4760  001F42  0E3F               	movlw	63
  4761  001F44                     L20:
  4762  001F44  6E02               	movwf	int_2_char@char1,c
  4763                           
  4764                           ;Test2.c: 42: }
  4765  001F46  D020               	goto	i2l127
  4766  001F48                     i2l1036:
  4767  001F48  5001               	movf	int_2_char@int1,w,c
  4768                           
  4769                           ; Switch size 1, requested type "space"
  4770                           ; Number of cases is 10, Range of values is 0 to 9
  4771                           ; switch strategies available:
  4772                           ; Name         Instructions Cycles
  4773                           ; simple_byte           31    16 (average)
  4774                           ;	Chosen strategy is simple_byte
  4775  001F4A  0A00               	xorlw	0	; case 0
  4776  001F4C  B4D8               	btfsc	status,2,c
  4777  001F4E  D7E5               	goto	i2l1014
  4778  001F50  0A01               	xorlw	1	; case 1
  4779  001F52  B4D8               	btfsc	status,2,c
  4780  001F54  D7E4               	goto	i2l1016
  4781  001F56  0A03               	xorlw	3	; case 2
  4782  001F58  B4D8               	btfsc	status,2,c
  4783  001F5A  D7E3               	goto	i2l1018
  4784  001F5C  0A01               	xorlw	1	; case 3
  4785  001F5E  B4D8               	btfsc	status,2,c
  4786  001F60  D7E2               	goto	i2l1020
  4787  001F62  0A07               	xorlw	7	; case 4
  4788  001F64  B4D8               	btfsc	status,2,c
  4789  001F66  D7E1               	goto	i2l1022
  4790  001F68  0A01               	xorlw	1	; case 5
  4791  001F6A  B4D8               	btfsc	status,2,c
  4792  001F6C  D7E0               	goto	i2l1024
  4793  001F6E  0A03               	xorlw	3	; case 6
  4794  001F70  B4D8               	btfsc	status,2,c
  4795  001F72  D7DF               	goto	i2l1026
  4796  001F74  0A01               	xorlw	1	; case 7
  4797  001F76  B4D8               	btfsc	status,2,c
  4798  001F78  D7DE               	goto	i2l1028
  4799  001F7A  0A0F               	xorlw	15	; case 8
  4800  001F7C  B4D8               	btfsc	status,2,c
  4801  001F7E  D7DD               	goto	i2l1030
  4802  001F80  0A01               	xorlw	1	; case 9
  4803  001F82  B4D8               	btfsc	status,2,c
  4804  001F84  D7DC               	goto	i2l1032
  4805  001F86  D7DD               	goto	i2l1034
  4806  001F88                     i2l127:
  4807                           
  4808                           ;Test2.c: 43: return(char1);
  4809  001F88  5002               	movf	int_2_char@char1,w,c
  4810  001F8A  0012               	return		;funcret
  4811  001F8C                     __end_of_int_2_char:
  4812                           	opt stack 0
  4813                           pclatu	equ	0xFFB
  4814                           pclath	equ	0xFFA
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           prodh	equ	0xFF4
  4820                           prodl	equ	0xFF3
  4821                           intcon	equ	0xFF2
  4822                           postinc0	equ	0xFEE
  4823                           fsr0h	equ	0xFEA
  4824                           fsr0l	equ	0xFE9
  4825                           wreg	equ	0xFE8
  4826                           postdec1	equ	0xFE5
  4827                           plusw1	equ	0xFE3
  4828                           fsr1h	equ	0xFE2
  4829                           fsr1l	equ	0xFE1
  4830                           indf2	equ	0xFDF
  4831                           postinc2	equ	0xFDE
  4832                           postdec2	equ	0xFDD
  4833                           plusw2	equ	0xFDB
  4834                           fsr2h	equ	0xFDA
  4835                           fsr2l	equ	0xFD9
  4836                           status	equ	0xFD8
  4837                           
  4838 ;; *************** function ___awdiv *****************
  4839 ;; Defined at:
  4840 ;;		line 8 in file "D:\02School Applications\MAPLABX xc8 compiler\sources\common\awdiv.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  dividend        2    0[COMRAM] int 
  4843 ;;  divisor         2    2[COMRAM] int 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  quotient        2    6[COMRAM] int 
  4846 ;;  sign            1    5[COMRAM] unsigned char 
  4847 ;;  counter         1    4[COMRAM] unsigned char 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  2    0[COMRAM] int 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4857 ;;      Params:         4       0       0       0       0       0       0       0       0
  4858 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4860 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4861 ;;Total ram usage:        8 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; This function calls:
  4864 ;;		Nothing
  4865 ;; This function is called by:
  4866 ;;		_ISR_Timer0_Int
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text20
  4871  001D1A                     __ptext20:
  4872                           	opt stack 0
  4873  001D1A                     ___awdiv:
  4874                           	opt stack 26
  4875                           
  4876                           ;incstack = 0
  4877  001D1A  0E00               	movlw	0
  4878  001D1C  6E06               	movwf	___awdiv@sign,c
  4879  001D1E  AE04               	btfss	___awdiv@divisor+1,7,c
  4880  001D20  D006               	goto	i2l1946
  4881  001D22  6C03               	negf	___awdiv@divisor,c
  4882  001D24  1E04               	comf	___awdiv@divisor+1,f,c
  4883  001D26  B0D8               	btfsc	status,0,c
  4884  001D28  2A04               	incf	___awdiv@divisor+1,f,c
  4885  001D2A  0E01               	movlw	1
  4886  001D2C  6E06               	movwf	___awdiv@sign,c
  4887  001D2E                     i2l1946:
  4888  001D2E  AE02               	btfss	___awdiv@dividend+1,7,c
  4889  001D30  D006               	goto	i2l1952
  4890  001D32  6C01               	negf	___awdiv@dividend,c
  4891  001D34  1E02               	comf	___awdiv@dividend+1,f,c
  4892  001D36  B0D8               	btfsc	status,0,c
  4893  001D38  2A02               	incf	___awdiv@dividend+1,f,c
  4894  001D3A  0E01               	movlw	1
  4895  001D3C  1A06               	xorwf	___awdiv@sign,f,c
  4896  001D3E                     i2l1952:
  4897  001D3E  0E00               	movlw	0
  4898  001D40  6E08               	movwf	___awdiv@quotient+1,c
  4899  001D42  0E00               	movlw	0
  4900  001D44  6E07               	movwf	___awdiv@quotient,c
  4901  001D46  5003               	movf	___awdiv@divisor,w,c
  4902  001D48  1004               	iorwf	___awdiv@divisor+1,w,c
  4903  001D4A  B4D8               	btfsc	status,2,c
  4904  001D4C  D01C               	goto	i2l1974
  4905  001D4E  0E01               	movlw	1
  4906  001D50  6E05               	movwf	___awdiv@counter,c
  4907  001D52  D004               	goto	i2l1960
  4908  001D54                     i2l1958:
  4909  001D54  90D8               	bcf	status,0,c
  4910  001D56  3603               	rlcf	___awdiv@divisor,f,c
  4911  001D58  3604               	rlcf	___awdiv@divisor+1,f,c
  4912  001D5A  2A05               	incf	___awdiv@counter,f,c
  4913  001D5C                     i2l1960:
  4914  001D5C  AE04               	btfss	___awdiv@divisor+1,7,c
  4915  001D5E  D7FA               	goto	i2l1958
  4916  001D60                     i2l1962:
  4917  001D60  90D8               	bcf	status,0,c
  4918  001D62  3607               	rlcf	___awdiv@quotient,f,c
  4919  001D64  3608               	rlcf	___awdiv@quotient+1,f,c
  4920  001D66  5003               	movf	___awdiv@divisor,w,c
  4921  001D68  5C01               	subwf	___awdiv@dividend,w,c
  4922  001D6A  5004               	movf	___awdiv@divisor+1,w,c
  4923  001D6C  5802               	subwfb	___awdiv@dividend+1,w,c
  4924  001D6E  A0D8               	btfss	status,0,c
  4925  001D70  D005               	goto	i2l1970
  4926  001D72  5003               	movf	___awdiv@divisor,w,c
  4927  001D74  5E01               	subwf	___awdiv@dividend,f,c
  4928  001D76  5004               	movf	___awdiv@divisor+1,w,c
  4929  001D78  5A02               	subwfb	___awdiv@dividend+1,f,c
  4930  001D7A  8007               	bsf	___awdiv@quotient,0,c
  4931  001D7C                     i2l1970:
  4932  001D7C  90D8               	bcf	status,0,c
  4933  001D7E  3204               	rrcf	___awdiv@divisor+1,f,c
  4934  001D80  3203               	rrcf	___awdiv@divisor,f,c
  4935  001D82  2E05               	decfsz	___awdiv@counter,f,c
  4936  001D84  D7ED               	goto	i2l1962
  4937  001D86                     i2l1974:
  4938  001D86  5006               	movf	___awdiv@sign,w,c
  4939  001D88  B4D8               	btfsc	status,2,c
  4940  001D8A  D004               	goto	i2l1978
  4941  001D8C  6C07               	negf	___awdiv@quotient,c
  4942  001D8E  1E08               	comf	___awdiv@quotient+1,f,c
  4943  001D90  B0D8               	btfsc	status,0,c
  4944  001D92  2A08               	incf	___awdiv@quotient+1,f,c
  4945  001D94                     i2l1978:
  4946  001D94  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4947  001D98  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4948  001D9C  0012               	return	
  4949  001D9E                     __end_of___awdiv:
  4950                           	opt stack 0
  4951                           pclatu	equ	0xFFB
  4952                           pclath	equ	0xFFA
  4953                           tblptru	equ	0xFF8
  4954                           tblptrh	equ	0xFF7
  4955                           tblptrl	equ	0xFF6
  4956                           tablat	equ	0xFF5
  4957                           prodh	equ	0xFF4
  4958                           prodl	equ	0xFF3
  4959                           intcon	equ	0xFF2
  4960                           postinc0	equ	0xFEE
  4961                           fsr0h	equ	0xFEA
  4962                           fsr0l	equ	0xFE9
  4963                           wreg	equ	0xFE8
  4964                           postdec1	equ	0xFE5
  4965                           plusw1	equ	0xFE3
  4966                           fsr1h	equ	0xFE2
  4967                           fsr1l	equ	0xFE1
  4968                           indf2	equ	0xFDF
  4969                           postinc2	equ	0xFDE
  4970                           postdec2	equ	0xFDD
  4971                           plusw2	equ	0xFDB
  4972                           fsr2h	equ	0xFDA
  4973                           fsr2l	equ	0xFD9
  4974                           status	equ	0xFD8
  4975                           pclatu	equ	0xFFB
  4976                           pclath	equ	0xFFA
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           prodh	equ	0xFF4
  4982                           prodl	equ	0xFF3
  4983                           intcon	equ	0xFF2
  4984                           postinc0	equ	0xFEE
  4985                           fsr0h	equ	0xFEA
  4986                           fsr0l	equ	0xFE9
  4987                           wreg	equ	0xFE8
  4988                           postdec1	equ	0xFE5
  4989                           plusw1	equ	0xFE3
  4990                           fsr1h	equ	0xFE2
  4991                           fsr1l	equ	0xFE1
  4992                           indf2	equ	0xFDF
  4993                           postinc2	equ	0xFDE
  4994                           postdec2	equ	0xFDD
  4995                           plusw2	equ	0xFDB
  4996                           fsr2h	equ	0xFDA
  4997                           fsr2l	equ	0xFD9
  4998                           status	equ	0xFD8
  4999                           
  5000                           	psect	rparam
  5001  0000                     pclatu	equ	0xFFB
  5002                           pclath	equ	0xFFA
  5003                           tblptru	equ	0xFF8
  5004                           tblptrh	equ	0xFF7
  5005                           tblptrl	equ	0xFF6
  5006                           tablat	equ	0xFF5
  5007                           prodh	equ	0xFF4
  5008                           prodl	equ	0xFF3
  5009                           intcon	equ	0xFF2
  5010                           postinc0	equ	0xFEE
  5011                           fsr0h	equ	0xFEA
  5012                           fsr0l	equ	0xFE9
  5013                           wreg	equ	0xFE8
  5014                           postdec1	equ	0xFE5
  5015                           plusw1	equ	0xFE3
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           plusw2	equ	0xFDB
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026                           	psect	temp
  5027  000042                     btemp:
  5028                           	opt stack 0
  5029  000042                     	ds	1
  5030  0000                     int$flags	set	btemp
  5031                           pclatu	equ	0xFFB
  5032                           pclath	equ	0xFFA
  5033                           tblptru	equ	0xFF8
  5034                           tblptrh	equ	0xFF7
  5035                           tblptrl	equ	0xFF6
  5036                           tablat	equ	0xFF5
  5037                           prodh	equ	0xFF4
  5038                           prodl	equ	0xFF3
  5039                           intcon	equ	0xFF2
  5040                           postinc0	equ	0xFEE
  5041                           fsr0h	equ	0xFEA
  5042                           fsr0l	equ	0xFE9
  5043                           wreg	equ	0xFE8
  5044                           postdec1	equ	0xFE5
  5045                           plusw1	equ	0xFE3
  5046                           fsr1h	equ	0xFE2
  5047                           fsr1l	equ	0xFE1
  5048                           indf2	equ	0xFDF
  5049                           postinc2	equ	0xFDE
  5050                           postdec2	equ	0xFDD
  5051                           plusw2	equ	0xFDB
  5052                           fsr2h	equ	0xFDA
  5053                           fsr2l	equ	0xFD9
  5054                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        189
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      65
    BANK0           160     56     104
    BANK1           256     58     205
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    SetupTime@setuptime	PTR int  size(2) Largest target is 12
		 -> main@setup(BANK1[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Timer0_Int in COMRAM

    _ISR_Timer0_Int->___awdiv
    i2_lcd_write_data->i2_lcd_strobe
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_CompartDtime
    _main->_CompartEtime
    _lcd_init->_lcd_write_cmd
    _SetupTime->_getkey
    _SetupAlarmTime->_getkey
    _CompartFtime->_getkey
    _CompartEtime->_getkey
    _CompartDtime->_getkey
    _lcd_write_data->_lcd_strobe
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _ISR_Timer0_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_Timer0_Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Timer0_Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Timer0_Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Timer0_Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Timer0_Int in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Timer0_Int in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Timer0_Int in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                59    59      0   15588
                                             55 BANK0      1     1      0
                                              0 BANK1     58    58      0
                       _CompartDtime
                       _CompartEtime
                       _CompartFtime
                     _SetupAlarmTime
                          _SetupTime
                             _getkey
                           _lcd_init
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                              4 BANK0      3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _SetupTime                                           42    40      2    3485
                                             19 BANK0     30    28      2
                             ___wmul
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _SetupAlarmTime                                      28    28      0    1121
                                             19 BANK0     24    24      0
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _CompartFtime                                        28    28      0    3191
                                             19 BANK0     28    28      0
                             ___wmul
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _CompartEtime                                        36    36      0    3361
                                             19 BANK0     36    36      0
                             ___wmul
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _CompartDtime                                        36    36      0    3361
                                             19 BANK0     36    36      0
                             ___wmul
                         _char_2_int
                           _delay_ms
                             _getkey
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_write_data                                       3     3      0     164
                                              1 BANK0      3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (1) _lcd_write_cmd                                        3     3      0     164
                                              1 BANK0      3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_strobe                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _getkey                                              19    19      0      74
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     484
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _char_2_int                                           2     2      0      95
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1876
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_Timer0_Int                                      38    38      0    1457
                                              8 COMRAM    26    26      0
                            ___awdiv
                         _int_2_char
                           i2___wmul
                    i2_lcd_write_cmd
                   i2_lcd_write_data
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_data                                     3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (5) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (6) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i2___wmul                                             6     2      4     313
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _int_2_char                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     684
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CompartDtime
     ___wmul
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _CompartEtime
     ___wmul
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _CompartFtime
     ___wmul
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupAlarmTime
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _SetupTime
     ___wmul
     _char_2_int
     _delay_ms
     _getkey
     _lcd_write_cmd
       _lcd_strobe
     _lcd_write_data
       _lcd_strobe
   _getkey
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _lcd_write_cmd
     _lcd_strobe
   _lcd_write_data
     _lcd_strobe

 _ISR_Timer0_Int (ROOT)
   ___awdiv
   _int_2_char
   i2___wmul
   i2_lcd_write_cmd
     i2_lcd_strobe
   i2_lcd_write_data
     i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3A      CD       7       80.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      68       5       65.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     22      41       1       69.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     176      20        0.0%
DATA                 0      0     176       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Aug 19 12:09:43 2020

           ??_CompartDtime 0073             ??_CompartEtime 0073             ??_CompartFtime 0073  
                        l6 202C                         l30 205A                         l33 2066  
             ___awdiv@sign 0006    __size_of_ISR_Timer0_Int 0500        ___wmul@multiplicand 0062  
              main@Message 0193   __size_ofi2_lcd_write_cmd 0070                        l143 1F10  
                      prod 000FF3                        wreg 000FE8               main@Message1 01A8  
              getkey@F4444 101B                       l2400 1DB6                       l2404 1DCC  
                     l2510 1732                       l2502 170C                       l2430 1556  
                     l2422 1530                       l2520 1776                       l2408 1DE6  
                     l2370 1EAE                       l2506 171C                       l2434 1566  
                     l2418 1526                       l2380 1EC2                       l2372 1EB2  
                     l2364 1EA2                       l2604 19CA                       l2532 1806  
                     l2460 1E3C                       l2382 1EC6                       l2374 1EB6  
                     l2366 1EA6                       l2438 157C                       l2702 1102  
                     l2376 1EBA                       l2368 1EAA                       l2384 1ECE  
                     l2288 2014                       l2552 185C                       l2544 1836  
                     l2536 1810                       l2472 1E6C                       l2464 1E46  
                     l2448 15C4                       l2378 1EBE                       l2562 18A0  
                     l2490 16DC                       l2730 1188                       l2714 1132  
                     l2706 110C                       l2548 1846                       l2732 11A4  
                     l2590 1970                       l2574 1930                       l2494 16E6  
                     l2750 1216                       l2726 115A                       l2670 1074  
                     l2718 1140                       l2752 1232                       l2672 107A  
                     l2594 1986                       l2586 1960                       l2578 193A  
                     l2770 12A4                       l2746 11E8                       l2738 11D6  
                     l2666 1068                       l2772 12C0                       l2684 10B4  
                     l2668 106E                       l2676 1080                       l2766 1276  
                     l2758 1264                       l2678 1096                       l2696 10E4  
                     l2688 10BE                       l2778 12F2                       u2000 1246  
                     u2006 1248                       u2107 1A4A                       u2060 12D4  
                     u2117 1A72                       u2207 1CFC                       u2127 1A84  
                     u2217 1D10                       u2137 1A98                       u2066 12D6  
                     u2227 20C0                       u2147 1AB4                       u2237 20D2  
                     u2157 1AC6                       u1621 16C8                       u1541 1512  
                     u2247 201C                       u2167 1ADC                       u2087 1DD4  
                     u2177 1CA4                       u1721 191C                       u2097 1E12  
                     u1490 2050                       u2187 1CCC                       u2197 1CE0  
                     u1671 17F2                       u1591 1E28                       u1831 10A0  
                     u1940 11B8                       u1861 10EE                       u1946 11BA  
                     _fArr 0098     __end_of_lcd_write_data 1AE8                       _main 102E  
                     _hour 0038        displayDlarmOn@F4536 0154                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
                     btemp 0042                       pclat 000FFA                main@outchar 01CB  
                     prodh 000FF4                       prodl 000FF3             ?_lcd_write_cmd 0001  
                     start 1016   __end_ofi2_lcd_write_data 1B7C               ___param_bank 000010  
   SetupAlarmTime@msgindex 008A                      ?_main 0001            __end_of___awdiv 1D9E  
                    _T0CON 000FD5            ___awdiv@divisor 0003                      i2l127 1F88  
                    i2l161 14CC            ___awdiv@counter 0005                      _TMR0H 000FD7  
                    _TMR0L 000FD6                      _PORTB 000F81                      _PORTD 000F83  
                    _TRISA 000F92                      _TRISC 000F94                      _TRISD 000F95  
         lcd_write_cmd@cmd 0062               main@msgindex 01CC                      _hourA 003A  
                    _hourD 00A0                      _hourE 00A2                      _hourF 00A4  
                    tablat 000FF5           __end_ofi2___wmul 2102                      plusw1 000FE3  
                    plusw2 000FDB            ?_lcd_write_data 0001                      status 000FD8  
    __size_ofi2_lcd_strobe 0022               getkey@lookup 0060            __initialization 1C10  
             __end_of_main 1306                     ??_main 0097              __activetblptr 000002  
        ??i2_lcd_write_cmd 0002                     _ADCON1 000FC1           ___awdiv@dividend 0001  
     __end_of_CompartDtime 1A3C       __end_of_CompartEtime 1912       __end_of_CompartFtime 17E8  
             i2_lcd_strobe 2102                     i2l1020 1F26                     i2l1030 1F3A  
                   i2l1022 1F2A                     i2l1014 1F1A                     i2l1032 1F3E  
                   i2l1024 1F2E                     i2l1016 1F1E                     i2l1034 1F42  
                   i2l1026 1F32                     i2l1018 1F22                     i2l1028 1F36  
                   i2l1036 1F48                     i2l2070 13B0                     i2l1960 1D5C  
                   i2l1952 1D3E                     i2l1970 1D7C                     i2l1962 1D60  
                   i2l1946 1D2E                     i2l1958 1D54                     i2l1974 1D86  
                   i2l1978 1D94            ??_lcd_write_cmd 0061    __size_of_SetupAlarmTime 007E  
                   _ComOpt 00B2           __end_of_delay_ms 2042           __end_of_lcd_init 1E1E  
           char_2_int@int1 0061                     ___wmul 2080                  ??___awdiv 0005  
           _ISR_Timer0_Int 1008                     _getkey 2042                     clear_0 1C16  
                   clear_1 1C22           ___awdiv@quotient 0007                     _minute 003C  
                   _second 0040                 SetupTime@i 008E               __pdataCOMRAM 0023  
       __size_of_SetupTime 01B6               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                 __accesstop 0060  
  __end_of__initialization 1C88              getkey@keycode 0072              ___rparam_used 000001  
       SetupTime@setuptime 0073     __end_of_ISR_Timer0_Int 1508             __pcstackCOMRAM 0001  
             __pidataBANK0 2139               __pidataBANK1 1B7C                  ?i2___wmul 0001  
         CompartDtime@dArr 008A           CompartEtime@eArr 008A                 _char_2_int 1E9C  
               __pbssBANK0 0098        CompartDtime@Message 0075          __end_of_SetupTime 16BE  
        ?i2_lcd_write_data 0001            ?_ISR_Timer0_Int 0001                    ?___wmul 0060  
       ??i2_lcd_write_data 0002                    ?_getkey 0001                 ??i2___wmul 0005  
    __size_of_CompartDtime 012A      __size_of_CompartEtime 012A      __size_of_CompartFtime 012A  
                ?_delay_ms 0060        CompartDtime@outchar 0092           ??_lcd_write_data 0061  
               _lcd_strobe 20B6                  ?_lcd_init 0001         lcd_write_data@data 0062  
       lcd_write_cmd@temp2 0063             _SetupAlarmTime 1E1E                 _int_2_char 1F16  
      CompartEtime@Message 0075                    __Hparam 0000                    __Lparam 0000  
          char_2_int@char1 0060                    ___awdiv 1D1A            __size_of___wmul 0036  
             _CompartDtime 1912               _CompartEtime 17E8               _CompartFtime 16BE  
             __psmallconst 101A            __size_of_getkey 003E            i2_lcd_write_cmd 1F8C  
                  __pcinit 1C10         main@displayUpdated 01C9                    __ramtop 0800  
                  __ptext0 102E                    __ptext1 1D9E                    __ptext2 1508  
                  __ptext3 1E1E                    __ptext4 16BE                    __ptext5 17E8  
                  __ptext6 1912                    __ptext7 1A3C                    __ptext8 1C96  
                  __ptext9 20B6             SetupTime@F4496 0023                    _minuteA 003E  
                  _minuteD 00A6                    _minuteE 00A8                    _minuteF 00AA  
               ??_delay_ms 0062        CompartEtime@outchar 0092                ?_char_2_int 0001  
               ??_lcd_init 0064             __pintcode_body 1306     __end_of_SetupAlarmTime 1E9C  
     end_of_initialization 1C88         i2lcd_write_cmd@cmd 0003       ISR_Timer0_Int@hour10 001D  
           SetupTime@ctemp 008D              __Lmediumconst 0000                    int_func 1306  
      i2___wmul@multiplier 0001        CompartFtime@Message 0075                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
                _PORTAbits 000F80                  _PORTBbits 000F81                  _PORTCbits 000F82  
                _PORTDbits 000F83      SetupAlarmTime@Message 0073        CompartFtime@outchar 008A  
              ?_lcd_strobe 0001            ?_SetupAlarmTime 0001                ?_int_2_char 0001  
    __end_of_lcd_write_cmd 1D1A    __end_ofi2_lcd_write_cmd 1FFC        __size_of_char_2_int 007A  
    SetupAlarmTime@outchar 0088             __end_of___wmul 20B6              __pidataCOMRAM 2124  
           __end_of_getkey 2080           i2___wmul@product 0005        start_initialization 1C10  
    i2lcd_write_data@temp1 0004          __size_ofi2___wmul 0026          CompartDtime@F4528 0100  
        CompartEtime@F4520 0115          CompartDtime@ctemp 0093           ??_ISR_Timer0_Int 0009  
        CompartFtime@F4513 012A          CompartEtime@ctemp 0093                   ??___wmul 0064  
                _SetupTime 1508                __pdataBANK0 00B3                __pdataBANK1 0100  
                 ??_getkey 0060        __size_of_lcd_strobe 0026          CompartFtime@ctemp 008B  
      __size_of_int_2_char 0076          SetupTime@msgindex 0090                __pbssCOMRAM 0038  
__size_ofi2_lcd_write_data 0094              __pcstackBANK0 0060              __pcstackBANK1 0193  
        __size_of_delay_ms 0046          __size_of_lcd_init 0080           ?i2_lcd_write_cmd 0001  
                __pintcode 1008                   ?___awdiv 0001                 ?_SetupTime 0073  
              __smallconst 101A               ??_char_2_int 0060              ?i2_lcd_strobe 0001  
           ___wmul@product 0064                  delay_ms@i 0060                  delay_ms@j 0063  
     CompartDtime@msgindex 0096        ISR_Timer0_Int@hour1 0017       displayAlarmOff@F4541 013F  
                 i2u113_40 1360                   i2u114_40 1384                   i2u115_40 13A8  
                 i2u230_47 1B5C                   i2u231_47 1B70                   i2u232_47 1F96  
                 i2u233_47 1FB6                   i2u225_47 1AF2                   i2u234_47 1FC8  
                 i2u226_47 1B12                   i2u235_47 1FE0                   i2u227_47 1B22  
                 i2u236_47 1FF2                   i2u228_47 1B34                   i2u237_47 210A  
                 i2u229_47 1B4C                   i2u238_47 211A                  main@F4550 0169  
                main@F4552 017E         __end_of_char_2_int 1F16                 _ADCON1bits 000FC1  
        ___wmul@multiplier 0060                   i2___wmul 20DC                  lcd_init@i 0065  
                main@ctemp 01CA           ??_SetupAlarmTime 0073                  main@setup 01BD  
      lcd_write_data@temp1 0063             ??i2_lcd_strobe 0001               ??_lcd_strobe 0060  
         SetupTime@Message 0077                  copy_data0 1C3C                  copy_data1 1C5C  
                copy_data2 1C7C       i2lcd_write_data@data 0003       i2lcd_write_cmd@temp2 0004  
             ??_int_2_char 0001    __size_of_lcd_write_data 00AC                   __Hrparam 0000  
   ISR_Timer0_Int@minute10 001F     ISR_Timer0_Int@second10 0021                   __Lrparam 0000  
          int_2_char@char1 0002                ??_SetupTime 0075           __size_of___awdiv 0084  
    i2___wmul@multiplicand 0003         __end_of_lcd_strobe 20DC           SetupTime@outchar 008C  
       __end_of_int_2_char 1F8C           i2_lcd_write_data 1AE8                   _delay_ms 1FFC  
                 __ptext10 2042                   __ptext11 1FFC                   __ptext20 1D1A  
                 __ptext12 1E9C                   __ptext13 2080                   __ptext15 1AE8  
                 __ptext16 1F8C                   __ptext17 2102                   __ptext18 20DC  
                 __ptext19 1F16                   _lcd_init 1D9E              __size_of_main 02D8  
     CompartEtime@msgindex 0096        SetupAlarmTime@F4507 00B3                   int$flags 0042  
                 _snooze_D 00AC                   _snooze_E 00AE                   _snooze_F 00B0  
      SetupAlarmTime@ctemp 0089                 _INTCONbits 000FF2     __size_of_lcd_write_cmd 0084  
    ISR_Timer0_Int@minute1 0019      ISR_Timer0_Int@second1 001B             int_2_char@int1 0001  
            CompartDtime@i 0094                   intlevel2 0000              CompartEtime@i 0094  
            CompartFtime@i 008C        __end_ofgetkey@F4444 102D       __end_ofi2_lcd_strobe 2124  
            ?_CompartDtime 0001              ?_CompartEtime 0001              ?_CompartFtime 0001  
           _lcd_write_data 1A3C       CompartFtime@msgindex 008E              _lcd_write_cmd 1C96  
