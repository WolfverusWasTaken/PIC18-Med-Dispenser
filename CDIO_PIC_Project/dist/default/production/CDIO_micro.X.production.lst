

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jul 15 14:23:22 2020

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           	psect	idataCOMRAM
    31  00169A                     __pidataCOMRAM:
    32                           	opt stack 0
    33                           
    34                           ;initializer for _loop
    35  00169A  0001               	dw	1
    36                           
    37                           ;initializer for _loop1
    38  00169C  0001               	dw	1
    39                           
    40                           	psect	idataBANK0
    41  00158A                     __pidataBANK0:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _Message1
    45  00158A  43                 	db	67
    46  00158B  75                 	db	117
    47  00158C  72                 	db	114
    48  00158D  72                 	db	114
    49  00158E  65                 	db	101
    50  00158F  6E                 	db	110
    51  001590  74                 	db	116
    52  001591  20                 	db	32
    53  001592  54                 	db	84
    54  001593  69                 	db	105
    55  001594  6D                 	db	109
    56  001595  65                 	db	101
    57  001596  3A                 	db	58
    58  001597  20                 	db	32
    59  001598  20                 	db	32
    60  001599  20                 	db	32
    61  00159A  20                 	db	32
    62  00159B  20                 	db	32
    63  00159C  20                 	db	32
    64  00159D  20                 	db	32
    65  00159E  00                 	db	0
    66                           
    67                           ;initializer for _Message2
    68  00159F  43                 	db	67
    69  0015A0  68                 	db	104
    70  0015A1  6F                 	db	111
    71  0015A2  6F                 	db	111
    72  0015A3  73                 	db	115
    73  0015A4  65                 	db	101
    74  0015A5  20                 	db	32
    75  0015A6  43                 	db	67
    76  0015A7  6F                 	db	111
    77  0015A8  6D                 	db	109
    78  0015A9  70                 	db	112
    79  0015AA  61                 	db	97
    80  0015AB  72                 	db	114
    81  0015AC  74                 	db	116
    82  0015AD  6D                 	db	109
    83  0015AE  65                 	db	101
    84  0015AF  6E                 	db	110
    85  0015B0  74                 	db	116
    86  0015B1  3A                 	db	58
    87  0015B2  20                 	db	32
    88  0015B3  00                 	db	0
    89                           
    90                           ;initializer for _Message3
    91  0015B4  55                 	db	85
    92  0015B5  6E                 	db	110
    93  0015B6  73                 	db	115
    94  0015B7  74                 	db	116
    95  0015B8  61                 	db	97
    96  0015B9  74                 	db	116
    97  0015BA  65                 	db	101
    98  0015BB  64                 	db	100
    99  0015BC  20                 	db	32
   100  0015BD  43                 	db	67
   101  0015BE  6F                 	db	111
   102  0015BF  6D                 	db	109
   103  0015C0  70                 	db	112
   104  0015C1  61                 	db	97
   105  0015C2  72                 	db	114
   106  0015C3  74                 	db	116
   107  0015C4  6D                 	db	109
   108  0015C5  65                 	db	101
   109  0015C6  6E                 	db	110
   110  0015C7  74                 	db	116
   111  0015C8  00                 	db	0
   112                           
   113                           ;initializer for _Message4
   114  0015C9  52                 	db	82
   115  0015CA  65                 	db	101
   116  0015CB  6D                 	db	109
   117  0015CC  69                 	db	105
   118  0015CD  6E                 	db	110
   119  0015CE  64                 	db	100
   120  0015CF  65                 	db	101
   121  0015D0  72                 	db	114
   122  0015D1  20                 	db	32
   123  0015D2  54                 	db	84
   124  0015D3  69                 	db	105
   125  0015D4  6D                 	db	109
   126  0015D5  65                 	db	101
   127  0015D6  20                 	db	32
   128  0015D7  66                 	db	102
   129  0015D8  6F                 	db	111
   130  0015D9  72                 	db	114
   131  0015DA  20                 	db	32
   132  0015DB  20                 	db	32
   133  0015DC  3A                 	db	58
   134  0015DD  00                 	db	0
   135                           
   136                           	psect	smallconst
   137  00101A                     __psmallconst:
   138                           	opt stack 0
   139  00101A  00                 	db	0
   140  00101B                     getkey@F4444:
   141                           	opt stack 0
   142  00101B  31                 	db	49
   143  00101C  32                 	db	50
   144  00101D  33                 	db	51
   145  00101E  46                 	db	70
   146  00101F  34                 	db	52
   147  001020  35                 	db	53
   148  001021  36                 	db	54
   149  001022  45                 	db	69
   150  001023  37                 	db	55
   151  001024  38                 	db	56
   152  001025  39                 	db	57
   153  001026  44                 	db	68
   154  001027  41                 	db	65
   155  001028  30                 	db	48
   156  001029  42                 	db	66
   157  00102A  43                 	db	67
   158  00102B  20                 	db	32
   159  00102C  00                 	db	0
   160  00102D                     __end_ofgetkey@F4444:
   161                           	opt stack 0
   162  0000                     _PORTB	set	3969
   163  0000                     _PORTBbits	set	3969
   164  0000                     _PORTD	set	3971
   165  0000                     _PORTDbits	set	3971
   166  0000                     _TRISD	set	3989
   167  00102D  00                 	db	0	; dummy byte at the end
   168  0000                     
   169                           ; #config settings
   170                           
   171                           	psect	cinit
   172  001530                     __pcinit:
   173                           	opt stack 0
   174  001530                     start_initialization:
   175                           	opt stack 0
   176  001530                     __initialization:
   177                           	opt stack 0
   178                           
   179                           ; Clear objects allocated to COMRAM (20 bytes)
   180  001530  EE00  F026         	lfsr	0,__pbssCOMRAM
   181  001534  0E14               	movlw	20
   182  001536                     clear_0:
   183  001536  6AEE               	clrf	postinc0,c
   184  001538  06E8               	decf	wreg,f,c
   185  00153A  E1FD               	bnz	clear_0
   186                           
   187                           ; Initialize objects allocated to BANK0 (84 bytes)
   188                           ; load TBLPTR registers with __pidataBANK0
   189  00153C  0E8A               	movlw	low __pidataBANK0
   190  00153E  6EF6               	movwf	tblptrl,c
   191  001540  0E15               	movlw	high __pidataBANK0
   192  001542  6EF7               	movwf	tblptrh,c
   193  001544  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   194  001546  6EF8               	movwf	tblptru,c
   195  001548  EE00  F060         	lfsr	0,__pdataBANK0
   196  00154C  EE10 F054          	lfsr	1,84
   197  001550                     copy_data0:
   198  001550  0009               	tblrd		*+
   199  001552  CFF5 FFEE          	movff	tablat,postinc0
   200  001556  50E5               	movf	postdec1,w,c
   201  001558  50E1               	movf	fsr1l,w,c
   202  00155A  E1FA               	bnz	copy_data0
   203                           
   204                           ; Initialize objects allocated to COMRAM (4 bytes)
   205                           ; load TBLPTR registers with __pidataCOMRAM
   206  00155C  0E9A               	movlw	low __pidataCOMRAM
   207  00155E  6EF6               	movwf	tblptrl,c
   208  001560  0E16               	movlw	high __pidataCOMRAM
   209  001562  6EF7               	movwf	tblptrh,c
   210  001564  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   211  001566  6EF8               	movwf	tblptru,c
   212  001568  EE00  F03A         	lfsr	0,__pdataCOMRAM
   213  00156C  EE10 F004          	lfsr	1,4
   214  001570                     copy_data1:
   215  001570  0009               	tblrd		*+
   216  001572  CFF5 FFEE          	movff	tablat,postinc0
   217  001576  50E5               	movf	postdec1,w,c
   218  001578  50E1               	movf	fsr1l,w,c
   219  00157A  E1FA               	bnz	copy_data1
   220  00157C                     end_of_initialization:
   221                           	opt stack 0
   222  00157C                     __end_of__initialization:
   223                           	opt stack 0
   224  00157C  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   225  00157E  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   226  001580  0E00               	movlw	low (__Lmediumconst shr (0+16))
   227  001582  6EF8               	movwf	tblptru,c
   228  001584  0100               	movlb	0
   229  001586  EF17  F008         	goto	_main	;jump to C main() function
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           tblptrl	equ	0xFF6
   233                           tablat	equ	0xFF5
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           postdec1	equ	0xFE5
   237                           fsr1l	equ	0xFE1
   238                           
   239                           	psect	bssCOMRAM
   240  000026                     __pbssCOMRAM:
   241                           	opt stack 0
   242  000026                     _h1:
   243                           	opt stack 0
   244  000026                     	ds	2
   245  000028                     _h2:
   246                           	opt stack 0
   247  000028                     	ds	2
   248  00002A                     _i:
   249                           	opt stack 0
   250  00002A                     	ds	2
   251  00002C                     _m1:
   252                           	opt stack 0
   253  00002C                     	ds	2
   254  00002E                     _m2:
   255                           	opt stack 0
   256  00002E                     	ds	2
   257  000030                     _state:
   258                           	opt stack 0
   259  000030                     	ds	2
   260  000032                     _state1:
   261                           	opt stack 0
   262  000032                     	ds	2
   263  000034                     _state2:
   264                           	opt stack 0
   265  000034                     	ds	2
   266  000036                     _comopt:
   267                           	opt stack 0
   268  000036                     	ds	1
   269  000037                     _key:
   270                           	opt stack 0
   271  000037                     	ds	1
   272  000038                     _outchar:
   273                           	opt stack 0
   274  000038                     	ds	1
   275  000039                     _wrtopt:
   276                           	opt stack 0
   277  000039                     	ds	1
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	dataCOMRAM
   288  00003A                     __pdataCOMRAM:
   289                           	opt stack 0
   290  00003A                     _loop:
   291                           	opt stack 0
   292  00003A                     	ds	2
   293  00003C                     _loop1:
   294                           	opt stack 0
   295  00003C                     	ds	2
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           postdec1	equ	0xFE5
   303                           fsr1l	equ	0xFE1
   304                           
   305                           	psect	dataBANK0
   306  000060                     __pdataBANK0:
   307                           	opt stack 0
   308  000060                     _Message1:
   309                           	opt stack 0
   310  000060                     	ds	21
   311  000075                     _Message2:
   312                           	opt stack 0
   313  000075                     	ds	21
   314  00008A                     _Message3:
   315                           	opt stack 0
   316  00008A                     	ds	21
   317  00009F                     _Message4:
   318                           	opt stack 0
   319  00009F                     	ds	21
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	cstackBANK0
   330  0000B4                     __pcstackBANK0:
   331                           	opt stack 0
   332  0000B4                     ??_lcd_init:
   333  0000B4                     getkey@lookup:
   334                           	opt stack 0
   335                           
   336                           ; 18 bytes @ 0x0
   337  0000B4                     	ds	1
   338  0000B5                     lcd_init@i:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x1
   342  0000B5                     	ds	17
   343  0000C6                     getkey@keycode:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x12
   347  0000C6                     	ds	1
   348                           tblptru	equ	0xFF8
   349                           tblptrh	equ	0xFF7
   350                           tblptrl	equ	0xFF6
   351                           tablat	equ	0xFF5
   352                           postinc0	equ	0xFEE
   353                           wreg	equ	0xFE8
   354                           postdec1	equ	0xFE5
   355                           fsr1l	equ	0xFE1
   356                           
   357                           	psect	cstackCOMRAM
   358  000001                     __pcstackCOMRAM:
   359                           	opt stack 0
   360  000001                     ??i2_lcd_strobe:
   361  000001                     i2getkey@lookup:
   362                           	opt stack 0
   363                           
   364                           ; 18 bytes @ 0x0
   365  000001                     	ds	1
   366  000002                     ??i2_lcd_write_cmd:
   367                           
   368                           ; 0 bytes @ 0x1
   369  000002                     	ds	1
   370  000003                     i2lcd_write_cmd@cmd:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x2
   374  000003                     	ds	1
   375  000004                     i2lcd_write_cmd@temp2:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x3
   379  000004                     	ds	1
   380  000005                     ??i2_lcd_init:
   381                           
   382                           ; 0 bytes @ 0x4
   383  000005                     	ds	1
   384  000006                     i2lcd_init@i:
   385                           	opt stack 0
   386                           
   387                           ; 2 bytes @ 0x5
   388  000006                     	ds	13
   389  000013                     i2getkey@keycode:
   390                           	opt stack 0
   391                           
   392                           ; 1 bytes @ 0x12
   393  000013                     	ds	1
   394  000014                     ??_DisInt:
   395                           
   396                           ; 0 bytes @ 0x13
   397  000014                     	ds	14
   398  000022                     ??_lcd_strobe:
   399                           
   400                           ; 0 bytes @ 0x21
   401  000022                     	ds	1
   402  000023                     ??_lcd_write_cmd:
   403  000023                     ??_lcd_write_data:
   404                           
   405                           ; 0 bytes @ 0x22
   406  000023                     	ds	1
   407  000024                     lcd_write_cmd@cmd:
   408                           	opt stack 0
   409  000024                     lcd_write_data@data:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x23
   413  000024                     	ds	1
   414  000025                     lcd_write_cmd@temp2:
   415                           	opt stack 0
   416  000025                     lcd_write_data@temp1:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x24
   420  000025                     	ds	1
   421  000026                     tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           postinc0	equ	0xFEE
   426                           wreg	equ	0xFE8
   427                           postdec1	equ	0xFE5
   428                           fsr1l	equ	0xFE1
   429                           
   430                           ; 0 bytes @ 0x25
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   433 ;;
   434 ;; *************** function _main *****************
   435 ;; Defined at:
   436 ;;		line 51 in file "Test.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;		None
   441 ;; Return value:  Size  Location     Type
   442 ;;		None               void
   443 ;; Registers used:
   444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   450 ;;      Params:         0       0       0       0       0       0       0       0       0
   451 ;;      Locals:         0       0       0       0       0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0       0       0
   453 ;;      Totals:         0       0       0       0       0       0       0       0       0
   454 ;;Total ram usage:        0 bytes
   455 ;; Hardware stack levels required when called:    7
   456 ;; This function calls:
   457 ;;		_getkey
   458 ;;		_lcd_init
   459 ;;		_lcd_write_cmd
   460 ;;		_lcd_write_data
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text0
   467  00102E                     __ptext0:
   468                           	opt stack 0
   469  00102E                     _main:
   470                           	opt stack 24
   471                           
   472                           ;Test.c: 53: lcd_init();
   473                           
   474                           ;incstack = 0
   475                           ;Test.c: 52: while(1){
   476  00102E  EC73  F009         	call	_lcd_init	;wreg free
   477                           
   478                           ;Test.c: 55: while(loop == 1){
   479  001032  D07E               	goto	l1608
   480  001034                     l1542:
   481                           
   482                           ;Test.c: 56: lcd_write_cmd(0x01);
   483  001034  0E01               	movlw	1
   484  001036  EC28  F00A         	call	_lcd_write_cmd
   485                           
   486                           ;Test.c: 57: lcd_write_cmd(0x80);
   487  00103A  0E80               	movlw	128
   488  00103C  EC28  F00A         	call	_lcd_write_cmd
   489                           
   490                           ;Test.c: 58: for (i = 0; i < 20; i++)
   491  001040  0E00               	movlw	0
   492  001042  6E2B               	movwf	_i+1,c
   493  001044  0E00               	movlw	0
   494  001046  6E2A               	movwf	_i,c
   495  001048                     l1546:
   496  001048  BE2B               	btfsc	_i+1,7,c
   497  00104A  D006               	goto	l1550
   498  00104C  502B               	movf	_i+1,w,c
   499  00104E  E112               	bnz	l1558
   500  001050  0E14               	movlw	20
   501  001052  5C2A               	subwf	_i,w,c
   502  001054  B0D8               	btfsc	status,0,c
   503  001056  D00E               	goto	l1558
   504  001058                     l1550:
   505                           
   506                           ;Test.c: 59: {
   507                           ;Test.c: 60: outchar = Message2[i];
   508  001058  0E75               	movlw	low _Message2
   509  00105A  242A               	addwf	_i,w,c
   510  00105C  6ED9               	movwf	fsr2l,c
   511  00105E  0E00               	movlw	high _Message2
   512  001060  202B               	addwfc	_i+1,w,c
   513  001062  6EDA               	movwf	fsr2h,c
   514  001064  50DF               	movf	indf2,w,c
   515  001066  6E38               	movwf	_outchar,c
   516                           
   517                           ;Test.c: 61: lcd_write_data(outchar);
   518  001068  5038               	movf	_outchar,w,c
   519  00106A  EC29  F009         	call	_lcd_write_data
   520  00106E  4A2A               	infsnz	_i,f,c
   521  001070  2A2B               	incf	_i+1,f,c
   522  001072  D7EA               	goto	l1546
   523  001074                     l1558:
   524                           
   525                           ;Test.c: 62: }
   526                           ;Test.c: 64: lcd_write_cmd(0xC0);
   527  001074  0EC0               	movlw	192
   528  001076  EC28  F00A         	call	_lcd_write_cmd
   529                           
   530                           ;Test.c: 65: for (i = 0; i < 1; i++)
   531  00107A  0E00               	movlw	0
   532  00107C  6E2B               	movwf	_i+1,c
   533  00107E  0E00               	movlw	0
   534  001080  6E2A               	movwf	_i,c
   535  001082                     l1562:
   536  001082  BE2B               	btfsc	_i+1,7,c
   537  001084  D005               	goto	l1566
   538  001086  502B               	movf	_i+1,w,c
   539  001088  E112               	bnz	l1576
   540  00108A  042A               	decf	_i,w,c
   541  00108C  B0D8               	btfsc	status,0,c
   542  00108E  D00F               	goto	l1576
   543  001090                     l1566:
   544                           
   545                           ;Test.c: 66: {
   546                           ;Test.c: 67: comopt=getkey();
   547  001090  ECEF  F00A         	call	_getkey	;wreg free
   548  001094  6E36               	movwf	_comopt,c
   549                           
   550                           ;Test.c: 68: lcd_write_data(comopt);
   551  001096  5036               	movf	_comopt,w,c
   552  001098  EC29  F009         	call	_lcd_write_data
   553                           
   554                           ;Test.c: 70: wrtopt=getkey();
   555  00109C  ECEF  F00A         	call	_getkey	;wreg free
   556  0010A0  6E39               	movwf	_wrtopt,c
   557                           
   558                           ;Test.c: 71: lcd_write_cmd(0x01);
   559  0010A2  0E01               	movlw	1
   560  0010A4  EC28  F00A         	call	_lcd_write_cmd
   561  0010A8  4A2A               	infsnz	_i,f,c
   562  0010AA  2A2B               	incf	_i+1,f,c
   563  0010AC  D7EA               	goto	l1562
   564  0010AE                     l1576:
   565                           
   566                           ;Test.c: 72: }
   567                           ;Test.c: 73: if((comopt != 'F' || comopt != 'E' || comopt != 'D') && wrtopt == 'A'){
   568  0010AE  0E46               	movlw	70
   569  0010B0  1836               	xorwf	_comopt,w,c
   570  0010B2  A4D8               	btfss	status,2,c
   571  0010B4  D008               	goto	l1582
   572  0010B6  0E45               	movlw	69
   573  0010B8  1836               	xorwf	_comopt,w,c
   574  0010BA  A4D8               	btfss	status,2,c
   575  0010BC  D004               	goto	l1582
   576  0010BE  0E44               	movlw	68
   577  0010C0  1836               	xorwf	_comopt,w,c
   578  0010C2  B4D8               	btfsc	status,2,c
   579  0010C4  D025               	goto	l1602
   580  0010C6                     l1582:
   581  0010C6  0E41               	movlw	65
   582  0010C8  1839               	xorwf	_wrtopt,w,c
   583  0010CA  A4D8               	btfss	status,2,c
   584  0010CC  D021               	goto	l1602
   585                           
   586                           ;Test.c: 74: for (i = 0; i < 20; i++)
   587  0010CE  0E00               	movlw	0
   588  0010D0  6E2B               	movwf	_i+1,c
   589  0010D2  0E00               	movlw	0
   590  0010D4  6E2A               	movwf	_i,c
   591  0010D6                     l1586:
   592  0010D6  BE2B               	btfsc	_i+1,7,c
   593  0010D8  D006               	goto	l1590
   594  0010DA  502B               	movf	_i+1,w,c
   595  0010DC  E116               	bnz	l1600
   596  0010DE  0E14               	movlw	20
   597  0010E0  5C2A               	subwf	_i,w,c
   598  0010E2  B0D8               	btfsc	status,0,c
   599  0010E4  D012               	goto	l1600
   600  0010E6                     l1590:
   601                           
   602                           ;Test.c: 75: {
   603                           ;Test.c: 76: outchar = Message3[i];
   604  0010E6  0E8A               	movlw	low _Message3
   605  0010E8  242A               	addwf	_i,w,c
   606  0010EA  6ED9               	movwf	fsr2l,c
   607  0010EC  0E00               	movlw	high _Message3
   608  0010EE  202B               	addwfc	_i+1,w,c
   609  0010F0  6EDA               	movwf	fsr2h,c
   610  0010F2  50DF               	movf	indf2,w,c
   611  0010F4  6E38               	movwf	_outchar,c
   612                           
   613                           ;Test.c: 77: lcd_write_data(outchar);
   614  0010F6  5038               	movf	_outchar,w,c
   615  0010F8  EC29  F009         	call	_lcd_write_data
   616                           
   617                           ;Test.c: 79: loop = 1;
   618  0010FC  0E00               	movlw	0
   619  0010FE  6E3B               	movwf	_loop+1,c
   620  001100  0E01               	movlw	1
   621  001102  6E3A               	movwf	_loop,c
   622  001104  4A2A               	infsnz	_i,f,c
   623  001106  2A2B               	incf	_i+1,f,c
   624  001108  D7E6               	goto	l1586
   625  00110A                     l1600:
   626                           
   627                           ;Test.c: 80: }
   628                           ;Test.c: 81: lcd_write_cmd(0x01);
   629  00110A  0E01               	movlw	1
   630  00110C  EC28  F00A         	call	_lcd_write_cmd
   631  001110                     l1602:
   632                           
   633                           ;Test.c: 83: }
   634                           ;Test.c: 84: if(wrtopt == 'C' || comopt == 'C'){
   635  001110  0E43               	movlw	67
   636  001112  1839               	xorwf	_wrtopt,w,c
   637  001114  B4D8               	btfsc	status,2,c
   638  001116  D004               	goto	l1606
   639  001118  0E43               	movlw	67
   640  00111A  1836               	xorwf	_comopt,w,c
   641  00111C  A4D8               	btfss	status,2,c
   642  00111E  D008               	goto	l1608
   643  001120                     l1606:
   644                           
   645                           ;Test.c: 85: loop1 = 1;
   646  001120  0E00               	movlw	0
   647  001122  6E3D               	movwf	_loop1+1,c
   648  001124  0E01               	movlw	1
   649  001126  6E3C               	movwf	_loop1,c
   650                           
   651                           ;Test.c: 86: loop = 0;
   652  001128  0E00               	movlw	0
   653  00112A  6E3B               	movwf	_loop+1,c
   654  00112C  0E00               	movlw	0
   655  00112E  6E3A               	movwf	_loop,c
   656  001130                     l1608:
   657  001130  043A               	decf	_loop,w,c
   658  001132  103B               	iorwf	_loop+1,w,c
   659  001134  A4D8               	btfss	status,2,c
   660  001136  D081               	goto	l1674
   661  001138  D77D               	goto	l1542
   662  00113A                     l1610:
   663                           
   664                           ;Test.c: 94: lcd_write_cmd(0x80);
   665  00113A  0E80               	movlw	128
   666  00113C  EC28  F00A         	call	_lcd_write_cmd
   667  001140  D004               	goto	l1614
   668  001142                     l1612:
   669  001142  5036               	movf	_comopt,w,c
   670                           
   671                           ; Switch size 1, requested type "space"
   672                           ; Number of cases is 1, Range of values is 70 to 70
   673                           ; switch strategies available:
   674                           ; Name         Instructions Cycles
   675                           ; simple_byte            4     3 (average)
   676                           ;	Chosen strategy is simple_byte
   677  001144  0A46               	xorlw	70	; case 70
   678  001146  B4D8               	btfsc	status,2,c
   679  001148  D7F8               	goto	l1610
   680  00114A                     l1614:
   681                           
   682                           ;Test.c: 95: for (i = 0; i < 20; i++)
   683  00114A  0E00               	movlw	0
   684  00114C  6E2B               	movwf	_i+1,c
   685  00114E  0E00               	movlw	0
   686  001150  6E2A               	movwf	_i,c
   687  001152  BE2B               	btfsc	_i+1,7,c
   688  001154  D00A               	goto	l1620
   689  001156  502B               	movf	_i+1,w,c
   690  001158  E106               	bnz	u950
   691  00115A  0E14               	movlw	20
   692  00115C  5C2A               	subwf	_i,w,c
   693  00115E  B0D8               	btfsc	status,0,c
   694  001160  EF0B  F008         	goto	start
   695  001164  D002               	goto	l1620
   696  001166                     u950:
   697  001166  EF0B  F008         	goto	start
   698  00116A                     l1620:
   699                           
   700                           ;Test.c: 96: {
   701                           ;Test.c: 97: outchar = Message4[i];
   702  00116A  0E9F               	movlw	low _Message4
   703  00116C  242A               	addwf	_i,w,c
   704  00116E  6ED9               	movwf	fsr2l,c
   705  001170  0E00               	movlw	high _Message4
   706  001172  202B               	addwfc	_i+1,w,c
   707  001174  6EDA               	movwf	fsr2h,c
   708  001176  50DF               	movf	indf2,w,c
   709  001178  6E38               	movwf	_outchar,c
   710                           
   711                           ;Test.c: 98: lcd_write_data(outchar);
   712  00117A  5038               	movf	_outchar,w,c
   713  00117C  EC29  F009         	call	_lcd_write_data
   714                           
   715                           ;Test.c: 99: if (i == 17){
   716  001180  0E11               	movlw	17
   717  001182  182A               	xorwf	_i,w,c
   718  001184  102B               	iorwf	_i+1,w,c
   719  001186  A4D8               	btfss	status,2,c
   720  001188  D003               	goto	l1628
   721                           
   722                           ;Test.c: 100: lcd_write_data(comopt);
   723  00118A  5036               	movf	_comopt,w,c
   724  00118C  EC29  F009         	call	_lcd_write_data
   725  001190                     l1628:
   726  001190  4A2A               	infsnz	_i,f,c
   727  001192  2A2B               	incf	_i+1,f,c
   728  001194  BE2B               	btfsc	_i+1,7,c
   729  001196  D7E9               	goto	l1620
   730  001198  502B               	movf	_i+1,w,c
   731  00119A  E101               	bnz	u970
   732  00119C  D7DE               	goto	L1
   733  00119E                     u970:
   734                           
   735                           ;Test.c: 101: }
   736                           ;Test.c: 102: }
   737                           ;Test.c: 103: break;
   738  00119E  EF0B  F008         	goto	start
   739  0011A2                     l1632:
   740                           
   741                           ;Test.c: 105: lcd_write_cmd(0x80);
   742  0011A2  0E80               	movlw	128
   743  0011A4  EC28  F00A         	call	_lcd_write_cmd
   744                           
   745                           ;Test.c: 106: for (i = 0; i < 20; i++)
   746  0011A8  0E00               	movlw	0
   747  0011AA  6E2B               	movwf	_i+1,c
   748  0011AC  0E00               	movlw	0
   749  0011AE  6E2A               	movwf	_i,c
   750  0011B0                     l1636:
   751  0011B0  BE2B               	btfsc	_i+1,7,c
   752  0011B2  D007               	goto	l1640
   753  0011B4  502B               	movf	_i+1,w,c
   754  0011B6  E14B               	bnz	l96
   755  0011B8  0E14               	movlw	20
   756  0011BA  5C2A               	subwf	_i,w,c
   757  0011BC  B0D8               	btfsc	status,0,c
   758  0011BE  EF0B  F008         	goto	start
   759  0011C2                     l1640:
   760                           
   761                           ;Test.c: 107: {
   762                           ;Test.c: 108: outchar = Message4[i];
   763  0011C2  0E9F               	movlw	low _Message4
   764  0011C4  242A               	addwf	_i,w,c
   765  0011C6  6ED9               	movwf	fsr2l,c
   766  0011C8  0E00               	movlw	high _Message4
   767  0011CA  202B               	addwfc	_i+1,w,c
   768  0011CC  6EDA               	movwf	fsr2h,c
   769  0011CE  50DF               	movf	indf2,w,c
   770  0011D0  6E38               	movwf	_outchar,c
   771                           
   772                           ;Test.c: 109: lcd_write_data(outchar);
   773  0011D2  5038               	movf	_outchar,w,c
   774  0011D4  EC29  F009         	call	_lcd_write_data
   775                           
   776                           ;Test.c: 110: if (i == 17){
   777  0011D8  0E11               	movlw	17
   778  0011DA  182A               	xorwf	_i,w,c
   779  0011DC  102B               	iorwf	_i+1,w,c
   780  0011DE  A4D8               	btfss	status,2,c
   781  0011E0  D003               	goto	l1648
   782                           
   783                           ;Test.c: 111: lcd_write_data(comopt);
   784  0011E2  5036               	movf	_comopt,w,c
   785  0011E4  EC29  F009         	call	_lcd_write_data
   786  0011E8                     l1648:
   787  0011E8  4A2A               	infsnz	_i,f,c
   788  0011EA  2A2B               	incf	_i+1,f,c
   789  0011EC  D7E1               	goto	l1636
   790  0011EE                     l1652:
   791                           
   792                           ;Test.c: 116: lcd_write_cmd(0x80);
   793  0011EE  0E80               	movlw	128
   794  0011F0  EC28  F00A         	call	_lcd_write_cmd
   795                           
   796                           ;Test.c: 117: for (i = 0; i < 20; i++)
   797  0011F4  0E00               	movlw	0
   798  0011F6  6E2B               	movwf	_i+1,c
   799  0011F8  0E00               	movlw	0
   800  0011FA  6E2A               	movwf	_i,c
   801  0011FC                     l1656:
   802  0011FC  BE2B               	btfsc	_i+1,7,c
   803  0011FE  D007               	goto	l1660
   804  001200  502B               	movf	_i+1,w,c
   805  001202  E125               	bnz	l96
   806  001204  0E14               	movlw	20
   807  001206  5C2A               	subwf	_i,w,c
   808  001208  B0D8               	btfsc	status,0,c
   809  00120A  EF0B  F008         	goto	start
   810  00120E                     l1660:
   811                           
   812                           ;Test.c: 118: {
   813                           ;Test.c: 119: outchar = Message4[i];
   814  00120E  0E9F               	movlw	low _Message4
   815  001210  242A               	addwf	_i,w,c
   816  001212  6ED9               	movwf	fsr2l,c
   817  001214  0E00               	movlw	high _Message4
   818  001216  202B               	addwfc	_i+1,w,c
   819  001218  6EDA               	movwf	fsr2h,c
   820  00121A  50DF               	movf	indf2,w,c
   821  00121C  6E38               	movwf	_outchar,c
   822                           
   823                           ;Test.c: 120: lcd_write_data(outchar);
   824  00121E  5038               	movf	_outchar,w,c
   825  001220  EC29  F009         	call	_lcd_write_data
   826                           
   827                           ;Test.c: 121: if (i == 17){
   828  001224  0E11               	movlw	17
   829  001226  182A               	xorwf	_i,w,c
   830  001228  102B               	iorwf	_i+1,w,c
   831  00122A  A4D8               	btfss	status,2,c
   832  00122C  D003               	goto	l1668
   833                           
   834                           ;Test.c: 122: lcd_write_data(comopt);
   835  00122E  5036               	movf	_comopt,w,c
   836  001230  EC29  F009         	call	_lcd_write_data
   837  001234                     l1668:
   838  001234  4A2A               	infsnz	_i,f,c
   839  001236  2A2B               	incf	_i+1,f,c
   840  001238  D7E1               	goto	l1656
   841  00123A                     l1674:
   842  00123A  5039               	movf	_wrtopt,w,c
   843                           
   844                           ; Switch size 1, requested type "space"
   845                           ; Number of cases is 3, Range of values is 65 to 69
   846                           ; switch strategies available:
   847                           ; Name         Instructions Cycles
   848                           ; simple_byte           10     6 (average)
   849                           ;	Chosen strategy is simple_byte
   850  00123C  0A41               	xorlw	65	; case 65
   851  00123E  B4D8               	btfsc	status,2,c
   852  001240  D780               	goto	l1612
   853  001242  0A05               	xorlw	5	; case 68
   854  001244  B4D8               	btfsc	status,2,c
   855  001246  D7D3               	goto	l1652
   856  001248  0A01               	xorlw	1	; case 69
   857  00124A  B4D8               	btfsc	status,2,c
   858  00124C  D7AA               	goto	l1632
   859  00124E                     l96:
   860  00124E  EF0B  F008         	goto	start
   861  001252                     __end_of_main:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           postdec1	equ	0xFE5
   870                           fsr1l	equ	0xFE1
   871                           indf2	equ	0xFDF
   872                           fsr2h	equ	0xFDA
   873                           fsr2l	equ	0xFD9
   874                           status	equ	0xFD8
   875                           
   876 ;; *************** function _lcd_write_data *****************
   877 ;; Defined at:
   878 ;;		line 43 in file "lcd_utilities.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  data            1    wreg     unsigned char 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  data            1   35[COMRAM] unsigned char 
   883 ;;  temp1           1   36[COMRAM] unsigned char 
   884 ;; Return value:  Size  Location     Type
   885 ;;		None               void
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   893 ;;      Params:         0       0       0       0       0       0       0       0       0
   894 ;;      Locals:         2       0       0       0       0       0       0       0       0
   895 ;;      Temps:          1       0       0       0       0       0       0       0       0
   896 ;;      Totals:         3       0       0       0       0       0       0       0       0
   897 ;;Total ram usage:        3 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    5
   900 ;; This function calls:
   901 ;;		_lcd_strobe
   902 ;; This function is called by:
   903 ;;		_main
   904 ;;		_TimeDisplay
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text1
   909  001252                     __ptext1:
   910                           	opt stack 0
   911  001252                     _lcd_write_data:
   912                           	opt stack 25
   913                           
   914                           ;incstack = 0
   915                           ;lcd_write_data@data stored from wreg
   916  001252  6E24               	movwf	lcd_write_data@data,c
   917                           
   918                           ;lcd_utilities.c: 45: char temp1;
   919                           ;lcd_utilities.c: 47: PORTDbits.RD6 = 1;
   920  001254  8C83               	bsf	3971,6,c	;volatile
   921                           
   922                           ;lcd_utilities.c: 48: _delay((unsigned long)((4)*(48000000/4000.0)));
   923  001256  0E3F               	movlw	63
   924  001258  6E23               	movwf	??_lcd_write_data& (0+255),c
   925  00125A  0E55               	movlw	85
   926  00125C                     u1047:
   927  00125C  2EE8               	decfsz	wreg,f,c
   928  00125E  D7FE               	goto	u1047
   929  001260  2E23               	decfsz	??_lcd_write_data& (0+255),f,c
   930  001262  D7FC               	goto	u1047
   931  001264  F000               	nop	
   932                           
   933                           ;lcd_utilities.c: 50: temp1 = data;
   934  001266  C024  F025         	movff	lcd_write_data@data,lcd_write_data@temp1
   935                           
   936                           ;lcd_utilities.c: 51: temp1 = temp1 >> 4;
   937  00126A  3825               	swapf	lcd_write_data@temp1,w,c
   938  00126C  0B0F               	andlw	15
   939  00126E  6E25               	movwf	lcd_write_data@temp1,c
   940                           
   941                           ;lcd_utilities.c: 52: PORTD = temp1 & 0x0F;
   942  001270  5025               	movf	lcd_write_data@temp1,w,c
   943  001272  0B0F               	andlw	15
   944  001274  6E83               	movwf	3971,c	;volatile
   945                           
   946                           ;lcd_utilities.c: 53: _delay((unsigned long)((8)*(48000000/4000.0)));
   947  001276  0E7D               	movlw	125
   948  001278  6E23               	movwf	??_lcd_write_data& (0+255),c
   949  00127A  0EAC               	movlw	172
   950  00127C                     u1057:
   951  00127C  2EE8               	decfsz	wreg,f,c
   952  00127E  D7FE               	goto	u1057
   953  001280  2E23               	decfsz	??_lcd_write_data& (0+255),f,c
   954  001282  D7FC               	goto	u1057
   955                           
   956                           ;lcd_utilities.c: 54: PORTDbits.RD6 = 1;
   957  001284  8C83               	bsf	3971,6,c	;volatile
   958                           
   959                           ;lcd_utilities.c: 55: _delay((unsigned long)((8)*(48000000/4000.0)));
   960  001286  0E7D               	movlw	125
   961  001288  6E23               	movwf	??_lcd_write_data& (0+255),c
   962  00128A  0EAC               	movlw	172
   963  00128C                     u1067:
   964  00128C  2EE8               	decfsz	wreg,f,c
   965  00128E  D7FE               	goto	u1067
   966  001290  2E23               	decfsz	??_lcd_write_data& (0+255),f,c
   967  001292  D7FC               	goto	u1067
   968                           
   969                           ;lcd_utilities.c: 57: lcd_strobe();
   970  001294  EC2B  F00B         	call	_lcd_strobe	;wreg free
   971                           
   972                           ;lcd_utilities.c: 58: _delay((unsigned long)((8)*(48000000/4000.0)));
   973  001298  0E7D               	movlw	125
   974  00129A  6E23               	movwf	??_lcd_write_data& (0+255),c
   975  00129C  0EAC               	movlw	172
   976  00129E                     u1077:
   977  00129E  2EE8               	decfsz	wreg,f,c
   978  0012A0  D7FE               	goto	u1077
   979  0012A2  2E23               	decfsz	??_lcd_write_data& (0+255),f,c
   980  0012A4  D7FC               	goto	u1077
   981                           
   982                           ;lcd_utilities.c: 60: temp1 = data;
   983  0012A6  C024  F025         	movff	lcd_write_data@data,lcd_write_data@temp1
   984                           
   985                           ;lcd_utilities.c: 61: PORTD = temp1 & 0x0F;
   986  0012AA  5025               	movf	lcd_write_data@temp1,w,c
   987  0012AC  0B0F               	andlw	15
   988  0012AE  6E83               	movwf	3971,c	;volatile
   989                           
   990                           ;lcd_utilities.c: 62: _delay((unsigned long)((8)*(48000000/4000.0)));
   991  0012B0  0E7D               	movlw	125
   992  0012B2  6E23               	movwf	??_lcd_write_data& (0+255),c
   993  0012B4  0EAC               	movlw	172
   994  0012B6                     u1087:
   995  0012B6  2EE8               	decfsz	wreg,f,c
   996  0012B8  D7FE               	goto	u1087
   997  0012BA  2E23               	decfsz	??_lcd_write_data& (0+255),f,c
   998  0012BC  D7FC               	goto	u1087
   999                           
  1000                           ;lcd_utilities.c: 63: PORTDbits.RD6 = 1;
  1001  0012BE  8C83               	bsf	3971,6,c	;volatile
  1002                           
  1003                           ;lcd_utilities.c: 64: _delay((unsigned long)((10)*(48000000/4000.0)));
  1004  0012C0  0E9C               	movlw	156
  1005  0012C2  6E23               	movwf	??_lcd_write_data& (0+255),c
  1006  0012C4  0ED7               	movlw	215
  1007  0012C6                     u1097:
  1008  0012C6  2EE8               	decfsz	wreg,f,c
  1009  0012C8  D7FE               	goto	u1097
  1010  0012CA  2E23               	decfsz	??_lcd_write_data& (0+255),f,c
  1011  0012CC  D7FC               	goto	u1097
  1012  0012CE  F000               	nop	
  1013                           
  1014                           ;lcd_utilities.c: 66: lcd_strobe();
  1015  0012D0  EC2B  F00B         	call	_lcd_strobe	;wreg free
  1016                           
  1017                           ;lcd_utilities.c: 67: _delay((unsigned long)((10)*(48000000/4000.0)));
  1018  0012D4  0E9C               	movlw	156
  1019  0012D6  6E23               	movwf	??_lcd_write_data& (0+255),c
  1020  0012D8  0ED7               	movlw	215
  1021  0012DA                     u1107:
  1022  0012DA  2EE8               	decfsz	wreg,f,c
  1023  0012DC  D7FE               	goto	u1107
  1024  0012DE  2E23               	decfsz	??_lcd_write_data& (0+255),f,c
  1025  0012E0  D7FC               	goto	u1107
  1026  0012E2  F000               	nop	
  1027  0012E4  0012               	return		;funcret
  1028  0012E6                     __end_of_lcd_write_data:
  1029                           	opt stack 0
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           postdec1	equ	0xFE5
  1037                           fsr1l	equ	0xFE1
  1038                           indf2	equ	0xFDF
  1039                           fsr2h	equ	0xFDA
  1040                           fsr2l	equ	0xFD9
  1041                           status	equ	0xFD8
  1042                           
  1043 ;; *************** function _lcd_init *****************
  1044 ;; Defined at:
  1045 ;;		line 83 in file "lcd_utilities.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  i               2    1[BANK0 ] int 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;		None               void
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0
  1060 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1061 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1062 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1063 ;;Total ram usage:        3 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    6
  1066 ;; This function calls:
  1067 ;;		_lcd_write_cmd
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;;		_TimeDisplay
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text2
  1075  0012E6                     __ptext2:
  1076                           	opt stack 0
  1077  0012E6                     _lcd_init:
  1078                           	opt stack 24
  1079                           
  1080                           ;lcd_utilities.c: 85: int i;
  1081                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1082                           
  1083                           ;incstack = 0
  1084  0012E6  0E00               	movlw	0
  1085  0012E8  6E95               	movwf	3989,c	;volatile
  1086                           
  1087                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1088  0012EA  0E00               	movlw	0
  1089  0012EC  6E83               	movwf	3971,c	;volatile
  1090                           
  1091                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1092  0012EE  9883               	bcf	3971,4,c	;volatile
  1093                           
  1094                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1095  0012F0  9C83               	bcf	3971,6,c	;volatile
  1096                           
  1097                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1098  0012F2  9A83               	bcf	3971,5,c	;volatile
  1099                           
  1100                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1101  0012F4  0E00               	movlw	0
  1102  0012F6  0100               	movlb	0	; () banked
  1103  0012F8  6FB6               	movwf	(lcd_init@i+1)& (0+255),b
  1104  0012FA  0E00               	movlw	0
  1105  0012FC  6FB5               	movwf	lcd_init@i& (0+255),b
  1106  0012FE                     l1452:
  1107                           
  1108                           ; BSR set to: 0
  1109  0012FE  0100               	movlb	0	; () banked
  1110  001300  BFB6               	btfsc	(lcd_init@i+1)& (0+255),7,b
  1111  001302  D008               	goto	l1456
  1112  001304  0100               	movlb	0	; () banked
  1113  001306  51B6               	movf	(lcd_init@i+1)& (0+255),w,b
  1114  001308  E112               	bnz	l1460
  1115  00130A  0E64               	movlw	100
  1116  00130C  0100               	movlb	0	; () banked
  1117  00130E  5DB5               	subwf	lcd_init@i& (0+255),w,b
  1118  001310  B0D8               	btfsc	status,0,c
  1119  001312  D00D               	goto	l1460
  1120  001314                     l1456:
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1124  001314  0E9C               	movlw	156
  1125  001316  0100               	movlb	0	; () banked
  1126  001318  6FB4               	movwf	??_lcd_init& (0+255),b
  1127  00131A  0ED7               	movlw	215
  1128  00131C                     u1117:
  1129  00131C  2EE8               	decfsz	wreg,f,c
  1130  00131E  D7FE               	goto	u1117
  1131  001320  2FB4               	decfsz	??_lcd_init& (0+255),f,b
  1132  001322  D7FC               	goto	u1117
  1133  001324  F000               	nop	
  1134  001326  0100               	movlb	0	; () banked
  1135  001328  4BB5               	infsnz	lcd_init@i& (0+255),f,b
  1136  00132A  2BB6               	incf	(lcd_init@i+1)& (0+255),f,b
  1137  00132C  D7E8               	goto	l1452
  1138  00132E                     l1460:
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1142  00132E  0E33               	movlw	51
  1143  001330  EC28  F00A         	call	_lcd_write_cmd
  1144                           
  1145                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1146  001334  0E32               	movlw	50
  1147  001336  EC28  F00A         	call	_lcd_write_cmd
  1148                           
  1149                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1150  00133A  0E28               	movlw	40
  1151  00133C  EC28  F00A         	call	_lcd_write_cmd
  1152                           
  1153                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1154  001340  0E0E               	movlw	14
  1155  001342  EC28  F00A         	call	_lcd_write_cmd
  1156                           
  1157                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1158  001346  0E06               	movlw	6
  1159  001348  EC28  F00A         	call	_lcd_write_cmd
  1160                           
  1161                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1162  00134C  0E01               	movlw	1
  1163  00134E  EC28  F00A         	call	_lcd_write_cmd
  1164                           
  1165                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1166  001352  0E9C               	movlw	156
  1167  001354  0100               	movlb	0	; () banked
  1168  001356  6FB4               	movwf	??_lcd_init& (0+255),b
  1169  001358  0ED7               	movlw	215
  1170  00135A                     u1127:
  1171  00135A  2EE8               	decfsz	wreg,f,c
  1172  00135C  D7FE               	goto	u1127
  1173  00135E  2FB4               	decfsz	??_lcd_init& (0+255),f,b
  1174  001360  D7FC               	goto	u1127
  1175  001362  F000               	nop	
  1176  001364  0012               	return		;funcret
  1177  001366                     __end_of_lcd_init:
  1178                           	opt stack 0
  1179                           tblptru	equ	0xFF8
  1180                           tblptrh	equ	0xFF7
  1181                           tblptrl	equ	0xFF6
  1182                           tablat	equ	0xFF5
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           postdec1	equ	0xFE5
  1186                           fsr1l	equ	0xFE1
  1187                           indf2	equ	0xFDF
  1188                           fsr2h	equ	0xFDA
  1189                           fsr2l	equ	0xFD9
  1190                           status	equ	0xFD8
  1191                           
  1192 ;; *************** function _lcd_write_cmd *****************
  1193 ;; Defined at:
  1194 ;;		line 18 in file "lcd_utilities.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  cmd             1    wreg     unsigned char 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  cmd             1   35[COMRAM] unsigned char 
  1199 ;;  temp2           1   36[COMRAM] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;		None               void
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0
  1210 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1211 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1212 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1213 ;;Total ram usage:        3 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    5
  1216 ;; This function calls:
  1217 ;;		_lcd_strobe
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;;		_lcd_init
  1221 ;;		_TimeDisplay
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text3
  1226  001450                     __ptext3:
  1227                           	opt stack 0
  1228  001450                     _lcd_write_cmd:
  1229                           	opt stack 25
  1230                           
  1231                           ;incstack = 0
  1232                           ;lcd_write_cmd@cmd stored from wreg
  1233  001450  6E24               	movwf	lcd_write_cmd@cmd,c
  1234                           
  1235                           ;lcd_utilities.c: 20: unsigned char temp2;
  1236                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  1237  001452  9C83               	bcf	3971,6,c	;volatile
  1238                           
  1239                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  1240  001454  0E3F               	movlw	63
  1241  001456  6E23               	movwf	??_lcd_write_cmd& (0+255),c
  1242  001458  0E55               	movlw	85
  1243  00145A                     u1137:
  1244  00145A  2EE8               	decfsz	wreg,f,c
  1245  00145C  D7FE               	goto	u1137
  1246  00145E  2E23               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1247  001460  D7FC               	goto	u1137
  1248  001462  F000               	nop	
  1249                           
  1250                           ;lcd_utilities.c: 23: temp2 = cmd;
  1251  001464  C024  F025         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  1252                           
  1253                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  1254  001468  3825               	swapf	lcd_write_cmd@temp2,w,c
  1255  00146A  0B0F               	andlw	15
  1256  00146C  6E25               	movwf	lcd_write_cmd@temp2,c
  1257                           
  1258                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  1259  00146E  5025               	movf	lcd_write_cmd@temp2,w,c
  1260  001470  0B0F               	andlw	15
  1261  001472  6E83               	movwf	3971,c	;volatile
  1262                           
  1263                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  1264  001474  0E7D               	movlw	125
  1265  001476  6E23               	movwf	??_lcd_write_cmd& (0+255),c
  1266  001478  0EAC               	movlw	172
  1267  00147A                     u1147:
  1268  00147A  2EE8               	decfsz	wreg,f,c
  1269  00147C  D7FE               	goto	u1147
  1270  00147E  2E23               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1271  001480  D7FC               	goto	u1147
  1272                           
  1273                           ;lcd_utilities.c: 28: lcd_strobe();
  1274  001482  EC2B  F00B         	call	_lcd_strobe	;wreg free
  1275                           
  1276                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  1277  001486  0E7D               	movlw	125
  1278  001488  6E23               	movwf	??_lcd_write_cmd& (0+255),c
  1279  00148A  0EAC               	movlw	172
  1280  00148C                     u1157:
  1281  00148C  2EE8               	decfsz	wreg,f,c
  1282  00148E  D7FE               	goto	u1157
  1283  001490  2E23               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1284  001492  D7FC               	goto	u1157
  1285                           
  1286                           ;lcd_utilities.c: 32: temp2 = cmd;
  1287  001494  C024  F025         	movff	lcd_write_cmd@cmd,lcd_write_cmd@temp2
  1288                           
  1289                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  1290  001498  5025               	movf	lcd_write_cmd@temp2,w,c
  1291  00149A  0B0F               	andlw	15
  1292  00149C  6E83               	movwf	3971,c	;volatile
  1293                           
  1294                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  1295  00149E  0E7D               	movlw	125
  1296  0014A0  6E23               	movwf	??_lcd_write_cmd& (0+255),c
  1297  0014A2  0EAC               	movlw	172
  1298  0014A4                     u1167:
  1299  0014A4  2EE8               	decfsz	wreg,f,c
  1300  0014A6  D7FE               	goto	u1167
  1301  0014A8  2E23               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1302  0014AA  D7FC               	goto	u1167
  1303                           
  1304                           ;lcd_utilities.c: 36: lcd_strobe();
  1305  0014AC  EC2B  F00B         	call	_lcd_strobe	;wreg free
  1306                           
  1307                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  1308  0014B0  0E7D               	movlw	125
  1309  0014B2  6E23               	movwf	??_lcd_write_cmd& (0+255),c
  1310  0014B4  0EAC               	movlw	172
  1311  0014B6                     u1177:
  1312  0014B6  2EE8               	decfsz	wreg,f,c
  1313  0014B8  D7FE               	goto	u1177
  1314  0014BA  2E23               	decfsz	??_lcd_write_cmd& (0+255),f,c
  1315  0014BC  D7FC               	goto	u1177
  1316  0014BE  0012               	return		;funcret
  1317  0014C0                     __end_of_lcd_write_cmd:
  1318                           	opt stack 0
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           postinc0	equ	0xFEE
  1324                           wreg	equ	0xFE8
  1325                           postdec1	equ	0xFE5
  1326                           fsr1l	equ	0xFE1
  1327                           indf2	equ	0xFDF
  1328                           fsr2h	equ	0xFDA
  1329                           fsr2l	equ	0xFD9
  1330                           status	equ	0xFD8
  1331                           
  1332 ;; *************** function _lcd_strobe *****************
  1333 ;; Defined at:
  1334 ;;		line 73 in file "lcd_utilities.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1350 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1351 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        1 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    4
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_lcd_write_cmd
  1359 ;;		_lcd_write_data
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text4
  1364  001656                     __ptext4:
  1365                           	opt stack 0
  1366  001656                     _lcd_strobe:
  1367                           	opt stack 25
  1368                           
  1369                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  1370                           
  1371                           ;incstack = 0
  1372  001656  8883               	bsf	3971,4,c	;volatile
  1373                           
  1374                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  1375  001658  0E7D               	movlw	125
  1376  00165A  6E22               	movwf	??_lcd_strobe& (0+255),c
  1377  00165C  0EAC               	movlw	172
  1378  00165E                     u1187:
  1379  00165E  2EE8               	decfsz	wreg,f,c
  1380  001660  D7FE               	goto	u1187
  1381  001662  2E22               	decfsz	??_lcd_strobe& (0+255),f,c
  1382  001664  D7FC               	goto	u1187
  1383                           
  1384                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  1385  001666  9883               	bcf	3971,4,c	;volatile
  1386                           
  1387                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  1388  001668  0E7D               	movlw	125
  1389  00166A  6E22               	movwf	??_lcd_strobe& (0+255),c
  1390  00166C  0EAC               	movlw	172
  1391  00166E                     u1197:
  1392  00166E  2EE8               	decfsz	wreg,f,c
  1393  001670  D7FE               	goto	u1197
  1394  001672  2E22               	decfsz	??_lcd_strobe& (0+255),f,c
  1395  001674  D7FC               	goto	u1197
  1396  001676  0012               	return		;funcret
  1397  001678                     __end_of_lcd_strobe:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           postdec1	equ	0xFE5
  1406                           fsr1l	equ	0xFE1
  1407                           indf2	equ	0xFDF
  1408                           fsr2h	equ	0xFDA
  1409                           fsr2l	equ	0xFD9
  1410                           status	equ	0xFD8
  1411                           
  1412 ;; *************** function _getkey *****************
  1413 ;; Defined at:
  1414 ;;		line 17 in file "keypad_utilities.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  lookup         18    0[BANK0 ] const unsigned char [18]
  1419 ;;  keycode         1   18[BANK0 ] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      unsigned char 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0
  1430 ;;      Locals:         0      19       0       0       0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1432 ;;      Totals:         0      19       0       0       0       0       0       0       0
  1433 ;;Total ram usage:       19 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    4
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text5
  1444  0015DE                     __ptext5:
  1445                           	opt stack 0
  1446  0015DE                     _getkey:
  1447                           	opt stack 26
  1448                           
  1449                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  1450                           
  1451                           ;incstack = 0
  1452  0015DE  0E1B               	movlw	low getkey@F4444
  1453  0015E0  6EF6               	movwf	tblptrl,c
  1454  0015E2                     	if	1	;There is more than 1 active tblptr byte
  1455  0015E2  0E10               	movlw	high getkey@F4444
  1456  0015E4  6EF7               	movwf	tblptrh,c
  1457  0015E6                     	endif
  1458  0015E6                     	if	0	;There are less than 3 active tblptr bytes
  1459  0015E6                     	endif
  1460  0015E6  EE20  F0B4         	lfsr	2,getkey@lookup
  1461  0015EA  0E11               	movlw	17
  1462  0015EC                     u740:
  1463  0015EC  0009               	tblrd		*+
  1464  0015EE  CFF5 FFDE          	movff	tablat,postinc2
  1465  0015F2  06E8               	decf	wreg,f,c
  1466  0015F4  E2FB               	bc	u740
  1467  0015F6                     l128:
  1468  0015F6  AA81               	btfss	3969,5,c	;volatile
  1469  0015F8  D7FE               	goto	l128
  1470                           
  1471                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  1472  0015FA  5081               	movf	3969,w,c	;volatile
  1473  0015FC  0B0F               	andlw	15
  1474  0015FE  0100               	movlb	0	; () banked
  1475  001600  6FC6               	movwf	getkey@keycode& (0+255),b
  1476  001602                     l131:
  1477  001602  BA81               	btfsc	3969,5,c	;volatile
  1478  001604  D7FE               	goto	l131
  1479                           
  1480                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  1481  001606  0100               	movlb	0	; () banked
  1482  001608  51C6               	movf	getkey@keycode& (0+255),w,b
  1483  00160A  0D01               	mullw	1
  1484  00160C  0EB4               	movlw	low getkey@lookup
  1485  00160E  24F3               	addwf	prodl,w,c
  1486  001610  6ED9               	movwf	fsr2l,c
  1487  001612  0E00               	movlw	high getkey@lookup
  1488  001614  20F4               	addwfc	prodh,w,c
  1489  001616  6EDA               	movwf	fsr2h,c
  1490  001618  50DF               	movf	indf2,w,c
  1491  00161A  0012               	return	
  1492  00161C                     __end_of_getkey:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           postdec1	equ	0xFE5
  1503                           fsr1l	equ	0xFE1
  1504                           indf2	equ	0xFDF
  1505                           postinc2	equ	0xFDE
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _DisInt *****************
  1511 ;; Defined at:
  1512 ;;		line 26 in file "Test.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;		None               void
  1519 ;; Registers used:
  1520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1528 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1529 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1530 ;;Total ram usage:       14 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    3
  1533 ;; This function calls:
  1534 ;;		i2_getkey
  1535 ;;		i2_lcd_init
  1536 ;; This function is called by:
  1537 ;;		Interrupt level 2
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	intcode
  1542  001008                     __pintcode:
  1543                           	opt stack 0
  1544  001008                     _DisInt:
  1545                           	opt stack 24
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;incstack = 0
  1549  001008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1550  00100A  CFFA F014          	movff	pclath,??_DisInt
  1551  00100E  CFFB F015          	movff	pclatu,??_DisInt+1
  1552  001012  EDB3  F009         	call	int_func,f	;refresh shadow registers
  1553                           pclatu	equ	0xFFB
  1554                           pclath	equ	0xFFA
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodh	equ	0xFF4
  1560                           prodl	equ	0xFF3
  1561                           postinc0	equ	0xFEE
  1562                           wreg	equ	0xFE8
  1563                           postdec1	equ	0xFE5
  1564                           fsr1l	equ	0xFE1
  1565                           indf2	equ	0xFDF
  1566                           postinc2	equ	0xFDE
  1567                           fsr2h	equ	0xFDA
  1568                           fsr2l	equ	0xFD9
  1569                           status	equ	0xFD8
  1570                           
  1571                           	psect	intcode_body
  1572  001366                     __pintcode_body:
  1573                           	opt stack 24
  1574  001366                     int_func:
  1575                           	opt stack 24
  1576  001366  0006               	pop		; remove dummy address from shadow register refresh
  1577  001368  CFE9 F016          	movff	fsr0l,??_DisInt+2
  1578  00136C  CFEA F017          	movff	fsr0h,??_DisInt+3
  1579  001370  CFE1 F018          	movff	fsr1l,??_DisInt+4
  1580  001374  CFE2 F019          	movff	fsr1h,??_DisInt+5
  1581  001378  CFD9 F01A          	movff	fsr2l,??_DisInt+6
  1582  00137C  CFDA F01B          	movff	fsr2h,??_DisInt+7
  1583  001380  CFF3 F01C          	movff	prodl,??_DisInt+8
  1584  001384  CFF4 F01D          	movff	prodh,??_DisInt+9
  1585  001388  CFF6 F01E          	movff	tblptrl,??_DisInt+10
  1586  00138C  CFF7 F01F          	movff	tblptrh,??_DisInt+11
  1587  001390  CFF8 F020          	movff	tblptru,??_DisInt+12
  1588  001394  CFF5 F021          	movff	tablat,??_DisInt+13
  1589                           
  1590                           ;Test.c: 27: lcd_init();
  1591  001398  ECEF  F009         	call	i2_lcd_init	;wreg free
  1592                           
  1593                           ;Test.c: 28: wrtopt=getkey();
  1594  00139C  EC0E  F00B         	call	i2_getkey	;wreg free
  1595  0013A0  6E39               	movwf	_wrtopt,c
  1596                           
  1597                           ;Test.c: 32: else{
  1598                           
  1599                           ;Test.c: 31: }
  1600  0013A2  C021  FFF5         	movff	??_DisInt+13,tablat
  1601  0013A6  C020  FFF8         	movff	??_DisInt+12,tblptru
  1602  0013AA  C01F  FFF7         	movff	??_DisInt+11,tblptrh
  1603  0013AE  C01E  FFF6         	movff	??_DisInt+10,tblptrl
  1604  0013B2  C01D  FFF4         	movff	??_DisInt+9,prodh
  1605  0013B6  C01C  FFF3         	movff	??_DisInt+8,prodl
  1606  0013BA  C01B  FFDA         	movff	??_DisInt+7,fsr2h
  1607  0013BE  C01A  FFD9         	movff	??_DisInt+6,fsr2l
  1608  0013C2  C019  FFE2         	movff	??_DisInt+5,fsr1h
  1609  0013C6  C018  FFE1         	movff	??_DisInt+4,fsr1l
  1610  0013CA  C017  FFEA         	movff	??_DisInt+3,fsr0h
  1611  0013CE  C016  FFE9         	movff	??_DisInt+2,fsr0l
  1612  0013D2  C015  FFFB         	movff	??_DisInt+1,pclatu
  1613  0013D6  C014  FFFA         	movff	??_DisInt,pclath
  1614  0013DA  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1615  0013DC  0011               	retfie		f
  1616  0013DE                     __end_of_DisInt:
  1617                           	opt stack 0
  1618                           pclatu	equ	0xFFB
  1619                           pclath	equ	0xFFA
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           prodh	equ	0xFF4
  1625                           prodl	equ	0xFF3
  1626                           postinc0	equ	0xFEE
  1627                           fsr0h	equ	0xFEA
  1628                           fsr0l	equ	0xFE9
  1629                           wreg	equ	0xFE8
  1630                           postdec1	equ	0xFE5
  1631                           fsr1h	equ	0xFE2
  1632                           fsr1l	equ	0xFE1
  1633                           indf2	equ	0xFDF
  1634                           postinc2	equ	0xFDE
  1635                           fsr2h	equ	0xFDA
  1636                           fsr2l	equ	0xFD9
  1637                           status	equ	0xFD8
  1638                           
  1639 ;; *************** function i2_lcd_init *****************
  1640 ;; Defined at:
  1641 ;;		line 83 in file "lcd_utilities.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  lcd_init        2    5[COMRAM] int 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;		None               void
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1655 ;;      Params:         0       0       0       0       0       0       0       0       0
  1656 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1657 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1658 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1659 ;;Total ram usage:        3 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    2
  1662 ;; This function calls:
  1663 ;;		i2_lcd_write_cmd
  1664 ;; This function is called by:
  1665 ;;		_DisInt
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text7
  1670  0013DE                     __ptext7:
  1671                           	opt stack 0
  1672  0013DE                     i2_lcd_init:
  1673                           	opt stack 24
  1674                           
  1675                           ;lcd_utilities.c: 85: int i;
  1676                           ;lcd_utilities.c: 86: TRISD = 0x00;
  1677                           
  1678                           ;incstack = 0
  1679  0013DE  0E00               	movlw	0
  1680  0013E0  6E95               	movwf	3989,c	;volatile
  1681                           
  1682                           ;lcd_utilities.c: 87: PORTD = 0x00;
  1683  0013E2  0E00               	movlw	0
  1684  0013E4  6E83               	movwf	3971,c	;volatile
  1685                           
  1686                           ;lcd_utilities.c: 88: PORTDbits.RD4 = 0;
  1687  0013E6  9883               	bcf	3971,4,c	;volatile
  1688                           
  1689                           ;lcd_utilities.c: 89: PORTDbits.RD6 = 0;
  1690  0013E8  9C83               	bcf	3971,6,c	;volatile
  1691                           
  1692                           ;lcd_utilities.c: 90: PORTDbits.RD5 = 0;
  1693  0013EA  9A83               	bcf	3971,5,c	;volatile
  1694                           
  1695                           ;lcd_utilities.c: 92: for(i=0;i<100;i++)
  1696  0013EC  0E00               	movlw	0
  1697  0013EE  6E07               	movwf	i2lcd_init@i+1,c
  1698  0013F0  0E00               	movlw	0
  1699  0013F2  6E06               	movwf	i2lcd_init@i,c
  1700  0013F4                     i2l1238:
  1701  0013F4  BE07               	btfsc	i2lcd_init@i+1,7,c
  1702  0013F6  D006               	goto	i2l1242
  1703  0013F8  5007               	movf	i2lcd_init@i+1,w,c
  1704  0013FA  E10F               	bnz	i2l1246
  1705  0013FC  0E64               	movlw	100
  1706  0013FE  5C06               	subwf	i2lcd_init@i,w,c
  1707  001400  B0D8               	btfsc	status,0,c
  1708  001402  D00B               	goto	i2l1246
  1709  001404                     i2l1242:
  1710                           
  1711                           ;lcd_utilities.c: 93: _delay((unsigned long)((10)*(48000000/4000.0)));
  1712  001404  0E9C               	movlw	156
  1713  001406  6E05               	movwf	??i2_lcd_init& (0+255),c
  1714  001408  0ED7               	movlw	215
  1715  00140A                     i2u120_47:
  1716  00140A  2EE8               	decfsz	wreg,f,c
  1717  00140C  D7FE               	goto	i2u120_47
  1718  00140E  2E05               	decfsz	??i2_lcd_init& (0+255),f,c
  1719  001410  D7FC               	goto	i2u120_47
  1720  001412  F000               	nop	
  1721  001414  4A06               	infsnz	i2lcd_init@i,f,c
  1722  001416  2A07               	incf	i2lcd_init@i+1,f,c
  1723  001418  D7ED               	goto	i2l1238
  1724  00141A                     i2l1246:
  1725                           
  1726                           ;lcd_utilities.c: 106: lcd_write_cmd(0x33);
  1727  00141A  0E33               	movlw	51
  1728  00141C  EC60  F00A         	call	i2_lcd_write_cmd
  1729                           
  1730                           ;lcd_utilities.c: 107: lcd_write_cmd(0x32);
  1731  001420  0E32               	movlw	50
  1732  001422  EC60  F00A         	call	i2_lcd_write_cmd
  1733                           
  1734                           ;lcd_utilities.c: 109: lcd_write_cmd(0x28);
  1735  001426  0E28               	movlw	40
  1736  001428  EC60  F00A         	call	i2_lcd_write_cmd
  1737                           
  1738                           ;lcd_utilities.c: 112: lcd_write_cmd(0x0E);
  1739  00142C  0E0E               	movlw	14
  1740  00142E  EC60  F00A         	call	i2_lcd_write_cmd
  1741                           
  1742                           ;lcd_utilities.c: 115: lcd_write_cmd(0x06);
  1743  001432  0E06               	movlw	6
  1744  001434  EC60  F00A         	call	i2_lcd_write_cmd
  1745                           
  1746                           ;lcd_utilities.c: 119: lcd_write_cmd(0x01);
  1747  001438  0E01               	movlw	1
  1748  00143A  EC60  F00A         	call	i2_lcd_write_cmd
  1749                           
  1750                           ;lcd_utilities.c: 121: _delay((unsigned long)((10)*(48000000/4000.0)));
  1751  00143E  0E9C               	movlw	156
  1752  001440  6E05               	movwf	??i2_lcd_init& (0+255),c
  1753  001442  0ED7               	movlw	215
  1754  001444                     i2u121_47:
  1755  001444  2EE8               	decfsz	wreg,f,c
  1756  001446  D7FE               	goto	i2u121_47
  1757  001448  2E05               	decfsz	??i2_lcd_init& (0+255),f,c
  1758  00144A  D7FC               	goto	i2u121_47
  1759  00144C  F000               	nop	
  1760  00144E  0012               	return		;funcret
  1761  001450                     __end_ofi2_lcd_init:
  1762                           	opt stack 0
  1763                           pclatu	equ	0xFFB
  1764                           pclath	equ	0xFFA
  1765                           tblptru	equ	0xFF8
  1766                           tblptrh	equ	0xFF7
  1767                           tblptrl	equ	0xFF6
  1768                           tablat	equ	0xFF5
  1769                           prodh	equ	0xFF4
  1770                           prodl	equ	0xFF3
  1771                           postinc0	equ	0xFEE
  1772                           fsr0h	equ	0xFEA
  1773                           fsr0l	equ	0xFE9
  1774                           wreg	equ	0xFE8
  1775                           postdec1	equ	0xFE5
  1776                           fsr1h	equ	0xFE2
  1777                           fsr1l	equ	0xFE1
  1778                           indf2	equ	0xFDF
  1779                           postinc2	equ	0xFDE
  1780                           fsr2h	equ	0xFDA
  1781                           fsr2l	equ	0xFD9
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function i2_lcd_write_cmd *****************
  1785 ;; Defined at:
  1786 ;;		line 18 in file "lcd_utilities.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  cmd             1    wreg     unsigned char 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  cmd             1    2[COMRAM] unsigned char 
  1791 ;;  lcd_write_cm    1    3[COMRAM] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;		None               void
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0
  1802 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1803 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1804 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1805 ;;Total ram usage:        3 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    1
  1808 ;; This function calls:
  1809 ;;		i2_lcd_strobe
  1810 ;; This function is called by:
  1811 ;;		i2_lcd_init
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text8
  1816  0014C0                     __ptext8:
  1817                           	opt stack 0
  1818  0014C0                     i2_lcd_write_cmd:
  1819                           	opt stack 24
  1820                           
  1821                           ;incstack = 0
  1822                           ;i2lcd_write_cmd@cmd stored from wreg
  1823  0014C0  6E03               	movwf	i2lcd_write_cmd@cmd,c
  1824                           
  1825                           ;lcd_utilities.c: 20: unsigned char temp2;
  1826                           ;lcd_utilities.c: 21: PORTDbits.RD6 = 0;
  1827  0014C2  9C83               	bcf	3971,6,c	;volatile
  1828                           
  1829                           ;lcd_utilities.c: 22: _delay((unsigned long)((4)*(48000000/4000.0)));
  1830  0014C4  0E3F               	movlw	63
  1831  0014C6  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  1832  0014C8  0E55               	movlw	85
  1833  0014CA                     i2u122_47:
  1834  0014CA  2EE8               	decfsz	wreg,f,c
  1835  0014CC  D7FE               	goto	i2u122_47
  1836  0014CE  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  1837  0014D0  D7FC               	goto	i2u122_47
  1838  0014D2  F000               	nop	
  1839                           
  1840                           ;lcd_utilities.c: 23: temp2 = cmd;
  1841  0014D4  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  1842                           
  1843                           ;lcd_utilities.c: 24: temp2 = temp2 >> 4;
  1844  0014D8  3804               	swapf	i2lcd_write_cmd@temp2,w,c
  1845  0014DA  0B0F               	andlw	15
  1846  0014DC  6E04               	movwf	i2lcd_write_cmd@temp2,c
  1847                           
  1848                           ;lcd_utilities.c: 25: PORTD = temp2 & 0x0F;
  1849  0014DE  5004               	movf	i2lcd_write_cmd@temp2,w,c
  1850  0014E0  0B0F               	andlw	15
  1851  0014E2  6E83               	movwf	3971,c	;volatile
  1852                           
  1853                           ;lcd_utilities.c: 27: _delay((unsigned long)((8)*(48000000/4000.0)));
  1854  0014E4  0E7D               	movlw	125
  1855  0014E6  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  1856  0014E8  0EAC               	movlw	172
  1857  0014EA                     i2u123_47:
  1858  0014EA  2EE8               	decfsz	wreg,f,c
  1859  0014EC  D7FE               	goto	i2u123_47
  1860  0014EE  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  1861  0014F0  D7FC               	goto	i2u123_47
  1862                           
  1863                           ;lcd_utilities.c: 28: lcd_strobe();
  1864  0014F2  EC3C  F00B         	call	i2_lcd_strobe	;wreg free
  1865                           
  1866                           ;lcd_utilities.c: 30: _delay((unsigned long)((8)*(48000000/4000.0)));
  1867  0014F6  0E7D               	movlw	125
  1868  0014F8  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  1869  0014FA  0EAC               	movlw	172
  1870  0014FC                     i2u124_47:
  1871  0014FC  2EE8               	decfsz	wreg,f,c
  1872  0014FE  D7FE               	goto	i2u124_47
  1873  001500  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  1874  001502  D7FC               	goto	i2u124_47
  1875                           
  1876                           ;lcd_utilities.c: 32: temp2 = cmd;
  1877  001504  C003  F004         	movff	i2lcd_write_cmd@cmd,i2lcd_write_cmd@temp2
  1878                           
  1879                           ;lcd_utilities.c: 33: PORTD = temp2 & 0x0F;
  1880  001508  5004               	movf	i2lcd_write_cmd@temp2,w,c
  1881  00150A  0B0F               	andlw	15
  1882  00150C  6E83               	movwf	3971,c	;volatile
  1883                           
  1884                           ;lcd_utilities.c: 35: _delay((unsigned long)((8)*(48000000/4000.0)));
  1885  00150E  0E7D               	movlw	125
  1886  001510  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  1887  001512  0EAC               	movlw	172
  1888  001514                     i2u125_47:
  1889  001514  2EE8               	decfsz	wreg,f,c
  1890  001516  D7FE               	goto	i2u125_47
  1891  001518  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  1892  00151A  D7FC               	goto	i2u125_47
  1893                           
  1894                           ;lcd_utilities.c: 36: lcd_strobe();
  1895  00151C  EC3C  F00B         	call	i2_lcd_strobe	;wreg free
  1896                           
  1897                           ;lcd_utilities.c: 37: _delay((unsigned long)((8)*(48000000/4000.0)));
  1898  001520  0E7D               	movlw	125
  1899  001522  6E02               	movwf	??i2_lcd_write_cmd& (0+255),c
  1900  001524  0EAC               	movlw	172
  1901  001526                     i2u126_47:
  1902  001526  2EE8               	decfsz	wreg,f,c
  1903  001528  D7FE               	goto	i2u126_47
  1904  00152A  2E02               	decfsz	??i2_lcd_write_cmd& (0+255),f,c
  1905  00152C  D7FC               	goto	i2u126_47
  1906  00152E  0012               	return		;funcret
  1907  001530                     __end_ofi2_lcd_write_cmd:
  1908                           	opt stack 0
  1909                           pclatu	equ	0xFFB
  1910                           pclath	equ	0xFFA
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           prodh	equ	0xFF4
  1916                           prodl	equ	0xFF3
  1917                           postinc0	equ	0xFEE
  1918                           fsr0h	equ	0xFEA
  1919                           fsr0l	equ	0xFE9
  1920                           wreg	equ	0xFE8
  1921                           postdec1	equ	0xFE5
  1922                           fsr1h	equ	0xFE2
  1923                           fsr1l	equ	0xFE1
  1924                           indf2	equ	0xFDF
  1925                           postinc2	equ	0xFDE
  1926                           fsr2h	equ	0xFDA
  1927                           fsr2l	equ	0xFD9
  1928                           status	equ	0xFD8
  1929                           
  1930 ;; *************** function i2_lcd_strobe *****************
  1931 ;; Defined at:
  1932 ;;		line 73 in file "lcd_utilities.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;		None               void
  1939 ;; Registers used:
  1940 ;;		wreg
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1948 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1949 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1950 ;;Total ram usage:        1 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		i2_lcd_write_cmd
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text9
  1960  001678                     __ptext9:
  1961                           	opt stack 0
  1962  001678                     i2_lcd_strobe:
  1963                           	opt stack 24
  1964                           
  1965                           ;lcd_utilities.c: 75: PORTDbits.RD4 = 1;
  1966                           
  1967                           ;incstack = 0
  1968  001678  8883               	bsf	3971,4,c	;volatile
  1969                           
  1970                           ;lcd_utilities.c: 76: _delay((unsigned long)((8)*(48000000/4000.0)));
  1971  00167A  0E7D               	movlw	125
  1972  00167C  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  1973  00167E  0EAC               	movlw	172
  1974  001680                     i2u127_47:
  1975  001680  2EE8               	decfsz	wreg,f,c
  1976  001682  D7FE               	goto	i2u127_47
  1977  001684  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  1978  001686  D7FC               	goto	i2u127_47
  1979                           
  1980                           ;lcd_utilities.c: 77: PORTDbits.RD4 = 0;
  1981  001688  9883               	bcf	3971,4,c	;volatile
  1982                           
  1983                           ;lcd_utilities.c: 78: _delay((unsigned long)((8)*(48000000/4000.0)));
  1984  00168A  0E7D               	movlw	125
  1985  00168C  6E01               	movwf	??i2_lcd_strobe& (0+255),c
  1986  00168E  0EAC               	movlw	172
  1987  001690                     i2u128_47:
  1988  001690  2EE8               	decfsz	wreg,f,c
  1989  001692  D7FE               	goto	i2u128_47
  1990  001694  2E01               	decfsz	??i2_lcd_strobe& (0+255),f,c
  1991  001696  D7FC               	goto	i2u128_47
  1992  001698  0012               	return		;funcret
  1993  00169A                     __end_ofi2_lcd_strobe:
  1994                           	opt stack 0
  1995                           pclatu	equ	0xFFB
  1996                           pclath	equ	0xFFA
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           prodh	equ	0xFF4
  2002                           prodl	equ	0xFF3
  2003                           postinc0	equ	0xFEE
  2004                           fsr0h	equ	0xFEA
  2005                           fsr0l	equ	0xFE9
  2006                           wreg	equ	0xFE8
  2007                           postdec1	equ	0xFE5
  2008                           fsr1h	equ	0xFE2
  2009                           fsr1l	equ	0xFE1
  2010                           indf2	equ	0xFDF
  2011                           postinc2	equ	0xFDE
  2012                           fsr2h	equ	0xFDA
  2013                           fsr2l	equ	0xFD9
  2014                           status	equ	0xFD8
  2015                           
  2016 ;; *************** function i2_getkey *****************
  2017 ;; Defined at:
  2018 ;;		line 17 in file "keypad_utilities.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;  getkey         18    0[COMRAM] const unsigned char [18]
  2023 ;;  getkey          1   18[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      unsigned char 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0
  2034 ;;      Locals:        19       0       0       0       0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2036 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2037 ;;Total ram usage:       19 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_DisInt
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text10
  2047  00161C                     __ptext10:
  2048                           	opt stack 0
  2049  00161C                     i2_getkey:
  2050                           	opt stack 26
  2051                           
  2052                           ;keypad_utilities.c: 19: const unsigned char lookup[] = "123F456E789DA0BC ";
  2053                           
  2054                           ;incstack = 0
  2055  00161C  0E1B               	movlw	low getkey@F4444
  2056  00161E  6EF6               	movwf	tblptrl,c
  2057  001620                     	if	1	;There is more than 1 active tblptr byte
  2058  001620  0E10               	movlw	high getkey@F4444
  2059  001622  6EF7               	movwf	tblptrh,c
  2060  001624                     	endif
  2061  001624                     	if	0	;There are less than 3 active tblptr bytes
  2062  001624                     	endif
  2063  001624  EE20  F001         	lfsr	2,i2getkey@lookup
  2064  001628  0E11               	movlw	17
  2065  00162A                     i2u77_40:
  2066  00162A  0009               	tblrd		*+
  2067  00162C  CFF5 FFDE          	movff	tablat,postinc2
  2068  001630  06E8               	decf	wreg,f,c
  2069  001632  E2FB               	bc	i2u77_40
  2070  001634                     i2l128:
  2071  001634  AA81               	btfss	3969,5,c	;volatile
  2072  001636  D7FE               	goto	i2l128
  2073                           
  2074                           ;keypad_utilities.c: 22: keycode=PORTB & 0x0F;
  2075  001638  5081               	movf	3969,w,c	;volatile
  2076  00163A  0B0F               	andlw	15
  2077  00163C  6E13               	movwf	i2getkey@keycode,c
  2078  00163E                     i2l131:
  2079  00163E  BA81               	btfsc	3969,5,c	;volatile
  2080  001640  D7FE               	goto	i2l131
  2081                           
  2082                           ;keypad_utilities.c: 25: return(lookup[keycode]);
  2083  001642  5013               	movf	i2getkey@keycode,w,c
  2084  001644  0D01               	mullw	1
  2085  001646  0E01               	movlw	low i2getkey@lookup
  2086  001648  24F3               	addwf	prodl,w,c
  2087  00164A  6ED9               	movwf	fsr2l,c
  2088  00164C  0E00               	movlw	high i2getkey@lookup
  2089  00164E  20F4               	addwfc	prodh,w,c
  2090  001650  6EDA               	movwf	fsr2h,c
  2091  001652  50DF               	movf	indf2,w,c
  2092  001654  0012               	return	
  2093  001656                     __end_ofi2_getkey:
  2094                           	opt stack 0
  2095                           pclatu	equ	0xFFB
  2096                           pclath	equ	0xFFA
  2097                           tblptru	equ	0xFF8
  2098                           tblptrh	equ	0xFF7
  2099                           tblptrl	equ	0xFF6
  2100                           tablat	equ	0xFF5
  2101                           prodh	equ	0xFF4
  2102                           prodl	equ	0xFF3
  2103                           postinc0	equ	0xFEE
  2104                           fsr0h	equ	0xFEA
  2105                           fsr0l	equ	0xFE9
  2106                           wreg	equ	0xFE8
  2107                           postdec1	equ	0xFE5
  2108                           fsr1h	equ	0xFE2
  2109                           fsr1l	equ	0xFE1
  2110                           indf2	equ	0xFDF
  2111                           postinc2	equ	0xFDE
  2112                           fsr2h	equ	0xFDA
  2113                           fsr2l	equ	0xFD9
  2114                           status	equ	0xFD8
  2115                           pclatu	equ	0xFFB
  2116                           pclath	equ	0xFFA
  2117                           tblptru	equ	0xFF8
  2118                           tblptrh	equ	0xFF7
  2119                           tblptrl	equ	0xFF6
  2120                           tablat	equ	0xFF5
  2121                           prodh	equ	0xFF4
  2122                           prodl	equ	0xFF3
  2123                           postinc0	equ	0xFEE
  2124                           fsr0h	equ	0xFEA
  2125                           fsr0l	equ	0xFE9
  2126                           wreg	equ	0xFE8
  2127                           postdec1	equ	0xFE5
  2128                           fsr1h	equ	0xFE2
  2129                           fsr1l	equ	0xFE1
  2130                           indf2	equ	0xFDF
  2131                           postinc2	equ	0xFDE
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           status	equ	0xFD8
  2135                           
  2136                           	psect	rparam
  2137  0000                     pclatu	equ	0xFFB
  2138                           pclath	equ	0xFFA
  2139                           tblptru	equ	0xFF8
  2140                           tblptrh	equ	0xFF7
  2141                           tblptrl	equ	0xFF6
  2142                           tablat	equ	0xFF5
  2143                           prodh	equ	0xFF4
  2144                           prodl	equ	0xFF3
  2145                           postinc0	equ	0xFEE
  2146                           fsr0h	equ	0xFEA
  2147                           fsr0l	equ	0xFE9
  2148                           wreg	equ	0xFE8
  2149                           postdec1	equ	0xFE5
  2150                           fsr1h	equ	0xFE2
  2151                           fsr1l	equ	0xFE1
  2152                           indf2	equ	0xFDF
  2153                           postinc2	equ	0xFDE
  2154                           fsr2h	equ	0xFDA
  2155                           fsr2l	equ	0xFD9
  2156                           status	equ	0xFD8
  2157                           
  2158                           	psect	temp
  2159  00003E                     btemp:
  2160                           	opt stack 0
  2161  00003E                     	ds	1
  2162  0000                     int$flags	set	btemp
  2163                           pclatu	equ	0xFFB
  2164                           pclath	equ	0xFFA
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           postinc0	equ	0xFEE
  2172                           fsr0h	equ	0xFEA
  2173                           fsr0l	equ	0xFE9
  2174                           wreg	equ	0xFE8
  2175                           postdec1	equ	0xFE5
  2176                           fsr1h	equ	0xFE2
  2177                           fsr1l	equ	0xFE1
  2178                           indf2	equ	0xFDF
  2179                           postinc2	equ	0xFDE
  2180                           fsr2h	equ	0xFDA
  2181                           fsr2l	equ	0xFD9
  2182                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    18
    Data        88
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      61
    BANK0           160     19     103
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_write_cmd
    _main->_lcd_write_data
    _lcd_write_data->_lcd_strobe
    _lcd_init->_lcd_write_cmd
    _lcd_write_cmd->_lcd_strobe

Critical Paths under _DisInt in COMRAM

    _DisInt->i2_getkey
    i2_lcd_init->i2_lcd_write_cmd
    i2_lcd_write_cmd->i2_lcd_strobe

Critical Paths under _main in BANK0

    _main->_getkey

Critical Paths under _DisInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _DisInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _DisInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _DisInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _DisInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _DisInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _DisInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _DisInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     638
                             _getkey
                           _lcd_init
                      _lcd_write_cmd
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (1) _lcd_write_data                                       3     3      0     164
                                             34 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     232
                                              0 BANK0      3     3      0
                      _lcd_write_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_write_cmd                                        3     3      0     164
                                             34 COMRAM     3     3      0
                         _lcd_strobe
 ---------------------------------------------------------------------------------
 (2) _lcd_strobe                                           1     1      0       0
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _getkey                                              19    19      0      78
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _DisInt                                              14    14      0     205
                                             19 COMRAM    14    14      0
                           i2_getkey
                         i2_lcd_init
 ---------------------------------------------------------------------------------
 (5) i2_lcd_init                                           3     3      0     159
                                              4 COMRAM     3     3      0
                    i2_lcd_write_cmd
 ---------------------------------------------------------------------------------
 (6) i2_lcd_write_cmd                                      3     3      0     113
                                              1 COMRAM     3     3      0
                       i2_lcd_strobe
 ---------------------------------------------------------------------------------
 (7) i2_lcd_strobe                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i2_getkey                                            19    19      0      46
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getkey
   _lcd_init
     _lcd_write_cmd
       _lcd_strobe
   _lcd_write_cmd
     _lcd_strobe
   _lcd_write_data
     _lcd_strobe

 _DisInt (ROOT)
   i2_getkey
   i2_lcd_init
     i2_lcd_write_cmd
       i2_lcd_strobe

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      67       5       64.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      3D       1       64.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A4      20        0.0%
DATA                 0      0      A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jul 15 14:23:22 2020

                       _i 002A                        l96 124E                        _h1 0026  
                      _h2 0028                        _m1 002C                        _m2 002E  
__size_ofi2_lcd_write_cmd 0070                       l131 1602                       l128 15F6  
                     u740 15EC                       u950 1166                       u970 119E  
                     _key 0037                       prod 000FF3                       wreg 000FE8  
             getkey@F4444 101B                i2_lcd_init 13DE                      l1600 110A  
                    l1610 113A                      l1602 1110                      l1460 132E  
                    l1452 12FE                      l1620 116A                      l1612 1142  
                    l1614 114A                      l1606 1120                      l1550 1058  
                    l1542 1034                      l1456 1314                      l1640 11C2  
                    l1632 11A2                      l1608 1130                      l1562 1082  
                    l1546 1048                      l1660 120E                      l1652 11EE  
                    l1636 11B0                      l1628 1190                      l1590 10E6  
                    l1582 10C6                      l1566 1090                      l1558 1074  
                    l1656 11FC                      l1648 11E8                      l1576 10AE  
                    l1674 123A                      l1586 10D6                      l1668 1234  
                    u1107 12DA                      u1117 131C                      u1127 135A  
                    u1047 125C                      u1137 145A                      u1057 127C  
                    u1147 147A                      u1067 128C                      u1157 148C  
                    u1077 129E                      u1167 14A4                      u1087 12B6  
                    u1177 14B6                      u1097 12C6                      u1187 165E  
                    u1197 166E    __end_of_lcd_write_data 12E6                      _main 102E  
                    _loop 003A                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr0l 000FE9                      fsr2h 000FDA                      fsr1l 000FE1  
                    indf2 000FDF                      fsr2l 000FD9                      btemp 003E  
                    pclat 000FFA                      prodh 000FF4                      prodl 000FF3  
          ?_lcd_write_cmd 0001                      start 1016              ___param_bank 000010  
                   ?_main 0001                     i2l131 163E                     i2l128 1634  
                   _PORTB 000F81                     _PORTD 000F83                     _TRISD 000F95  
        lcd_write_cmd@cmd 0024                     _loop1 003C                     _state 0030  
                   tablat 000FF5           ?_lcd_write_data 0001                     status 000FD8  
        __end_ofi2_getkey 1656     __size_ofi2_lcd_strobe 0022              getkey@lookup 00B4  
         __initialization 1530              __end_of_main 1252                    ??_main 0026  
           __activetblptr 000002               i2lcd_init@i 0006         ??i2_lcd_write_cmd 0002  
             ?i2_lcd_init 0001              i2_lcd_strobe 1678                    i2l1242 1404  
                  i2l1246 141A                    i2l1238 13F4           ??_lcd_write_cmd 0023  
                  _DisInt 1008          __end_of_lcd_init 1366                    _getkey 15DE  
                  _comopt 0036                    clear_0 1536                    _state1 0032  
                  _state2 0034                    _wrtopt 0039              __pdataCOMRAM 003A  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                __accesstop 0060   __end_of__initialization 157C  
           getkey@keycode 00C6             ___rparam_used 000001            __pcstackCOMRAM 0001  
            __pidataBANK0 158A       __size_ofi2_lcd_init 0072                 ?i2_getkey 0001  
                 ?_DisInt 0001            i2getkey@lookup 0001                   ?_getkey 0001  
              ??i2_getkey 0001                   i2u77_40 162A          ??_lcd_write_data 0023  
              _lcd_strobe 1656                 ?_lcd_init 0001        lcd_write_data@data 0024  
      lcd_write_cmd@temp2 0025           __size_of_DisInt 03D6                   __Hparam 0000  
                 __Lparam 0000              __psmallconst 101A           __size_of_getkey 003E  
         i2_lcd_write_cmd 14C0                   __pcinit 1530                   __ramtop 0800  
                 __ptext0 102E                   __ptext1 1252                   __ptext2 12E6  
                 __ptext3 1450                   __ptext4 1656                   __ptext5 15DE  
                 __ptext7 13DE                   __ptext8 14C0                   __ptext9 1678  
                 _outchar 0038              ??i2_lcd_init 0005                ??_lcd_init 00B4  
          __pintcode_body 1366      end_of_initialization 157C        i2lcd_write_cmd@cmd 0003  
           __Lmediumconst 0000                   int_func 1366                   postdec1 000FE5  
                 postinc0 000FEE                   postinc2 000FDE        __end_ofi2_lcd_init 1450  
               _PORTBbits 000F81                 _PORTDbits 000F83               ?_lcd_strobe 0001  
   __end_of_lcd_write_cmd 14C0            __end_of_DisInt 13DE   __end_ofi2_lcd_write_cmd 1530  
           __pidataCOMRAM 169A            __end_of_getkey 161C       start_initialization 1530  
       __size_ofi2_getkey 003A                  ??_DisInt 0014               __pdataBANK0 0060  
                ??_getkey 0022       __size_of_lcd_strobe 0022               __pbssCOMRAM 0026  
           __pcstackBANK0 00B4         __size_of_lcd_init 0080          ?i2_lcd_write_cmd 0001  
               __pintcode 1008           i2getkey@keycode 0013               __smallconst 101A  
           ?i2_lcd_strobe 0001                  i2u120_47 140A                  i2u121_47 1444  
                i2u122_47 14CA                  i2u123_47 14EA                  i2u124_47 14FC  
                i2u125_47 1514                  i2u126_47 1526                  i2u127_47 1680  
                i2u128_47 1690                 lcd_init@i 00B5                  i2_getkey 161C  
     lcd_write_data@temp1 0025            ??i2_lcd_strobe 0001              ??_lcd_strobe 0022  
               copy_data0 1550                 copy_data1 1570      i2lcd_write_cmd@temp2 0004  
                _Message1 0060                  _Message2 0075                  _Message3 008A  
                _Message4 009F   __size_of_lcd_write_data 0094                  __Hrparam 0000  
                __Lrparam 0000        __end_of_lcd_strobe 1678                  __ptext10 161C  
                _lcd_init 12E6             __size_of_main 0224                  int$flags 003E  
  __size_of_lcd_write_cmd 0070                  intlevel2 0000       __end_ofgetkey@F4444 102D  
    __end_ofi2_lcd_strobe 169A            _lcd_write_data 1252             _lcd_write_cmd 1450  
